[
    {
        "id": "299a5e821c565bab",
        "type": "tab",
        "label": "DAYWISE",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5ccdd863f339e5b3",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b3922748f6dbb361",
        "type": "tab",
        "label": "BREAK DOWN",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a09542284723710b",
        "type": "tab",
        "label": "HISTORY",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "050fb431a7ca83a4",
        "type": "tab",
        "label": "MACHINE_SETT",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3bbea1871a3904e1",
        "type": "tab",
        "label": "DATA_UPDATE",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "378dbc1dc89874c8",
        "type": "tab",
        "label": "GAS_PRODUCTION",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7fbd92b77e7e69c1",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "990647560aae96b0",
        "type": "tab",
        "label": "Flow 3",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "cf444a0c82b7cb13",
        "type": "tab",
        "label": "Multiple Bar Charts",
        "disabled": false,
        "info": ""
    },
    {
        "id": "2924702c.b33a7",
        "type": "subflow",
        "name": "ui-table handler",
        "info": "# ui-table handler\nUniversal handler for ui-table.\n## features\n- buffer table data\n- add or update individual rows or cells of the table\n- delete rows\n- clear tableData\n- handle column width\n- handle column order\n- hide und unhide columns\n- hide and unhide rows\n- records row order\n- support for nested columns [(column groups)](http://tabulator.info/examples/4.7#column-groups)\n- support for child rows (_children) [(nested data trees)](http://tabulator.info/examples/4.7#tree)\n\nFor real life example see:\n\n**syslog server** for logfile like table with filters\n\n**remote device table** for dynamically updated table with context menues\n\n**irrigation system** for sortable rows\n\n## sending data to ui-tabel\n\n- sending an `array` as discribed in ui-table will replace the complete table and delete all table edits\n  \n  if `msg.keepEdits=true` is added the existing edits will be kept.\n- send an `object` containing the updated properties of a table row by sending msg.<tableDataProp>.\n\n  The table is updated using the `updateOrAddData` command. You can alter the command used by adding the `msg.tabulatorCommand` and `msg.tabulatorParameter`\n\n```\nmsg.tabulatorCommand=\"addData\";\nmsg.tabulatorParameter=[true];\n```\n## configuration\n- `tabulator` json formatted object containing configuration of the table. See ui-table for more details.\n- `property` property of the msg object that contains the data to be passed to ui-table. I.e. *state* `msg.state`\n- `index` index column to identify individual rows. Each message containing data must have a unique `msg.topic` to identify the row. Messages without this `msg.topic` will be droped. It is not nessesary but possible to display the index column in the table. Do not enable editing on this column otherwise you will loose the connection and another row will be added to the table as soon as a new message arrives!\n\n   Defaults to *$topic* `msg.state.$topic`\n- `maxRows`maximum number of rows held by table widget. If grater than **0** the amount of rows in ui-table is limited. For this to work the index row must be a Number. ´rows < currentID-maxRows´ will be deleted.\n- `maxStore`maximum number of rows stored by this node for replay if a client connects. If grater than **0** the amount of rows in flow context is limited. for this to work the index row must be a Number. ´rows < currentID-maxStore´ will be deleted.\n- `dashboard` name of the dashboard tab to only update the table if the dashboard is visible. If empty the table will be updated on every tab change and connect.\n- `context` configuration of context data. The subflow will save or cache data in the flows context using `$parent.`. \n   **tableData** caches the incoming data to restore it on `ui-control´ *change* messages.\n   **tableConfig** saves column width and order to save the interactive table layot\n   **tableEdit** saves edits on the table data otherwise it would be overwritten when new data arrives\n```json\n{\n    \"tableData\": {\n        \"name\": \"tableData\"\n    },\n    \"tableConfig\": {\n        \"name\": \"tableConfig\",\n        \"storage\": \"file\"\n    },\n    \"tableEdit\": {\n        \"name\": \"tableEdit\",\n        \"storage\": \"file\"\n    }\n}\n```\n\n## commands\ncommands can be passed by sending a object as `msg.payload`\n\n```json\n{\n    \"command\": \"delete\",\n    \"object\": \"columnOrder\"\n}\n```\n\n- `deleteTable` tableCache\n- `deleteRow` delete single row. `object` matching index property\n- `ignoreRow` delete single row and put it on an ignore list. `object` matching index property\n- `unIgnoreRow`remove row from the ignore list.  `object` matching index property\n- `unIgnoreRows`delte the ignore list. \n- `deleteRowOrder` delete custom row order\n- `deleteColumnOrder` delete custom column order\n  This is important if you add or delete columns in the tabulator config otherwise the columns most likely don`t show up\n- `deleteColumnWidth` delete custom column width\n- `columnHide` hide a column. `object` matching column field\n- `columnUnHide` unhide a column. `object` matching column field\n- `columnsUnHide` unhide all hidden columns.\n- `setMaxStore` set maximum amount of rows in cache\n- `setMaxDisplay` set maximum amout of rows in ui-table\n- `getTable` get table data (as displayed) as an array (on 2nd output)\n \n## background\nui-table warps the powerfull tabluator library.  This subflow makes it easier to unleash the powerfull features of ui-table",
        "category": "dashboard",
        "in": [
            {
                "x": 54,
                "y": 85,
                "wires": [
                    {
                        "id": "5eb0bd6b.74b794"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 360,
                "y": 85,
                "wires": [
                    {
                        "id": "5eb0bd6b.74b794",
                        "port": 1
                    }
                ]
            },
            {
                "x": 360,
                "y": 136,
                "wires": [
                    {
                        "id": "5eb0bd6b.74b794",
                        "port": 2
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "tabulator",
                "type": "json",
                "value": "{\"tabulator\":{\"responsiveLayout\":\"collapse\",\"responsiveLayoutCollapseStartOpen\":false,\"index\":\"$name\",\"layout\":\"fitColumns\",\"movableColumns\":true,\"groupBy\":\"\",\"columnResized\":\"function(column){     var newColumn = {         field: column._column.field,         visible: column._column.visible,         width: column._column.width,         widthFixed: column._column.widthFixed,         widthStyled: column._column.widthStyled     }; this.send({topic:this.config.topic,ui_control:{callback:'columnResized',columnWidths:newColumn}}); }\",\"columnMoved\":\"function(column, columns){     var newColumns=[];     columns.forEach(function (column) {         newColumns.push({'field': column._column.definition.field, 'title': column._column.definition.title});     });     this.send({topic:this.config.topic,ui_control:{callback:'columnMoved',columns:newColumns}}); }\",\"rowFormatter\":\"function(row){     var data = row.getData();     switch (data.$state) {         case \\\"lost\\\":             row.getElement().style.backgroundColor = \\\"#9e2e66\\\";             row.getElement().style.color = \\\"#a6a6a6\\\";             break;         case \\\"sleeping\\\":             row.getElement().style.backgroundColor = \\\"#336699\\\";             break;         case \\\"disconnected\\\":             row.getElement().style.backgroundColor = \\\"#cc3300\\\";             row.getElement().style.color = \\\"#a6a6a6\\\";             break;         case \\\"alert\\\":             row.getElement().style.backgroundColor = \\\"#A6A6DF\\\";             break;         case \\\"init\\\":             row.getElement().style.backgroundColor = \\\"#f2f20d\\\";             break;         case \\\"ready\\\":             row.getElement().style.backgroundColor = \\\"\\\";             row.getElement().style.color = \\\"\\\";             break;         } }\",\"columns\":[{\"formatter\":\"responsiveCollapse\",\"width\":30,\"minWidth\":30,\"align\":\"center\",\"resizable\":false,\"headerSort\":false,\"frozen\":true,\"title\":\"expand\",\"field\":\"expand\",\"headerVertical\":\"flip\"},{\"formatter\":\"function(cell, formatterParams, onRendered) {      var html = cell.getValue(); return html;  }\",\"title\":\"State\",\"field\":\"$stateIcon\",\"width\":100,\"frozen\":true,\"headerVertical\":\"flip\"},{\"formatter\":\"function(cell, formatterParams, onRendered) {     var html = cell.getValue(); return html;  }\",\"title\":\"Signal\",\"field\":\"signalIcon\",\"width\":100,\"frozen\":true,\"headerVertical\":\"flip\"},{\"title\":\"Name\",\"field\":\"$name\",\"width\":100,\"frozen\":true,\"headerVertical\":\"flip\"},{\"title\":\"State\",\"field\":\"$state\",\"width\":100,\"align\":\"center\",\"headerVertical\":\"flip\"},{\"title\":\"last-ready\",\"field\":\"lastSeenreadyFormatted\",\"width\":100,\"align\":\"left\",\"headerVertical\":\"flip\"},{\"title\":\"Homie\",\"field\":\"$homie\",\"width\":100,\"align\":\"left\",\"headerVertical\":\"flip\"},{\"title\":\"Platform\",\"field\":\"$implementation\",\"width\":100,\"align\":\"left\",\"headerVertical\":\"flip\"},{\"title\":\"Statistics\",\"columns\":[{\"title\":\"Interval\",\"field\":\"interval\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"outputFormat\":\"d hh:mm:ss\",\"inputFormat\":\"seconds\",\"invalidPlaceholder\":\"(unknown)\"},\"title\":\"Uptime\",\"field\":\"uptime\",\"formatter\":\"function(cell, formatterParams, onRendered){     var pad = function (num) {         return (\\\"0\\\"+num).slice(-2);     };     var secs = Number(cell.getValue());     if (Number.isNaN(secs)) return;     var minutes = Math.floor(secs / 60);     secs = secs%60;     var hours = Math.floor(minutes/60);     minutes = minutes%60;     var days = Math.floor(hours/24);     hours = hours%24;     if (days>0)         return days+\\\"d \\\"+pad(hours)+\\\":\\\"+pad(minutes);     else         return pad(hours)+\\\":\\\"+pad(minutes)+\\\":\\\"+pad(secs); }\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":0,\"max\":100,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) {if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" %</span>\\\"; else return; }\",\"legendColor\":\"#FFFFFF\",\"legendAlign\":\"center\"},\"title\":\"Signal\",\"field\":\"signal\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":2.5,\"max\":3.5,\"color\":[\"red\",\"green\",\"red\"],\"legend\":\"function (value) { if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" V</span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Supply\",\"field\":\"supply\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":0,\"max\":100,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) {     if (value>0)         return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" %</span>\\\";     else         return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Battery\",\"field\":\"battery\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":0,\"max\":100000,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) { if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+(value/1024).toFixed(2)+\\\" kB</span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Memory\",\"field\":\"freeheap\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"target\":\"_blank\",\"min\":0,\"max\":100,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) {     if (value>0)         return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" %</span>\\\";     else         return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"CPU load\",\"field\":\"cpuload\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":20,\"max\":60,\"color\":[\"green\",\"orange\",\"red\"],\"legend\":\"function (value) { if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" °C</span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"CPU temp\",\"field\":\"cputemp\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"}]},{\"title\":\"Firmware\",\"columns\":[{\"formatter\":\"link\",\"formatterParams\":{\"labelField\":\"$localip\",\"urlPrefix\":\"http://\",\"target\":\"_blank\"},\"title\":\"IP\",\"field\":\"$localip\",\"width\":100},{\"title\":\"mac\",\"field\":\"$mac\",\"width\":100},{\"title\":\"Accsess Point\",\"field\":\"SSID\",\"width\":100},{\"title\":\"Firmware\",\"field\":\"name\",\"width\":100},{\"title\":\"Version\",\"field\":\"version\",\"width\":100},{\"title\":\"Last Boot Cause\",\"field\":\"lastBootCause\",\"width\":100},{\"title\":\"Reset Reason\",\"field\":\"resetReason\",\"width\":100}]}]},\"customHeight\":12}",
                "ui": {
                    "icon": "font-awesome/fa-table",
                    "label": {
                        "en-US": "Tabulator"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "json",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "tableDataProp",
                "type": "str",
                "value": "row",
                "ui": {
                    "icon": "font-awesome/fa-tag",
                    "label": {
                        "en-US": "rowProperty"
                    }
                }
            },
            {
                "name": "tableIndex",
                "type": "str",
                "value": "$topic",
                "ui": {
                    "icon": "font-awesome/fa-indent",
                    "label": {
                        "en-US": "Index"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "json",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "maxRows",
                "type": "num",
                "value": "0",
                "ui": {
                    "icon": "font-awesome/fa-list-ol",
                    "type": "input",
                    "opts": {
                        "types": [
                            "num",
                            "bool",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "maxStore",
                "type": "num",
                "value": "0",
                "ui": {
                    "icon": "font-awesome/fa-database",
                    "type": "input",
                    "opts": {
                        "types": [
                            "num",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "dashboard",
                "type": "str",
                "value": "Remote Device Table",
                "ui": {
                    "icon": "font-awesome/fa-dashboard",
                    "label": {
                        "en-US": "Dashboard"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "tableContext",
                "type": "json",
                "value": "{\"tableData\":{\"name\":\"tableData\"},\"tableConfig\":{\"name\":\"tableConfig\",\"storage\":\"file\"},\"tableEdit\":{\"name\":\"tableEdit\",\"storage\":\"file\"}}",
                "ui": {
                    "icon": "font-awesome/fa-database",
                    "label": {
                        "en-US": "Context"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "json",
                            "env"
                        ]
                    }
                }
            }
        ],
        "color": "#3FADB5",
        "icon": "node-red-dashboard/ui_slider.png",
        "status": {
            "x": 360,
            "y": 34,
            "wires": [
                {
                    "id": "5eb0bd6b.74b794",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "76d85a1ecc8be4eb",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#00cc47",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#357709",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#357709",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#357709",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#55be0e",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#357709",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "LINE-1(DEMO VERSION)",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "false",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "9a9b4b80002072fd",
        "type": "ui_group",
        "name": "DAYWISE OEE",
        "tab": "d567b4612a724cf5",
        "order": 1,
        "disp": true,
        "width": "29",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6b25495e9ffe8180",
        "type": "MC Protocol Connection",
        "name": "MITS",
        "host": "192.168.94.11",
        "port": "3001",
        "protocol": "UDP",
        "frame": "3E",
        "plcType": "Q",
        "ascii": false,
        "PLCStation": "",
        "PCStation": "",
        "PLCModuleNo": "",
        "network": "",
        "octalInputOutput": false,
        "timeout": "2000"
    },
    {
        "id": "7c1bb3377e665bf6",
        "type": "ui_group",
        "name": "CELL CURRENT STATUS",
        "tab": "5e64704ba8ae493b",
        "order": 1,
        "disp": true,
        "width": "19",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d567b4612a724cf5",
        "type": "ui_tab",
        "d": true,
        "name": "DAYWISE SUMMARY",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "982d18a4808358eb",
        "type": "mqtt-broker",
        "name": "",
        "broker": "127.0.0.1",
        "port": "1883",
        "clientid": "NodeRedSQLClient",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "15",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "b7982dad39851f18",
        "type": "telegram bot",
        "botname": "NodeRedBot",
        "usernames": "",
        "chatids": "5925505238",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksprotocol": "socks5",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "39a9007ff4c36fd9",
        "type": "ui_tab",
        "name": "BREAKDOWN ENTRY",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "18dd4b6528c69124",
        "type": "ui_group",
        "name": "BREAKDOWN ENTERY",
        "tab": "39a9007ff4c36fd9",
        "order": 1,
        "disp": true,
        "width": 22,
        "collapse": false,
        "className": ""
    },
    {
        "id": "9182d9eceb92c6db",
        "type": "ui_tab",
        "name": "HISTORY",
        "icon": "dashboard",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "3b44ddbf801a390b",
        "type": "ui_group",
        "name": "REPORT",
        "tab": "9182d9eceb92c6db",
        "order": 1,
        "disp": true,
        "width": 22,
        "collapse": false,
        "className": ""
    },
    {
        "id": "e51f2b499df8da46",
        "type": "telegram bot",
        "botname": "NodeRedBot",
        "usernames": "",
        "chatids": "5925505238",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksprotocol": "socks5",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "14259b1b7c4c3d1a",
        "type": "ui_tab",
        "name": "MACHINE SETTING",
        "icon": "dashboard",
        "order": 7,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "5ada3ed2f7f6c736",
        "type": "ui_group",
        "name": "MACHINE INFORMATION",
        "tab": "14259b1b7c4c3d1a",
        "order": 1,
        "disp": true,
        "width": 14,
        "collapse": false,
        "className": ""
    },
    {
        "id": "9bf1214e14e2a61a",
        "type": "ui_group",
        "name": "MACHINE QUALITY",
        "tab": "14259b1b7c4c3d1a",
        "order": 2,
        "disp": true,
        "width": 15,
        "collapse": false,
        "className": ""
    },
    {
        "id": "1f666e699f508e36",
        "type": "ui_tab",
        "d": true,
        "name": "MONTHWISE SUMMARY",
        "icon": "dashboard",
        "order": 8,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c3decad61a9a9538",
        "type": "ui_group",
        "name": "MONTHWISE OEE",
        "tab": "1f666e699f508e36",
        "order": 1,
        "disp": true,
        "width": 29,
        "collapse": false,
        "className": ""
    },
    {
        "id": "995845c9196e6f78",
        "type": "MC Protocol Connection",
        "name": "MITS_2",
        "host": "192.168.3.120",
        "port": "9000",
        "protocol": "TCP",
        "frame": "1E",
        "plcType": "Q",
        "ascii": false,
        "PLCStation": "",
        "PCStation": "",
        "PLCModuleNo": "",
        "network": "",
        "octalInputOutput": false,
        "timeout": "4000"
    },
    {
        "id": "9d1e36f39496ed5c",
        "type": "MC Protocol Connection",
        "name": "mits_3",
        "host": "192.168.94.1",
        "port": "3001",
        "protocol": "UDP",
        "frame": "3E",
        "plcType": "Q",
        "ascii": false,
        "PLCStation": "",
        "PCStation": "",
        "PLCModuleNo": "",
        "network": "",
        "octalInputOutput": false,
        "timeout": "4000"
    },
    {
        "id": "6a7ea06136783db3",
        "type": "ui_group",
        "name": "PRODUCTION LOSS",
        "tab": "14259b1b7c4c3d1a",
        "order": 3,
        "disp": true,
        "width": 29,
        "collapse": false,
        "className": ""
    },
    {
        "id": "29da38652f08228d",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": true,
        "alpnprotocol": ""
    },
    {
        "id": "76839cf0e528d185",
        "type": "MSSQL-CN",
        "name": "CLOUD",
        "server": "ep-floral-violet-a8geanhi-pooler.eastus2.azure.neon.tech",
        "encyption": false,
        "database": "Furnace"
    },
    {
        "id": "556030eaa7a2d84c",
        "type": "ui_group",
        "name": "CELL CURRENT STATUS.",
        "tab": "5e64704ba8ae493b",
        "order": 2,
        "disp": true,
        "width": "19",
        "collapse": false,
        "className": ""
    },
    {
        "id": "347cf509a5d438c2",
        "type": "ui-base",
        "name": "My Dashboard",
        "path": "/dashboard",
        "appIcon": "",
        "includeClientData": true,
        "acceptsClientConfig": [
            "ui-notification",
            "ui-control"
        ],
        "showPathInSidebar": false,
        "headerContent": "page",
        "navigationStyle": "default",
        "titleBarStyle": "default",
        "showReconnectNotification": true,
        "notificationDisplayTime": 1,
        "showDisconnectNotification": true,
        "allowInstall": true
    },
    {
        "id": "4c0c3adc15ec6a6a",
        "type": "ui-theme",
        "name": "Default Theme",
        "colors": {
            "surface": "#ffffff",
            "primary": "#0094CE",
            "bgPage": "#eeeeee",
            "groupBg": "#ffffff",
            "groupOutline": "#cccccc"
        },
        "sizes": {
            "density": "default",
            "pagePadding": "12px",
            "groupGap": "12px",
            "groupBorderRadius": "4px",
            "widgetGap": "12px"
        }
    },
    {
        "id": "3fadab778a0f5e1e",
        "type": "ui-page",
        "name": "Page 1",
        "ui": "347cf509a5d438c2",
        "path": "/page1",
        "icon": "home",
        "layout": "grid",
        "theme": "4c0c3adc15ec6a6a",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 1,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "aaf3b4a542abfb25",
        "type": "ui-group",
        "name": "LINE-1",
        "page": "3fadab778a0f5e1e",
        "width": "6",
        "height": "1",
        "order": 2,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "18be4656703c2ad4",
        "type": "telegram bot",
        "botname": "@machine_A_bot",
        "usernames": "",
        "chatids": "",
        "baseapiurl": "",
        "testenvironment": false,
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksprotocol": "socks5",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "289ef23cd0a124c1",
        "type": "MC Protocol Connection",
        "name": "MKSG",
        "host": "192.168.1.2",
        "port": "3001",
        "protocol": "TCP",
        "frame": "1E",
        "plcType": "L",
        "ascii": false,
        "PLCStation": "",
        "PCStation": "",
        "PLCModuleNo": "",
        "network": "",
        "octalInputOutput": false,
        "timeout": "1000"
    },
    {
        "id": "04e04a0eb7029408",
        "type": "MC Protocol Connection",
        "name": "MBS",
        "host": "192.168.94.61",
        "port": "4001",
        "protocol": "UDP",
        "frame": "3E",
        "plcType": "Q",
        "ascii": false,
        "PLCStation": "",
        "PCStation": "",
        "PLCModuleNo": "",
        "network": "",
        "octalInputOutput": false,
        "timeout": "1000"
    },
    {
        "id": "a56c94bbba4976cd",
        "type": "serial-port",
        "name": "",
        "serialport": "COM9",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "b40655947bb5dbd9",
        "type": "MC Protocol Connection",
        "name": "MBS2",
        "host": "192.168.94.52",
        "port": "3010",
        "protocol": "UDP",
        "frame": "3E",
        "plcType": "Q",
        "ascii": false,
        "PLCStation": "",
        "PCStation": "",
        "PLCModuleNo": "",
        "network": "",
        "octalInputOutput": false,
        "timeout": "1000"
    },
    {
        "id": "30eee424ab34a4af",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "NodeRedSQLClient",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "15",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "6d1c60e59b81ab30",
        "type": "telegram bot",
        "botname": "NodeRedBot",
        "usernames": "",
        "chatids": "5925505238",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksprotocol": "socks5",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "882d32ae6f1ce486",
        "type": "telegram bot",
        "botname": "NodeRedBot",
        "usernames": "",
        "chatids": "5925505238",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksprotocol": "socks5",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "c4f6689db9013939",
        "type": "MC Protocol Connection",
        "name": "MITS_2",
        "host": "192.168.94.4",
        "port": "3001",
        "protocol": "UDP",
        "frame": "3E",
        "plcType": "Q",
        "ascii": false,
        "PLCStation": "",
        "PCStation": "",
        "PLCModuleNo": "",
        "network": "",
        "octalInputOutput": false,
        "timeout": "4000"
    },
    {
        "id": "9305030e129394d5",
        "type": "MC Protocol Connection",
        "name": "mits_3",
        "host": "192.168.94.1",
        "port": "3001",
        "protocol": "UDP",
        "frame": "3E",
        "plcType": "Q",
        "ascii": false,
        "PLCStation": "",
        "PCStation": "",
        "PLCModuleNo": "",
        "network": "",
        "octalInputOutput": false,
        "timeout": "4000"
    },
    {
        "id": "0ccf040ee41566fb",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": true,
        "alpnprotocol": ""
    },
    {
        "id": "489ecfa5c218484f",
        "type": "MSSQL-CN",
        "name": "DESKTOP-DKIMA66\\SQLEXPRESS",
        "server": "127.0.0.1",
        "encyption": false,
        "database": "Furnace"
    },
    {
        "id": "8bd116c710ef8a13",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "d9ebc36fda71c7dd",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 4,
        "width": 3,
        "height": 1
    },
    {
        "id": "1aa0182df43ddf51",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "53f4dc989f29c620",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 7,
        "width": 29,
        "height": 1
    },
    {
        "id": "ff8d1284ad7b54ac",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "8abcc942c16e976b",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "6f06b5a815440467",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "6e05148ef14e6dfe",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "47e9a27029483cce",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "d7bc49eca3bcad52",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "ef1ffabd17232ebc",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "3fb60450639050f2",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 17,
        "width": 1,
        "height": 1
    },
    {
        "id": "701acb96f4646a78",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 18,
        "width": 1,
        "height": 1
    },
    {
        "id": "b2bb65d29fa6de5d",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 19,
        "width": 1,
        "height": 1
    },
    {
        "id": "71d1c6ed6c0816a5",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 20,
        "width": 1,
        "height": 1
    },
    {
        "id": "029bc1e7fed9665f",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 21,
        "width": 1,
        "height": 1
    },
    {
        "id": "ca96344201ee392d",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 22,
        "width": 1,
        "height": 1
    },
    {
        "id": "2b02d75c9bd78421",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 23,
        "width": 1,
        "height": 1
    },
    {
        "id": "ab423acf36077580",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 24,
        "width": 1,
        "height": 1
    },
    {
        "id": "3966323d628aa2d6",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 25,
        "width": 1,
        "height": 1
    },
    {
        "id": "14a79750e7c55e98",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 26,
        "width": 1,
        "height": 1
    },
    {
        "id": "68efe8feb1ff5958",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 27,
        "width": 1,
        "height": 1
    },
    {
        "id": "a8e444b049a27c58",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 28,
        "width": 29,
        "height": 1
    },
    {
        "id": "19b9a2283197be8f",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 29,
        "width": 1,
        "height": 1
    },
    {
        "id": "37f5a35b4bdc2b81",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 31,
        "width": 1,
        "height": 1
    },
    {
        "id": "79200273d20ea72c",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 33,
        "width": 1,
        "height": 1
    },
    {
        "id": "e8f05be93b3d47ad",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 34,
        "width": 1,
        "height": 1
    },
    {
        "id": "a22f826002ebf6e7",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 35,
        "width": 1,
        "height": 1
    },
    {
        "id": "972784ca00d1bbf6",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 36,
        "width": 1,
        "height": 1
    },
    {
        "id": "d351728fe237e445",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 37,
        "width": 1,
        "height": 1
    },
    {
        "id": "7c19de74fe78e26a",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 38,
        "width": 1,
        "height": 1
    },
    {
        "id": "9be6890af9d6aabb",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 39,
        "width": 1,
        "height": 1
    },
    {
        "id": "a755db6219e0b56c",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 40,
        "width": 1,
        "height": 1
    },
    {
        "id": "ab5ee5f13ae93043",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 41,
        "width": 1,
        "height": 1
    },
    {
        "id": "47620f090e2204ac",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 42,
        "width": 1,
        "height": 1
    },
    {
        "id": "a69615ebc69cf887",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 43,
        "width": 1,
        "height": 1
    },
    {
        "id": "21129aee940e0194",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 44,
        "width": 1,
        "height": 1
    },
    {
        "id": "e9aab8a00b18cd18",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 45,
        "width": 1,
        "height": 1
    },
    {
        "id": "7ebf415f3cd8915b",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 46,
        "width": 1,
        "height": 1
    },
    {
        "id": "7da66ed3bac5ab1d",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 47,
        "width": 1,
        "height": 1
    },
    {
        "id": "7a755cbbdc6689e4",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 48,
        "width": 1,
        "height": 1
    },
    {
        "id": "4d0a300a80de3224",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 49,
        "width": 29,
        "height": 1
    },
    {
        "id": "e16be7357b983a54",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 50,
        "width": 1,
        "height": 1
    },
    {
        "id": "85f1d384d31a033c",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 52,
        "width": 1,
        "height": 1
    },
    {
        "id": "f591d1aa755935df",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 54,
        "width": 1,
        "height": 1
    },
    {
        "id": "8f1246b7f6d4d21f",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 55,
        "width": 1,
        "height": 1
    },
    {
        "id": "16746d697e4db234",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 56,
        "width": 1,
        "height": 1
    },
    {
        "id": "a6fcd92e44c7e59f",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 57,
        "width": 1,
        "height": 1
    },
    {
        "id": "ee9cb7b159e95e78",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 58,
        "width": 1,
        "height": 1
    },
    {
        "id": "9b737f461fa34204",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 59,
        "width": 1,
        "height": 1
    },
    {
        "id": "6030bfe96801225e",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 60,
        "width": 1,
        "height": 1
    },
    {
        "id": "f732bf8b2a7c344c",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 61,
        "width": 1,
        "height": 1
    },
    {
        "id": "cc49bf65dceffa68",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 62,
        "width": 1,
        "height": 1
    },
    {
        "id": "3823ca5de4aea254",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 63,
        "width": 1,
        "height": 1
    },
    {
        "id": "4d6965f31f1fce22",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 64,
        "width": 1,
        "height": 1
    },
    {
        "id": "4aaa1387f47e8197",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 65,
        "width": 1,
        "height": 1
    },
    {
        "id": "8b45d89462843234",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 66,
        "width": 1,
        "height": 1
    },
    {
        "id": "e23627dbfed33a60",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 67,
        "width": 1,
        "height": 1
    },
    {
        "id": "ca57b68315803419",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 68,
        "width": 1,
        "height": 1
    },
    {
        "id": "a4cd09cec04f12c3",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "c3decad61a9a9538",
        "order": 69,
        "width": 1,
        "height": 1
    },
    {
        "id": "5753b20e20cbb029",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 2,
        "width": 8,
        "height": 1
    },
    {
        "id": "8af8c00ee4baba11",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 4,
        "width": 7,
        "height": 1
    },
    {
        "id": "c7dcdc27957a05a9",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "db54255b862e0d27",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "f8e9c72913099f25",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "5b4b3ed711024b51",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "e00a6508eda189ea",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "c324564719d78327",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "9a99bfc11e84ec5b",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "f4341c97a85e5897",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "e77fa3280a4ba59d",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 16,
        "width": 8,
        "height": 1
    },
    {
        "id": "376b63a2f98d1789",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 18,
        "width": 7,
        "height": 1
    },
    {
        "id": "4a71476075bfbc6d",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 19,
        "width": 1,
        "height": 1
    },
    {
        "id": "1d3c529e48dc7d5c",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 21,
        "width": 1,
        "height": 1
    },
    {
        "id": "57e5ed957a317203",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 23,
        "width": 1,
        "height": 1
    },
    {
        "id": "bc282bb0518fe1f8",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 24,
        "width": 1,
        "height": 1
    },
    {
        "id": "04add8cb84b59aea",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 25,
        "width": 1,
        "height": 1
    },
    {
        "id": "7e9888ada9405286",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 26,
        "width": 1,
        "height": 1
    },
    {
        "id": "a0f2359efb493ebd",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 27,
        "width": 1,
        "height": 1
    },
    {
        "id": "8b8a102b111e40f7",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 28,
        "width": 1,
        "height": 1
    },
    {
        "id": "0ed6299a97a8e390",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 29,
        "width": 8,
        "height": 1
    },
    {
        "id": "33062af7840aa765",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 31,
        "width": 7,
        "height": 1
    },
    {
        "id": "4601fce80ad943a4",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 32,
        "width": 1,
        "height": 1
    },
    {
        "id": "aadbb12f501c0e1f",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 34,
        "width": 1,
        "height": 1
    },
    {
        "id": "ce22b2f131dce8d8",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 36,
        "width": 1,
        "height": 1
    },
    {
        "id": "56a16bc599e37fe9",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 37,
        "width": 1,
        "height": 1
    },
    {
        "id": "977714f191acbaf3",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 38,
        "width": 1,
        "height": 1
    },
    {
        "id": "d1909741b066517d",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 39,
        "width": 1,
        "height": 1
    },
    {
        "id": "7d6f186f514eea47",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 40,
        "width": 1,
        "height": 1
    },
    {
        "id": "a67831f6bd807091",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 41,
        "width": 1,
        "height": 1
    },
    {
        "id": "7cec09ac87d64492",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 42,
        "width": 1,
        "height": 1
    },
    {
        "id": "e0ebcc93e6d36e53",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 43,
        "width": 1,
        "height": 1
    },
    {
        "id": "37aba5a2a4a0a6d7",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 44,
        "width": 8,
        "height": 1
    },
    {
        "id": "2107314743cefdd7",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 46,
        "width": 7,
        "height": 1
    },
    {
        "id": "687b272d5cc63e2c",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 48,
        "width": 1,
        "height": 1
    },
    {
        "id": "aaded3d2bce09db2",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 50,
        "width": 1,
        "height": 1
    },
    {
        "id": "7aa8a932658a9fc1",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 51,
        "width": 1,
        "height": 1
    },
    {
        "id": "77bcec20cf245068",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 52,
        "width": 1,
        "height": 1
    },
    {
        "id": "5e32cd727944e16e",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 53,
        "width": 1,
        "height": 1
    },
    {
        "id": "54f93e7d86ee7416",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 54,
        "width": 1,
        "height": 1
    },
    {
        "id": "b062c210105e57e8",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 55,
        "width": 1,
        "height": 1
    },
    {
        "id": "7d39f7165504a6b6",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 56,
        "width": 1,
        "height": 1
    },
    {
        "id": "11db1769ed826b81",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 57,
        "width": 1,
        "height": 1
    },
    {
        "id": "7dc97f81ab512c43",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 58,
        "width": 1,
        "height": 1
    },
    {
        "id": "4fc61cf4a4c127c0",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 60,
        "width": 23,
        "height": 1
    },
    {
        "id": "1945b7740afb935c",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 61,
        "width": 23,
        "height": 1
    },
    {
        "id": "24c74f887ce6028d",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 62,
        "width": 23,
        "height": 1
    },
    {
        "id": "91f5afbc006a1c77",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 63,
        "width": 23,
        "height": 1
    },
    {
        "id": "3fc8a8659722e6aa",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 64,
        "width": 23,
        "height": 1
    },
    {
        "id": "6f20fa736bfa14a2",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 66,
        "width": 23,
        "height": 1
    },
    {
        "id": "58bafe979dc6ed9d",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 67,
        "width": 23,
        "height": 1
    },
    {
        "id": "45bb9f4a56b59042",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 68,
        "width": 23,
        "height": 1
    },
    {
        "id": "1431a4c3b31076be",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 69,
        "width": 23,
        "height": 1
    },
    {
        "id": "1cf62d05aaf582c8",
        "type": "ui_spacer",
        "z": "299a5e821c565bab",
        "name": "spacer",
        "group": "9a9b4b80002072fd",
        "order": 70,
        "width": 23,
        "height": 1
    },
    {
        "id": "069ac6ed54e32e6d",
        "type": "ui_spacer",
        "z": "050fb431a7ca83a4",
        "name": "spacer",
        "group": "5ada3ed2f7f6c736",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "8a52d711d566c0f2",
        "type": "ui_spacer",
        "z": "050fb431a7ca83a4",
        "name": "spacer",
        "group": "5ada3ed2f7f6c736",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "37b02cd6d7612321",
        "type": "ui_spacer",
        "z": "050fb431a7ca83a4",
        "name": "spacer",
        "group": "5ada3ed2f7f6c736",
        "order": 7,
        "width": 4,
        "height": 1
    },
    {
        "id": "7d46b1564cfd43d0",
        "type": "ui_spacer",
        "z": "050fb431a7ca83a4",
        "name": "spacer",
        "group": "5ada3ed2f7f6c736",
        "order": 9,
        "width": 5,
        "height": 1
    },
    {
        "id": "1b131f43f8fb71f2",
        "type": "ui_spacer",
        "z": "050fb431a7ca83a4",
        "name": "spacer",
        "group": "9bf1214e14e2a61a",
        "order": 2,
        "width": 3,
        "height": 1
    },
    {
        "id": "1f20077f3c2e8701",
        "type": "ui_spacer",
        "z": "050fb431a7ca83a4",
        "name": "spacer",
        "group": "9bf1214e14e2a61a",
        "order": 4,
        "width": 15,
        "height": 1
    },
    {
        "id": "2c368649a6c9b3b3",
        "type": "ui_spacer",
        "z": "050fb431a7ca83a4",
        "name": "spacer",
        "group": "9bf1214e14e2a61a",
        "order": 6,
        "width": 2,
        "height": 1
    },
    {
        "id": "353c20c2e0cae97a",
        "type": "ui_spacer",
        "z": "050fb431a7ca83a4",
        "name": "spacer",
        "group": "6a7ea06136783db3",
        "order": 1,
        "width": 9,
        "height": 1
    },
    {
        "id": "671a0669b3949473",
        "type": "ui_spacer",
        "z": "050fb431a7ca83a4",
        "name": "spacer",
        "group": "6a7ea06136783db3",
        "order": 3,
        "width": 8,
        "height": 1
    },
    {
        "id": "4fda194b5cc1f494",
        "type": "ui_spacer",
        "z": "050fb431a7ca83a4",
        "name": "spacer",
        "group": "6a7ea06136783db3",
        "order": 5,
        "width": 9,
        "height": 1
    },
    {
        "id": "e858144c69c00c32",
        "type": "ui_spacer",
        "z": "050fb431a7ca83a4",
        "name": "spacer",
        "group": "6a7ea06136783db3",
        "order": 8,
        "width": 9,
        "height": 1
    },
    {
        "id": "f36b390bcf940d24",
        "type": "ui_spacer",
        "z": "050fb431a7ca83a4",
        "name": "spacer",
        "group": "6a7ea06136783db3",
        "order": 11,
        "width": 9,
        "height": 1
    },
    {
        "id": "a3de6c3a21872b70",
        "type": "ui_spacer",
        "z": "050fb431a7ca83a4",
        "name": "spacer",
        "group": "6a7ea06136783db3",
        "order": 14,
        "width": 9,
        "height": 1
    },
    {
        "id": "5e64704ba8ae493b",
        "type": "ui_tab",
        "name": "LINE-1",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "0576513590b8b648",
        "type": "ui_group",
        "name": "LAST 8 HOURS DATA (CELL-1)",
        "tab": "5e64704ba8ae493b",
        "order": 3,
        "disp": true,
        "width": 19,
        "collapse": false,
        "className": ""
    },
    {
        "id": "e90229bd006224f2",
        "type": "ui_group",
        "name": "LAST 8 HOURS DATA (CELL-2)",
        "tab": "5e64704ba8ae493b",
        "order": 4,
        "disp": true,
        "width": 19,
        "collapse": false,
        "className": ""
    },
    {
        "id": "d6036fb2ccf83868",
        "type": "ui-group",
        "name": "Group Name",
        "page": "3fadab778a0f5e1e",
        "width": "6",
        "height": "1",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "0dca55ca7a419905",
        "type": "ui_group",
        "name": "LAST WEEK SUMMARY (CELL-1)",
        "tab": "5e64704ba8ae493b",
        "order": 5,
        "disp": true,
        "width": 19,
        "collapse": false,
        "className": ""
    },
    {
        "id": "f4131b3dda3c433c",
        "type": "ui_group",
        "name": "LAST WEEK SUMMARY (CELL-2)",
        "tab": "5e64704ba8ae493b",
        "order": 6,
        "disp": true,
        "width": 19,
        "collapse": false,
        "className": ""
    },
    {
        "id": "8453bbc22d0ef611",
        "type": "postgreSQLConfig",
        "name": "",
        "host": "ep-floral-violet-a8geanhi-pooler.eastus2.azure.neon.tech",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "Furnace",
        "databaseFieldType": "str",
        "ssl": "true",
        "sslFieldType": "bool",
        "applicationName": "",
        "applicationNameType": "str",
        "max": "10",
        "maxFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "connectionTimeout": "10000",
        "connectionTimeoutFieldType": "num",
        "user": "Furnace_owner",
        "userFieldType": "str",
        "password": "npg_0LsukecvrRU8",
        "passwordFieldType": "str"
    },
    {
        "id": "720a4d4e9e8a28d4",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "de8fd6fff3d9e828",
        "type": "MC Protocol Connection",
        "name": "FX5U_01",
        "host": "192.168.3.250",
        "port": "9000",
        "protocol": "UDP",
        "frame": "4E",
        "plcType": "Q",
        "ascii": false,
        "PLCStation": "",
        "PCStation": "",
        "PLCModuleNo": "",
        "network": "",
        "octalInputOutput": false,
        "timeout": "1000"
    },
    {
        "id": "b5bcc31427b25f47",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "18dd4b6528c69124",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "cf5a86882dbe4aca",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "18dd4b6528c69124",
        "order": 4,
        "width": 8,
        "height": 1
    },
    {
        "id": "7919f45485da38d2",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "18dd4b6528c69124",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "9456abc69b8cf3e5",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "18dd4b6528c69124",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "0c3e7508ae0f398a",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "18dd4b6528c69124",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "45e37c5fa9ba2ba5",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "18dd4b6528c69124",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "58c47e75d62fd278",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "18dd4b6528c69124",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "cda638c4d05f83e9",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "18dd4b6528c69124",
        "order": 18,
        "width": 5,
        "height": 1
    },
    {
        "id": "bba099838580ed96",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "18dd4b6528c69124",
        "order": 20,
        "width": 3,
        "height": 1
    },
    {
        "id": "779d344b0faacc17",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "18dd4b6528c69124",
        "order": 22,
        "width": 1,
        "height": 1
    },
    {
        "id": "b8b85f3e84e7f16f",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "18dd4b6528c69124",
        "order": 25,
        "width": 1,
        "height": 1
    },
    {
        "id": "037e7eefe538c379",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "18dd4b6528c69124",
        "order": 27,
        "width": 1,
        "height": 1
    },
    {
        "id": "b45af95750f7fe77",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "18dd4b6528c69124",
        "order": 29,
        "width": 1,
        "height": 1
    },
    {
        "id": "3177f24bf3b82a66",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "18dd4b6528c69124",
        "order": 31,
        "width": 1,
        "height": 1
    },
    {
        "id": "b4e003cf4dca29b7",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "18dd4b6528c69124",
        "order": 32,
        "width": 7,
        "height": 1
    },
    {
        "id": "e322c2b8ff9ef772",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "18dd4b6528c69124",
        "order": 33,
        "width": 7,
        "height": 1
    },
    {
        "id": "010f4d6697c238f8",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "18dd4b6528c69124",
        "order": 34,
        "width": 7,
        "height": 1
    },
    {
        "id": "196345469847fec3",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "18dd4b6528c69124",
        "order": 35,
        "width": 7,
        "height": 1
    },
    {
        "id": "82d8eb2984c67ddf",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "18dd4b6528c69124",
        "order": 36,
        "width": 7,
        "height": 1
    },
    {
        "id": "93d9bd3237e5ca24",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "18dd4b6528c69124",
        "order": 37,
        "width": 7,
        "height": 1
    },
    {
        "id": "6de87fb79875a1d4",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "18dd4b6528c69124",
        "order": 38,
        "width": 7,
        "height": 1
    },
    {
        "id": "8d7fbddd9c16dbd7",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "3b44ddbf801a390b",
        "order": 1,
        "width": 3,
        "height": 1
    },
    {
        "id": "be8956fb0902ba67",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "3b44ddbf801a390b",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "9b7f086b34706516",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "3b44ddbf801a390b",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "d770c02db93b9e3d",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "3b44ddbf801a390b",
        "order": 7,
        "width": 2,
        "height": 1
    },
    {
        "id": "082553defe8796b8",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "3b44ddbf801a390b",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "3a7211f8cffc6439",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "3b44ddbf801a390b",
        "order": 10,
        "width": 14,
        "height": 1
    },
    {
        "id": "0496c59bd8d8b6b4",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "3b44ddbf801a390b",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "5b17e0b522b40833",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "3b44ddbf801a390b",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "9063c843a4894c1d",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "3b44ddbf801a390b",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "0fbbcf950d1ca324",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "3b44ddbf801a390b",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "213b2fe5606190f2",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "3b44ddbf801a390b",
        "order": 17,
        "width": 1,
        "height": 1
    },
    {
        "id": "971b2c48a595da56",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "3b44ddbf801a390b",
        "order": 18,
        "width": 1,
        "height": 1
    },
    {
        "id": "42609735f93ecb21",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "3b44ddbf801a390b",
        "order": 19,
        "width": 1,
        "height": 1
    },
    {
        "id": "e0f6646ef292a5b1",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "3b44ddbf801a390b",
        "order": 20,
        "width": 1,
        "height": 1
    },
    {
        "id": "4b9ab61f66749409",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "3b44ddbf801a390b",
        "order": 21,
        "width": 1,
        "height": 1
    },
    {
        "id": "1fd33e940364ef67",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "3b44ddbf801a390b",
        "order": 22,
        "width": 1,
        "height": 1
    },
    {
        "id": "75c18d6c88050187",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "3b44ddbf801a390b",
        "order": 23,
        "width": 1,
        "height": 1
    },
    {
        "id": "9530de89d3e39766",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "3b44ddbf801a390b",
        "order": 24,
        "width": 1,
        "height": 1
    },
    {
        "id": "7734585643c45a83",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "3b44ddbf801a390b",
        "order": 25,
        "width": 1,
        "height": 1
    },
    {
        "id": "4b3f782396e7e066",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "3b44ddbf801a390b",
        "order": 26,
        "width": 1,
        "height": 1
    },
    {
        "id": "18bf7c8a1c39fec3",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "3b44ddbf801a390b",
        "order": 27,
        "width": 1,
        "height": 1
    },
    {
        "id": "e694e9d56c0c6146",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "3b44ddbf801a390b",
        "order": 28,
        "width": 1,
        "height": 1
    },
    {
        "id": "89d9614a4b2afa7d",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "3b44ddbf801a390b",
        "order": 29,
        "width": 1,
        "height": 1
    },
    {
        "id": "00aabfa1a5d32022",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "3b44ddbf801a390b",
        "order": 30,
        "width": 1,
        "height": 1
    },
    {
        "id": "bb31246dac441e1e",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "3b44ddbf801a390b",
        "order": 31,
        "width": 1,
        "height": 1
    },
    {
        "id": "d2b818d98ba31a2f",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "3b44ddbf801a390b",
        "order": 32,
        "width": 1,
        "height": 1
    },
    {
        "id": "36a923e4f35e31d8",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "3b44ddbf801a390b",
        "order": 33,
        "width": 1,
        "height": 1
    },
    {
        "id": "f41d7431a936cb59",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "3b44ddbf801a390b",
        "order": 34,
        "width": 1,
        "height": 1
    },
    {
        "id": "8b982c022c2ab75a",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "3b44ddbf801a390b",
        "order": 35,
        "width": 1,
        "height": 1
    },
    {
        "id": "78c4d172498908bb",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "3b44ddbf801a390b",
        "order": 36,
        "width": 1,
        "height": 1
    },
    {
        "id": "eef18e91d4bce09d",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "3b44ddbf801a390b",
        "order": 37,
        "width": 1,
        "height": 1
    },
    {
        "id": "c21887eac984adf9",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "3b44ddbf801a390b",
        "order": 38,
        "width": 1,
        "height": 1
    },
    {
        "id": "807dbca9f72e59c6",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "3b44ddbf801a390b",
        "order": 39,
        "width": 1,
        "height": 1
    },
    {
        "id": "07ecad04e951e0e2",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "7c1bb3377e665bf6",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "62fbc9996bd8916d",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "7c1bb3377e665bf6",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "ecee250e9a913305",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "7c1bb3377e665bf6",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "7e0c2102acefd3a3",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "7c1bb3377e665bf6",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "11d237cfe0c75819",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "7c1bb3377e665bf6",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "ec6e99b57360fd60",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "7c1bb3377e665bf6",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "5dbb033c081f526f",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "7c1bb3377e665bf6",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "24814ec3adca0897",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "7c1bb3377e665bf6",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "c0cb8b1969b855a5",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "7c1bb3377e665bf6",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "8cb4f1172276aec7",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "7c1bb3377e665bf6",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "c1125fb81e99f89e",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "7c1bb3377e665bf6",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "6dcd62b579c63435",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "7c1bb3377e665bf6",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "bed823984c273180",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "7c1bb3377e665bf6",
        "order": 17,
        "width": 1,
        "height": 1
    },
    {
        "id": "e40ee6b3549ea530",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "7c1bb3377e665bf6",
        "order": 18,
        "width": 1,
        "height": 1
    },
    {
        "id": "8b48c2f64d2cb72a",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "7c1bb3377e665bf6",
        "order": 19,
        "width": 1,
        "height": 1
    },
    {
        "id": "21e4ee2e3ce1e5be",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "7c1bb3377e665bf6",
        "order": 20,
        "width": 1,
        "height": 1
    },
    {
        "id": "d3edfd502e113ce1",
        "type": "ui_spacer",
        "z": "5ccdd863f339e5b3",
        "name": "spacer",
        "group": "556030eaa7a2d84c",
        "order": 4,
        "width": 19,
        "height": 1
    },
    {
        "id": "d4e5f6g7.456789",
        "type": "ui_group",
        "name": "Hidden Group",
        "tab": "e5f6g7h8.56789a",
        "order": 1,
        "disp": false,
        "width": "0",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e5f6g7h8.56789a",
        "type": "ui_tab",
        "name": "Hidden Tab",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "5eb0bd6b.74b794",
        "type": "function",
        "z": "2924702c.b33a7",
        "name": "handle tableData",
        "func": "var status = {fill:\"red\",shape:\"dot\",text: \"payload \"};\nvar tableIndex = env.get(\"tableIndex\") || \"$topic\";\nvar tableDataProp = env.get(\"tableDataProp\") || \"row\";\nvar tableContext = env.get(\"tableContext\");\nvar dashboard = env.get(\"dashboard\");\nvar maxRows = env.get(\"maxRows\") || 0;\nvar maxStore = env.get(\"maxStore\") || 0;\n\nif (!tableContext.hasOwnProperty(\"tableData\") || !tableContext.hasOwnProperty(\"tableConfig\")) {\n    status.text=\"tableContext not defined\";\n    node.error(status.text);\n    return [{payload:status},null];\n}\n\n// context store to cache table data (memoryOnly prefered)\nvar tableData = flow.get(\"$parent.\"+tableContext.tableData.name,tableContext.tableData.storage);\nif (tableData===undefined) {\n    node.warn(\"[ui-table handler] tableData initialized!\");\n    tableData={};\n    flow.set(\"$parent.\"+tableContext.tableData.name,tableData,tableContext.tableData.storage);\n}\n\n// context Store to save table configuration (file)\nvar tableConfig = flow.get(\"$parent.\"+tableContext.tableConfig.name,tableContext.tableConfig.storage);\nif (tableConfig===undefined) {\n    node.warn(\"[ui-table handler] tableConfig initialized!\");\n    tableConfig={ResponsiveLayout:true};\n    flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n}\n\nif (tableConfig.hasOwnProperty(\"maxStore\")) maxStore=tableConfig.maxStore;\nif (tableConfig.hasOwnProperty(\"maxRows\")) maxRows=tableConfig.maxRows;\n\n// context Store to save table configuration (file)\nvar tableEdit;\nif (tableContext.hasOwnProperty(\"tableEdit\")) {\n    tableEdit = flow.get(\"$parent.\"+tableContext.tableEdit.name,tableContext.tableEdit.storage);\n    if (tableEdit===undefined) {\n        node.warn(\"[ui-table handler] tableEdit initialized!\");\n        tableEdit={};\n        flow.set(\"$parent.\"+tableContext.tableEdit.name,tableEdit,tableContext.tableEdit.storage);\n    }\n}\n\n// function to merge partial data into existing table row\nvar mergeObject = function (destination, source, filter) {\n    for (let currentSource in source) {\n        if (source.hasOwnProperty(currentSource)) {\n            if (filter!==undefined && tableEdit && tableEdit.hasOwnProperty(filter) && tableEdit[filter].hasOwnProperty(currentSource)) {\n                destination[currentSource]= tableEdit[filter][currentSource];\n                source[currentSource]=tableEdit[filter][currentSource];\n            } else {\n                destination[currentSource]= source[currentSource];\n            }\n        }    \n    }\n    return source;\n};\n\n// merge edits into a destination object respecting _children\nvar mergeEdits = function(destination) {\n    \n    var mergeChildEdits = function(children) {\n        children.forEach(child => {\n            if (child.hasOwnProperty(tableIndex) && tableEdit.hasOwnProperty(child[tableIndex])) {\n//                node.warn([\"mergeChild\",child])\n                Object.keys(tableEdit[child[tableIndex]]).forEach(edit => {\n                    if (child.hasOwnProperty(edit)) {\n                        child[edit]=tableEdit[child[tableIndex]][edit];\n//                        node.warn([\"mergeChild edit \",edit,child[edit]])\n                    }\n                });\n            }\n            if (child.hasOwnProperty(\"_children\")) {\n                mergeChildEdits(child._children);\n            }\n        })\n    }\n    \n\n    Object.keys(destination).forEach(row => {\n        if (destination[row].hasOwnProperty(tableIndex)) {\n            if (tableEdit.hasOwnProperty(row)) {\n                Object.keys(tableEdit[row]).forEach(edit => {\n                    destination[row][edit]=tableEdit[row][edit];\n                });\n            }\n            if (destination[row].hasOwnProperty(\"_children\")) {\n                mergeChildEdits(destination[row]._children);\n            }\n       }\n    });\n}\n\n// deep search for a column including nested columns\nvar searchTabulatorColumn = function (columns,key,match) {\n    var result;\n    for (let column of columns) {\n        if (column.hasOwnProperty(\"columns\")) {\n            result = searchTabulatorColumn(column.columns,key,match);\n            if (result!==undefined) return result;\n        } else if (column.hasOwnProperty(key) && column[key]===match) {\n            return column;\n        }\n    }\n};\n\n// command message to update add or update data on ui-table\nvar msgToTable={};\nmsgToTable.payload={\n    \"command\":msg.tabulatorCommand || \"updateOrAddData\",\n    \"arguments\": [],\n    \"returnPromise\": false\n};\n\n// store data in tableData\nif (msg.hasOwnProperty(tableDataProp)) {\n    // store data for later recover\n    if (!msg.hasOwnProperty(\"topic\")) { // check if index existst\n        status.text=\"msg.topic not defined!\";\n        return [{payload:status},null];\n    }\n    if (!tableData.hasOwnProperty(msg.topic)){ // first seen\n        if (maxRows>0 && Object.keys(tableData).lenght===0) {\n            tableConfig.currentFirstRow=msg.topic;\n        }\n        tableData[msg.topic]={};\n        if (tableEdit && tableEdit.hasOwnProperty(msg.topic)) { // table edits available!\n            Object.keys(tableEdit[msg.topic]).forEach((key) => {\n                msg[tableDataProp][key]=tableEdit[msg.topic][key];\n                tableData[msg.topic][key]=tableEdit[msg.topic][key];\n            })\n        }\n        if (maxStore>0 && typeof msg.topic === \"number\") { // limit rows in tableData\n            let rowKeys = Object.keys(tableData);\n            if (rowKeys.length>maxStore) {\n                for (let i=0; i<(rowKeys.length-maxStore); i++) {\n                    delete tableData[rowKeys[i]];\n                }\n            }\n        }\n    }\n    if (!tableData[msg.topic].hasOwnProperty(tableIndex)) tableData[msg.topic][tableIndex]=msg.topic;\n    msg[tableDataProp]=mergeObject(tableData[msg.topic],msg[tableDataProp],msg.topic);\n    msg[tableDataProp][tableIndex]=msg.topic;\n    msgToTable.payload.arguments=[[msg[tableDataProp]]];\n    // add aditional parameters\n    if (msg.hasOwnProperty(\"tabulatorParameter\") && Array.isArray(msg.tabulatorParameter)) {\n        for (let arg in msg.tabulatorParameter) msgToTable.payload.arguments.push(arg);\n    }\n    // delete rows if rows exceed maxRows\n    /*\n    if (maxRows>0 && tableConfig.hasOwnProperty(\"currentFirstRow\") && typeof tableData[msg.topic][tableIndex]===\"number\") {\n        //node.warn([maxRows,tableConfig.hasOwnProperty(\"currentFirstRow\"),typeof tableData[msg.topic][tableIndex],tableConfig.currentFirstRow,tableData[msg.topic][tableIndex]-maxRows])\n        if (tableConfig.currentFirstRow<tableData[msg.topic][tableIndex]-maxRows) {\n            node.warn([\"maxRowExeeded\",tableConfig.currentFirstRow]);\n            node.send([null,{payload:{\"command\":\"deleteRow\",\"arguments\": [tableConfig.currentFirstRow],\"returnPromise\": false}},null]);\n            tableConfig.currentFirstRow++;\n        }\n    }*/\n    if (maxRows>0 && typeof tableData[msg.topic][tableIndex]===\"number\" && msg.topic-maxRows>0) {\n        node.send([null,{payload:{\"command\":\"deleteRow\",\"arguments\": [msg.topic-maxRows],\"returnPromise\": false}},null]);\n    }\n    status.fill=\"green\";\n    status.text=msg.topic+\" updated\";\n    return [{payload:status},msgToTable,null];\n} if (msg.payload===\"connect\" || (msg.payload===\"change\" && msg.name===dashboard) || (msg.hasOwnProperty(\"payload\") && msg.payload.hasOwnProperty(\"command\"))) { \n    if (!msg.hasOwnProperty(\"ui_control\")) {\n        msg.ui_control = env.get('tabulator');\n        status.text+=\" ui_control added\";\n    }\n    //process commands\n    //node.warn({\"command\":msg.payload.command,\"msg\":msg,\"object\":msg.payload.object})\n    if (msg.payload.hasOwnProperty(\"command\") && msg.payload.command!=='getTable') {\n        status.fill=\"blue\";\n        switch(msg.payload.command) {\n            case 'deleteTable':\n                flow.set(\"$parent.\"+tableContext.tableData.name,undefined,tableContext.tableData.storage);\n                tableData={};\n                status.text=\"tabledata deleted\";\n                node.warn(\"[ui-table handler] \"+\"tabledata deleted\");\n                break;\n            case 'deleteRow':\n            case 'deleteDevice':\n                var deleteRow = function(id) {\n                    // check if row is in root\n                    if (tableData.hasOwnProperty(id)) {\n                        delete tableData[id]\n                        return true;\n                    }\n                    // check if row is a child\n                    let deleteChildRow = function(children, id) {\n                        for(let i = 0; i < children.length; i++){\n                            if (children[i].hasOwnProperty(tableIndex) && children[i][tableIndex]===id) {\n                                children.splice(i, 1); \n                                return true; \n                            }\n                            if (children[i].hasOwnProperty(\"_children\")) {\n                                if (deleteChildRow(children[i]._children,id)) {\n                                    if (children[i]._children.length === 0) {\n                                        delete children[i]._children;\n                                    }\n                                    return true;\n                                }\n                            }\n                        }\n                        return false;\n                    };\n                    \n                    for (let row in tableData) {\n                        if (tableData[row].hasOwnProperty(\"_children\")) {\n                            if (deleteChildRow(tableData[row]._children,id)) return true;\n                        }\n                    }\n                    return false;\n                }\n                \n                if (deleteRow(msg.payload.object)) {\n                    status.text=msg.payload.object+\" deleted\";\n                } else {\n                    status.fill=\"yellow\";\n                    status.text=msg.payload.object+\" undefined\";\n                }\n                break;\n            case 'ignoreRow':\n            case 'ignoreDevice':\n                if (tableData.hasOwnProperty(msg.payload.object)) {\n                    delete tableData[msg.payload.object];\n                    status.text=msg.payload.object+\" will be ignored\";\n                    if (!tableConfig.hasOwnProperty('ignoreDevice')) tableConfig.ignoreDevice={};\n                    tableConfig.ignoreDevice[msg.payload.object]=true;\n                }\n                break;\n            case 'unIgnoreRow':\n            case 'unIgnoreDevice':\n                if (tableConfig.hasOwnProperty('ignoreDevice')) {\n                    delete tableConfig.ignoreDevice[msg.payload.object];\n                }\n                break;\n            case 'unIgnoreRows':\n            case 'unIgnoreDevices':\n                delete tableConfig.ignoreDevice;\n                break;\n            case 'updateData':\n                status.text=\"column \"+msg.payload.column+\" updated\";\n                delete msg.ui_control;\n                return [{payload:status},msg];\n            case 'updateTable':\n                status.text=msg.payload.command+\": \";\n                break;\n            case 'columnHide':\n                if (!tableConfig.hasOwnProperty('columnVisible')) tableConfig.columnVisible={};\n                tableConfig.columnVisible[msg.payload.object]=false;\n                break;\n            case 'columnUnHide':\n                if (!tableConfig.hasOwnProperty('columnVisible')) tableConfig.columnVisible={};\n                tableConfig.columnVisible[msg.payload.object]=true;\n                break;\n            case 'columnsUnHide':\n                for (let column in tableConfig.columnVisible) {\n                    if (tableConfig.columnVisible.hasOwnProperty(column)) tableConfig.columnVisible[column]=true;\n                }\n                break;\n            case 'refreshTable':\n                break;\n            case 'deleteColumnOrder':\n            case 'restoreColumnOrder':\n                delete tableConfig.columns;\n                break;\n            case 'deleteColumnWidth':\n            case 'resetColumnWidth':\n                delete tableConfig.columnWidths;\n                break;\n            case 'setResponsiveLayout':\n                tableConfig.ResponsiveLayout=!tableConfig.ResponsiveLayout;\n                break;\n            case 'deleteRowOrder':\n                delete tableConfig.rowOrder;\n                break;\n            case 'setMaxStore':\n                tableConfig.maxStore=msg.payload.object;\n                maxStore=msg.payload.object;\n                break;\n            case 'setMaxRows':\n                tableConfig.maxRows=msg.payload.object;\n                maxRows=msg.payload.object;\n                break;\n            default:\n                status.fill=\"red\";\n                status.text=\"unknown command \"+msg.payload.command;\n                node.warn(\"[ui-table handler] \"+status.text);\n                break;\n        }\n        flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n        node.send([{payload:status},null,null]);\n    }\n\n    // crawl through tabulator arrays and updated user defined values\n    var crawlTabulator = function (columns,match,config,property) {\n        for (let column of columns) {\n            if (column.hasOwnProperty(\"columns\")) {\n                crawlTabulator(column.columns,match,config,property);\n            } else if (config.hasOwnProperty(column[match])) column[property]=config[column.field];\n        }\n    };\n    \n    // restore custom column width\n    if (tableConfig.hasOwnProperty(\"columnWidths\") && msg.hasOwnProperty(\"ui_control\")) {\n        crawlTabulator(msg.ui_control.tabulator.columns,\"field\",tableConfig.columnWidths,\"width\");\n    }\n    \n    // restore custom column hide/show\n    if (tableConfig.hasOwnProperty(\"columnVisible\") && msg.hasOwnProperty(\"ui_control\")) {\n        crawlTabulator(msg.ui_control.tabulator.columns,\"field\",tableConfig.columnVisible,\"visible\");\n    }\n    \n    // restore custom responsive / standard view\n    if (tableConfig.hasOwnProperty(\"ResponsiveLayout\")) {\n        if (!tableConfig.ResponsiveLayout) {\n            msg.ui_control.tabulator.responsiveLayout=false;\n        }\n        msg.ui_control.tabulator.columns.forEach((column,index) => {\n            if (column.formatter===\"responsiveCollapse\") { // hide expand column on any position\n                column.visible=tableConfig.ResponsiveLayout;\n                return;\n            }\n        });\n    }\n\n    // sort columns\n    if (tableConfig.hasOwnProperty(\"columns\") && msg.hasOwnProperty(\"ui_control\") && msg.ui_control.hasOwnProperty(\"tabulator\")) {\n        var addedColumns = 0;\n        var sortColumnsByLayout = function (sortColumns, columnsLayout, targetColumns) {\n            for (var layoutColumn=0;  layoutColumn<columnsLayout.length; layoutColumn++) {\n                for (var sortColumn in sortColumns) {\n                    if (sortColumns[sortColumn].hasOwnProperty(\"columns\")) {\n                        targetColumns.push({\"title\":sortColumns[sortColumn].title, \"columns\":[]});\n                        sortColumnsByLayout(sortColumns[sortColumn].columns,columnsLayout,targetColumns[targetColumns.length-1].columns);\n                        layoutColumn=addedColumns; // jump forward after childes added\n                    } else {\n                        if (columnsLayout[layoutColumn].field===sortColumns[sortColumn].field){\n                            targetColumns.push(sortColumns[sortColumn]);\n                            addedColumns++;\n                            break;\n                        }\n                    }\n                }\n            }\n        };                 \n        var newColumns=[];\n        sortColumnsByLayout(msg.ui_control.tabulator.columns,tableConfig.columns,newColumns);\n        msg.ui_control.tabulator.columns=newColumns;\n    }\n\n    // restore stored lines after connect\n\n    let command = msg.payload.command;\n    var tableArray;\n    if (command===\"getTable\") {\n        msg.payload.tableArray=[];\n        tableArray=msg.payload.tableArray\n    } else {\n        msg.payload=[];\n        tableArray=msg.payload;\n    }\n    \n    var pushRowData = function(rowData) {\n        // ignore rows in ignoreRows array\n        if (tableConfig && tableConfig.hasOwnProperty(\"ignoreDevice\") && tableConfig.ignoreDevice[rowData]) {\n            // do nothing\n        } else {\n            // merge edits into table\n            if (tableEdit && tableEdit.hasOwnProperty(rowData)) {\n                let tableRow = RED.util.cloneMessage(tableData[rowData]);\n                Object.keys(tableEdit[rowData]).forEach((field) => {\n                    tableRow[field]=tableEdit[rowData][field];\n                });\n                tableArray.push(tableRow);\n            } else {\n                tableArray.push(tableData[rowData]);\n            }\n        }\n    }\n    \n    if (tableConfig.hasOwnProperty(\"rowOrder\")) {\n        // first check if new rows exits which are not in rowOrder\n        Object.keys(tableData).forEach((key) => {\n            if (tableConfig.rowOrder.indexOf(tableData[key][tableIndex])<0) {\n                tableConfig.rowOrder.push(tableData[key][tableIndex]); // add row to the end of rowOrder\n            }\n        });\n        tableConfig.rowOrder.forEach((value,index) => {\n            node.warn([\"pushRowOrder\",value,tableData.hasOwnProperty(value),tableData[value]]);\n            if (tableData.hasOwnProperty(value)) { // push rows in rowOrder sequence\n                pushRowData(value);\n            } else { // delete not existing rows from rowOrder\n                tableConfig.rowOrder.splice(index,1)\n            }\n       });\n    } else {\n        for (let rowData in tableData) {\n            pushRowData(rowData);\n        }\n    }\n    // store the first index if maxRows limits amount of displayed lines\n    if (maxRows>0 && tableData) {\n        let tableKeys=Object.keys(tableData);\n        if (tableKeys.length>0 && typeof tableData[tableKeys[0]][tableIndex] === \"number\") {\n            tableConfig.currentFirstRow=tableData[tableKeys[0]][tableIndex];\n        }\n    }\n    \n    if (command=='getTable'){\n        status.fill=\"blue\";\n        status.text+=\" \"+tableArray.length+\" rows emitted\";\n        return [{payload:status},null,msg];\n    } else {\n        status.fill=\"blue\";\n        status.text+=\" \"+tableArray.length+\" rows restored\";\n        return [{payload:status},msg,[{topic:\"maxRows\",payload:maxRows},{topic:\"maxStore\",payload:maxStore}]];\n    }\n} if (msg.hasOwnProperty(\"ui_control\")) {\n    // callback from tabulator\n    status.fill=\"blue\";\n    status.text=\"callback \"+msg.ui_control.callback;\n    switch(msg.ui_control.callback) {\n        case \"columnResized\": // save new column width\n            if (tableConfig.columnWidths===undefined) tableConfig.columnWidths={};\n            tableConfig.columnWidths[msg.ui_control.columnWidths.field]=msg.ui_control.columnWidths.width;\n            flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n            status.text=msg.ui_control.columnWidths.field+\"=\"+msg.ui_control.columnWidths.width+\"px\";\n            break;\n        case \"columnMoved\": // save new column order\n            if (tableConfig.columns===undefined) tableConfig.columns=[];\n            tableConfig.columns=msg.ui_control.columns;\n            flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n            status.text=\"new column order\";\n            break;\n        case \"cellEdited\":\n            if (tableEdit) {\n                if (!tableEdit.hasOwnProperty(msg[tableIndex])) tableEdit[msg[tableIndex]]={};\n                tableEdit[msg[tableIndex]][msg.field] = msg.payload; // save data and mark as edited field\n                flow.set(\"$parent.\"+tableContext.tableEdit.name,tableEdit,tableContext.tableEdit.storage);\n                mergeEdits(tableData);\n                flow.set(\"$parent.\"+tableContext.tableData.name,tableData,tableContext.tableData.storage);\n                status.text=msg[tableIndex]+\" \"+msg.field+\" edited to \"+msg.payload;\n                msg[tableDataProp]={};\n                msg[tableDataProp][tableIndex]=msg[tableIndex];\n                msg[tableDataProp][msg.field]=msg.payload;\n                msgToTable.payload.arguments=[[msg[tableDataProp]]];\n                node.send([{payload:status},null,msg]); // was node.send([{payload:status},msgToTable,msg]);\n            } else {\n                node.error(\"[ui-table handler] no tableEdit store defined!\")\n            }\n            break;\n        case \"rowContext\":\n            msg.ignoredDevices=[];\n            for (let rowData in tableConfig.ignoreDevice) {\n                if (tableConfig.ignoreDevice.hasOwnProperty(rowData)) {\n                    msg.ignoredDevices.push({\"text\":rowData,\"icon\":\"fa fa-plug\",\"topic\":\"unIgnoreDevice\",\"payload\":rowData})  \n                }\n            }\n            break;\n        case \"headerContext\":\n            msg.hiddenColumns=[];\n            let tabulatorConfig = env.get('tabulator');\n            for (let column in tableConfig.columnVisible) {\n                if (tableConfig.columnVisible.hasOwnProperty(column) &&\n                    !tableConfig.columnVisible[column]) {\n                    let configColumn=searchTabulatorColumn(tabulatorConfig.tabulator.columns,\"field\",column);\n                    let icon;\n                    if (configColumn.hasOwnProperty('title') && configColumn.title.toLowerCase().includes('</i>')) {\n                        // <i class='fa fa-star-half-o'></i> State\n                        let start=configColumn.title.indexOf(\"'fa \");\n                        let end=configColumn.title.indexOf(\"'\",start+1);\n                        icon=configColumn.title.substring(start+4,end);\n                    }\n                    msg.hiddenColumns.push({\"text\":column,\"icon\":icon,\"topic\":\"columnUnHide\",\"payload\":configColumn.field})  \n                }\n            }\n            break;\n        case \"rowMoved\":\n            if (tableConfig.rowOrder===undefined) tableConfig.rowOrder={};\n            tableConfig.rowOrder=msg.ui_control.rowOrder;\n            flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n            status.text=\"new row order\";\n            break;\n        default:\n            // if rowIndex exists pass complete object\n            if (msg.hasOwnProperty(tableIndex)) {\n                msg.rowData=tableData[msg[tableIndex]];\n            }\n            status.text=\"pass message\";\n    }\n    return [{payload:status},null,msg];\n} \nif (Array.isArray(msg.payload)) {\n    tableData={};\n    \n    msg.payload.forEach((row) => {\n        if (row.hasOwnProperty(tableIndex)) {\n            tableData[row[tableIndex]]=row;\n        }\n    });\n    if (msg.keepEdits) {\n        mergeEdits(tableData);\n    }\n\n    \n    flow.set(\"$parent.\"+tableContext.tableData.name,tableData,tableContext.tableData.storage);\n    if (tableContext.hasOwnProperty(\"tableEdit\") && !msg.keepEdits) {\n        tableEdit={};\n        flow.set(\"$parent.\"+tableContext.tableEdit.name,tableEdit,tableContext.tableEdit.storage);\n    }\n    status.fill=\"blue\"\n    status.text=\"table replaced \"+msg.payload.length+\" rows\";\n    return [{payload:status},msg,null];\n}    \n    \n// nothing to do bejond this point\nstatus.text+=\" [\"+msg.payload+\"]\";\nreturn [{payload:status},null];\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 192,
        "y": 85,
        "wires": [
            [],
            [],
            []
        ],
        "icon": "font-awesome/fa-table"
    },
    {
        "id": "e8f93ee8c0be8054",
        "type": "debug",
        "z": "299a5e821c565bab",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 770,
        "y": 1580,
        "wires": []
    },
    {
        "id": "a1cf4fe3756fb9d5",
        "type": "inject",
        "z": "299a5e821c565bab",
        "d": true,
        "name": "Select",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "SELECT TOP (1) [Topic]       ,[Payload]   FROM [Dev].[dbo].[MQTTData]",
        "payloadType": "str",
        "x": 171.00000381469727,
        "y": 1513.9999980926514,
        "wires": [
            [
                "fe808e3d7fe765a2"
            ]
        ]
    },
    {
        "id": "fe808e3d7fe765a2",
        "type": "MSSQL",
        "z": "299a5e821c565bab",
        "mssqlCN": "76839cf0e528d185",
        "name": "MSSQL",
        "query": "",
        "outField": "payload",
        "x": 540,
        "y": 1580,
        "wires": [
            [
                "e8f93ee8c0be8054",
                "54cef5748b0fcd4b"
            ]
        ]
    },
    {
        "id": "fc406a290a041fa2",
        "type": "inject",
        "z": "299a5e821c565bab",
        "name": "Insert",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "INSERT INTO [node_red].[dbo].[mytable] (Age, M) VALUES (100, 'Erichsen' )",
        "payloadType": "str",
        "x": 170,
        "y": 1700,
        "wires": [
            [
                "fe808e3d7fe765a2"
            ]
        ]
    },
    {
        "id": "9d1b2e39a39dc90b",
        "type": "inject",
        "z": "299a5e821c565bab",
        "name": "Update",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 1600,
        "wires": [
            [
                "f57013baa583bb23"
            ]
        ]
    },
    {
        "id": "f57013baa583bb23",
        "type": "function",
        "z": "299a5e821c565bab",
        "name": "Function",
        "func": "var d = new Date,\ndformat = [d.getMonth()+1,\n    d.getDate(),\n    d.getFullYear()].join('/')+' '+\n    [d.getHours(),\n    d.getMinutes(),\n    d.getSeconds()].join(':');\n//\"UPDATE [node_red].[dbo].[mytable] \"\nvar gk = global.get(\"count\");\nvar dtstmp = new Date().toString();\nvar pld = \"INSERT INTO[node_red].[dbo].[mytable](Age,Timestamp)\"      \npld = pld + \"VALUES ('\" + gk + \"','\" + dformat + \"')\"\n\n//pld = pld + \"SET Timestamp = '\" + dformat + \"' \"\n\n//pld = pld + \"WHERE id = 1\"\n\nmsg.payload = pld\nreturn msg;\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 1616,
        "wires": [
            [
                "fe808e3d7fe765a2"
            ]
        ]
    },
    {
        "id": "26b32da09825aaff",
        "type": "inject",
        "z": "299a5e821c565bab",
        "name": "Select",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "2",
        "payloadType": "num",
        "x": 170,
        "y": 1660,
        "wires": [
            [
                "4dabe6ef693119b0"
            ]
        ]
    },
    {
        "id": "4dabe6ef693119b0",
        "type": "function",
        "z": "299a5e821c565bab",
        "name": "Function",
        "func": "var pld  = \"SELECT BREAKDOWN \"\n//var pld =       \"SELECT ID, Topic, Payload, Timestamp \"\npld = pld + \"FROM [node_red].[dbo].[DOWN_TIME_1] \"\npld = pld + \"WHERE ID = 1 \"  \n\n//pld = pld + \"VALUES ('\" + gk + \"','\" + dformat + \"')\"\nmsg.payload = pld\nreturn msg;\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 311,
        "y": 1672,
        "wires": [
            [
                "fe808e3d7fe765a2"
            ]
        ]
    },
    {
        "id": "f7089b30aec4c2da",
        "type": "mqtt in",
        "z": "299a5e821c565bab",
        "name": "",
        "topic": "SQLTest/#",
        "qos": "0",
        "broker": "982d18a4808358eb",
        "inputs": 0,
        "x": 162,
        "y": 1722,
        "wires": [
            [
                "e88a0402568b3242"
            ]
        ]
    },
    {
        "id": "e88a0402568b3242",
        "type": "function",
        "z": "299a5e821c565bab",
        "name": "Function",
        "func": "var d = new Date()\nvar dformat = [d.getMonth()+1,\n    d.getDate(),\n    d.getFullYear()].join('/')+' '+\n    [d.getHours(),\n    d.getMinutes(),\n    d.getSeconds()].join(':');\n\nvar pld =       \"INSERT INTO [Dev].[dbo].[MQTTData] \"\npld = pld + \"(Topic, Payload, Timestamp) \"\npld = pld + \"VALUES ('\" + msg.topic + \"', '\" + msg.payload + \"', '\" + dformat + \"')\"\n\nmsg.topic = ''\nmsg.payload = pld\nreturn msg;\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 304,
        "y": 1722,
        "wires": [
            [
                "fe808e3d7fe765a2",
                "e8f93ee8c0be8054"
            ]
        ]
    },
    {
        "id": "209fd9879c25ae38",
        "type": "MSSQL",
        "z": "299a5e821c565bab",
        "mssqlCN": "76839cf0e528d185",
        "name": "MSSQL",
        "query": "INSERT INTO [node_red].[dbo].[mytable] (Age, M) VALUES (100, global.get(\"count\") )",
        "outField": "payload",
        "x": 580,
        "y": 1660,
        "wires": [
            [
                "e8f93ee8c0be8054"
            ]
        ]
    },
    {
        "id": "54cef5748b0fcd4b",
        "type": "function",
        "z": "299a5e821c565bab",
        "name": "function 19",
        "func": "var test = msg.payload[0].BREAKDOWN;\nvar tag1 = test \nmsg.payload = tag1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "4e7bed309e9a5f21",
        "type": "function",
        "z": "299a5e821c565bab",
        "name": "Function",
        "func": "\n//\"UPDATE [node_red].[dbo].[mytable] \"\nvar gk = global.get(\"counter\");\nvar gk_1 = 1\nvar pld = \"UPDATE [node_red].[dbo].[DOWN_TIME_1] \"      \n\n\n//pld = pld + \"VALUES ('\" + gk + \"','\" + gk_1 + \"')\"\n\npld = pld + \"SET BREAKDOWN = \" + gk \n\npld = pld + \" WHERE ID = 1 \"\n\nmsg.payload = pld\nreturn msg;\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 160,
        "wires": [
            [
                "e9964a6da0375548"
            ]
        ]
    },
    {
        "id": "e9964a6da0375548",
        "type": "MSSQL",
        "z": "299a5e821c565bab",
        "mssqlCN": "76839cf0e528d185",
        "name": "MSSQL",
        "query": "",
        "outField": "payload",
        "x": 740,
        "y": 140,
        "wires": [
            [
                "5a5eb6695351d26c"
            ]
        ]
    },
    {
        "id": "5a5eb6695351d26c",
        "type": "delay",
        "z": "299a5e821c565bab",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 880,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "36d09fd9264dce8b",
        "type": "function",
        "z": "299a5e821c565bab",
        "name": "Function",
        "func": "var ontime = flow.get(\"set_date_on_2\")\n//var ontime_1 = flow.get(\"set_time_on\")\nvar offtime = flow.get(\"set_date_off\")\n//var offtime_1 = flow.get(\"set_time_off\")\n//var ondate = ontime + \" \" + ontime_1;\n//var offdate = offtime + \" \" + offtime_1;\nvar pld = \"SELECT DATE,FINAL_OEE,TOTAL_DOWN,PRODUCTION_COUNT,PRODUCTION_PLAN_TIME,BREAKDWON,NOLOAD,GAS_CONSUMPTION,POWER_CONSUMPTION,BREAKDOWN_LOSS,POWER_LOSS,ORGANIZATION_LOSS,QUALITY_LOSS,SETUP_LOSS,NOLOAD_LOSS,SAMPLE_LOSS,LIFTER_LOSS,TECHNICAL_LOSS,UNACCOUNT_LOSS \" //NO_LOAD,TOTAL_DOWN_TIME \"\n\n//var pld =       \"SELECT ID, Topic, Payload, Timestamp \"\npld = pld + \"FROM [node_red].[dbo].[MC_DAILY_PRODUCTION_HISTORY] \"\n\npld = pld + \"WHERE DATE = '\" + ontime + \" ' \";\n//pld = pld + \"WHERE TIME BETWEEN '\" + ontime + \" ' AND ' \" + offtime + \"' ORDER BY TIME \";\n//pld = pld + \"WHERE ID = 1 \"  \n\n//pld = pld + \"VALUES ('\" + gk + \"','\" + dformat + \"')\"\nmsg.payload = pld\nreturn msg;\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 440,
        "wires": [
            [
                "7e05da1470ba1ab3"
            ]
        ]
    },
    {
        "id": "7e05da1470ba1ab3",
        "type": "MSSQL",
        "z": "299a5e821c565bab",
        "mssqlCN": "76839cf0e528d185",
        "name": "MSSQL",
        "query": "",
        "outField": "payload",
        "x": 1060,
        "y": 440,
        "wires": [
            [
                "f652b78f989596ff",
                "3f3fa9e1938f21d7",
                "ce0dfbf3565f2c9c",
                "a9599ef6186b66a9",
                "8d0bb6784f8b414e",
                "f15ad624822bd215",
                "e8baf7cb4d8437e3",
                "9974b07e3dc59c00",
                "140b208ea2485f56",
                "f1749186b6332d1c",
                "f05b4e76903fb291"
            ]
        ]
    },
    {
        "id": "d8d7af47be462e2e",
        "type": "change",
        "z": "299a5e821c565bab",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "set_date_off",
                "pt": "flow",
                "to": "payload",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "set_date_off",
                "pt": "global",
                "to": "payload",
                "tot": "global",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 540,
        "wires": [
            [
                "36d09fd9264dce8b"
            ]
        ]
    },
    {
        "id": "ccdfbd43662bd9c0",
        "type": "change",
        "z": "299a5e821c565bab",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[   {   \"labels\": [$$.payload.TIME],   \"data\":[[$$.payload.TOTAL_DOWN_TIME]],   \"series\":[]     } ]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1700,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "9974b07e3dc59c00",
        "type": "change",
        "z": "299a5e821c565bab",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[   {   \"labels\": [\"BREAKDWON\",\"NOLOAD\"],   \"data\":[$$.payload.BREAKDWON,$$.payload.NOLOAD],   \"series\":[$split($moment($$.payload.DATE).tz(\"Asia/Calcutta\").format(\"YYYY-MM-DD\"),\"T\")]  } ]\t\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 580,
        "wires": [
            [
                "c45269c1c18f3747"
            ]
        ]
    },
    {
        "id": "3069c9c0260b70f1",
        "type": "change",
        "z": "299a5e821c565bab",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[   {   \"labels\": [$$.payload.TIME],   \"data\":[$$.payload.NO_LOAD,$$.payload.BREAK_DOWN],   \"series\":[]  } ]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1720,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "a016e3e38315a847",
        "type": "ui_date_picker",
        "z": "299a5e821c565bab",
        "name": "",
        "label": "DATE",
        "group": "9a9b4b80002072fd",
        "order": 1,
        "width": 6,
        "height": 1,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 170,
        "y": 700,
        "wires": [
            [
                "28d3d2773f2976c5"
            ]
        ]
    },
    {
        "id": "b0668037fd0eef0a",
        "type": "change",
        "z": "299a5e821c565bab",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "set_date_on_2",
                "pt": "flow",
                "to": "payload",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "set_date_on_2",
                "pt": "global",
                "to": "payload",
                "tot": "global",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "c45269c1c18f3747",
        "type": "ui_chart",
        "z": "299a5e821c565bab",
        "name": "",
        "group": "9a9b4b80002072fd",
        "order": 47,
        "width": 6,
        "height": 5,
        "label": "DOWN TIME (Sec.)",
        "chartType": "bar",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": "50",
        "useOneColor": true,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1590,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "6a4937fb1f228077",
        "type": "change",
        "z": "299a5e821c565bab",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "set_date_on",
                "pt": "flow",
                "to": "payload",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "set_date_on",
                "pt": "global",
                "to": "payload",
                "tot": "global",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 500,
        "wires": [
            [
                "36d09fd9264dce8b"
            ]
        ]
    },
    {
        "id": "e6a272f1bf8bad67",
        "type": "ui_button",
        "z": "299a5e821c565bab",
        "name": "",
        "group": "9a9b4b80002072fd",
        "order": 5,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "ENTER",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "TRUE",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 660,
        "y": 420,
        "wires": [
            [
                "36d09fd9264dce8b"
            ]
        ]
    },
    {
        "id": "3f3fa9e1938f21d7",
        "type": "change",
        "z": "299a5e821c565bab",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[   {   \"labels\": [\"PRODUCTION-\"+$$.payload.PRODUCTION_COUNT],   \"data\":[$$.payload.PRODUCTION_COUNT],   \"series\":[]  } ]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "f652b78f989596ff",
        "type": "function",
        "z": "299a5e821c565bab",
        "name": "function 44",
        "func": "var oee = msg.payload[0].FINAL_OEE;\nmsg.payload = oee\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 720,
        "wires": [
            [
                "30be19137ccf596d"
            ]
        ]
    },
    {
        "id": "30be19137ccf596d",
        "type": "ui_gauge",
        "z": "299a5e821c565bab",
        "name": "",
        "group": "9a9b4b80002072fd",
        "order": 9,
        "width": 6,
        "height": 5,
        "gtype": "donut",
        "title": "OEE %",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#00b500",
            "#00b500"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1400,
        "y": 720,
        "wires": []
    },
    {
        "id": "010a1f64e65141fc",
        "type": "ui_chart",
        "z": "299a5e821c565bab",
        "name": "",
        "group": "9a9b4b80002072fd",
        "order": 35,
        "width": 6,
        "height": 5,
        "label": "TOTAL PRODUCTION (No's.)",
        "chartType": "bar",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": "50",
        "useOneColor": true,
        "useUTC": false,
        "colors": [
            "#ddec09",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1470,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "ce0dfbf3565f2c9c",
        "type": "function",
        "z": "299a5e821c565bab",
        "name": "function 45",
        "func": "var gas = msg.payload[0].GAS_CONSUMPTION;\nmsg.payload = gas\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 760,
        "wires": [
            [
                "fda7dee4abfb8f19"
            ]
        ]
    },
    {
        "id": "a9599ef6186b66a9",
        "type": "function",
        "z": "299a5e821c565bab",
        "name": "function 46",
        "func": "var pwr = msg.payload[0].POWER_CONSUMPTION;\nmsg.payload = pwr\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 820,
        "wires": [
            [
                "5c7380469312306f"
            ]
        ]
    },
    {
        "id": "fda7dee4abfb8f19",
        "type": "ui_gauge",
        "z": "299a5e821c565bab",
        "name": "",
        "group": "9a9b4b80002072fd",
        "order": 59,
        "width": 6,
        "height": 5,
        "gtype": "gage",
        "title": "GAS CONSUMPTION (m³/h)",
        "label": "m³/h)",
        "format": "{{value}}",
        "min": 0,
        "max": "2000",
        "colors": [
            "#09f6f2",
            "#09f6f2",
            "#09f6f2"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1460,
        "y": 760,
        "wires": []
    },
    {
        "id": "5c7380469312306f",
        "type": "ui_gauge",
        "z": "299a5e821c565bab",
        "name": "",
        "group": "9a9b4b80002072fd",
        "order": 65,
        "width": 6,
        "height": 5,
        "gtype": "gage",
        "title": "ELECTRICITY CONSUMPTION (Kwh)",
        "label": "Kwh",
        "format": "{{value}}",
        "min": 0,
        "max": "2000",
        "colors": [
            "#f27907",
            "#f27907",
            "#f27907"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1490,
        "y": 820,
        "wires": []
    },
    {
        "id": "c42931e3ad75d357",
        "type": "function",
        "z": "299a5e821c565bab",
        "name": "Function",
        "func": "var ontime = flow.get(\"set_date_on_2\")\n//var ontime_1 = flow.get(\"set_time_on\")\nvar offtime = flow.get(\"set_date_off\")\n//var offtime_1 = flow.get(\"set_time_off\")\n//var ondate = ontime + \" \" + ontime_1;\n//var offdate = offtime + \" \" + offtime_1;\nvar pld = \"SELECT TIME,MACHINE_NAME,MODEL_NAME,OPERATOR_NAME,INSPECTOR_NAME,LEAF_NO,SECTION,WEIGHT,QTY,TOTAL_WEIGHT,DEFECT \" //NO_LOAD,TOTAL_DOWN_TIME \"\n\n//var pld =       \"SELECT ID, Topic, Payload, Timestamp \"\npld = pld + \"FROM [node_red].[dbo].[QT_DAILY_REJECTION_HISTORY_1] \"\n\npld = pld + \"WHERE SELECTED_DATE = '\" + ontime + \" ' \";\n//pld = pld + \"WHERE TIME BETWEEN '\" + ontime + \" ' AND ' \" + offtime + \"' ORDER BY TIME \";\n//pld = pld + \"WHERE ID = 1 \"  \n\n//pld = pld + \"VALUES ('\" + gk + \"','\" + dformat + \"')\"\nmsg.payload = pld\nreturn msg;\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 320,
        "wires": [
            [
                "f2c79967570e05a1"
            ]
        ]
    },
    {
        "id": "8d0bb6784f8b414e",
        "type": "delay",
        "z": "299a5e821c565bab",
        "name": "",
        "pauseType": "delay",
        "timeout": "6",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1220,
        "y": 320,
        "wires": [
            [
                "c42931e3ad75d357"
            ]
        ]
    },
    {
        "id": "07ef47ec068bb939",
        "type": "ui_table",
        "z": "299a5e821c565bab",
        "group": "9a9b4b80002072fd",
        "name": "REJECTION",
        "order": 33,
        "width": 21,
        "height": 5,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 1670,
        "y": 280,
        "wires": []
    },
    {
        "id": "f2c79967570e05a1",
        "type": "MSSQL",
        "z": "299a5e821c565bab",
        "mssqlCN": "76839cf0e528d185",
        "name": "MSSQL",
        "query": "",
        "outField": "payload",
        "x": 1500,
        "y": 320,
        "wires": [
            [
                "07ef47ec068bb939"
            ]
        ]
    },
    {
        "id": "566456448e00a1aa",
        "type": "ui_text",
        "z": "299a5e821c565bab",
        "group": "9a9b4b80002072fd",
        "order": 30,
        "width": 8,
        "height": 1,
        "name": "",
        "label": "REJECTION",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1670,
        "y": 240,
        "wires": []
    },
    {
        "id": "f15ad624822bd215",
        "type": "delay",
        "z": "299a5e821c565bab",
        "name": "",
        "pauseType": "delay",
        "timeout": "8",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1220,
        "y": 360,
        "wires": [
            [
                "c63a5a1626f2add6"
            ]
        ]
    },
    {
        "id": "c63a5a1626f2add6",
        "type": "function",
        "z": "299a5e821c565bab",
        "name": "Function",
        "func": "var ontime = flow.get(\"set_date_on_2\")\n//var ontime_1 = flow.get(\"set_time_on\")\nvar offtime = flow.get(\"set_date_off\")\n//var offtime_1 = flow.get(\"set_time_off\")\n//var ondate = ontime + \" \" + ontime_1;\n//var offdate = offtime + \" \" + offtime_1;\nvar pld = \"SELECT TIME,PROBLEM,AREA,ACTION,FREQUENT,LOSS \" //NO_LOAD,TOTAL_DOWN_TIME \"\n\n//var pld =       \"SELECT ID, Topic, Payload, Timestamp \"\npld = pld + \"FROM [node_red].[dbo].[break_down_history_1] \"\n\npld = pld + \"WHERE SLECTED_DATE = '\" + ontime + \" ' \";\n//pld = pld + \"WHERE TIME BETWEEN '\" + ontime + \" ' AND ' \" + offtime + \"' ORDER BY TIME \";\n//pld = pld + \"WHERE ID = 1 \"  \n\n//pld = pld + \"VALUES ('\" + gk + \"','\" + dformat + \"')\"\nmsg.payload = pld\nreturn msg;\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 360,
        "wires": [
            [
                "7034bd394fc37093"
            ]
        ]
    },
    {
        "id": "7034bd394fc37093",
        "type": "MSSQL",
        "z": "299a5e821c565bab",
        "mssqlCN": "76839cf0e528d185",
        "name": "MSSQL",
        "query": "",
        "outField": "payload",
        "x": 1500,
        "y": 360,
        "wires": [
            [
                "e6502228a11573d9"
            ]
        ]
    },
    {
        "id": "e6502228a11573d9",
        "type": "ui_table",
        "z": "299a5e821c565bab",
        "group": "9a9b4b80002072fd",
        "name": "BREAKDOWN",
        "order": 49,
        "width": 21,
        "height": 5,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 1680,
        "y": 360,
        "wires": []
    },
    {
        "id": "5a894c0eb832e213",
        "type": "ui_text",
        "z": "299a5e821c565bab",
        "group": "9a9b4b80002072fd",
        "order": 45,
        "width": 8,
        "height": 1,
        "name": "",
        "label": "BREAKDOWN",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1680,
        "y": 320,
        "wires": []
    },
    {
        "id": "e8baf7cb4d8437e3",
        "type": "delay",
        "z": "299a5e821c565bab",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1260,
        "y": 520,
        "wires": [
            [
                "6348ec29060b881b"
            ]
        ]
    },
    {
        "id": "6348ec29060b881b",
        "type": "function",
        "z": "299a5e821c565bab",
        "name": "Function",
        "func": "var ontime = flow.get(\"set_date_on_2\")\n//var ontime_1 = flow.get(\"set_time_on\")\nvar offtime = flow.get(\"set_date_off\")\n//var offtime_1 = flow.get(\"set_time_off\")\n//var ondate = ontime + \" \" + ontime_1;\n//var offdate = offtime + \" \" + offtime_1;\nvar pld = \"SELECT DATE,PRODUCT_NAME,PRODUCT_QTY,PRODUCTION_COUNT,PRODUCTION_PLAN_TIME,MACHINE_CYCLE_TIME,ACTUAL_OEE,OPERATOR_NAME \" //NO_LOAD,TOTAL_DOWN_TIME \"\n\n//var pld =       \"SELECT ID, Topic, Payload, Timestamp \"\npld = pld + \"FROM [node_red].[dbo].[MC_DAILY_PRODUCTION_1] \"\n\npld = pld + \"WHERE DATE = '\" + ontime + \" ' \";\n//pld = pld + \"WHERE TIME BETWEEN '\" + ontime + \" ' AND ' \" + offtime + \"' ORDER BY TIME \";\n//pld = pld + \"WHERE ID = 1 \"  \n\n//pld = pld + \"VALUES ('\" + gk + \"','\" + dformat + \"')\"\nmsg.payload = pld\nreturn msg;\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 520,
        "wires": [
            [
                "f168f0c651f1088e"
            ]
        ]
    },
    {
        "id": "f168f0c651f1088e",
        "type": "MSSQL",
        "z": "299a5e821c565bab",
        "mssqlCN": "76839cf0e528d185",
        "name": "MSSQL",
        "query": "",
        "outField": "payload",
        "x": 1580,
        "y": 520,
        "wires": [
            [
                "84d0f9b9be185c3d"
            ]
        ]
    },
    {
        "id": "84d0f9b9be185c3d",
        "type": "ui_table",
        "z": "299a5e821c565bab",
        "group": "9a9b4b80002072fd",
        "name": "PRODUCTION",
        "order": 7,
        "width": 21,
        "height": 4,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 1760,
        "y": 520,
        "wires": []
    },
    {
        "id": "96eab071c9ac54e0",
        "type": "ui_text",
        "z": "299a5e821c565bab",
        "group": "9a9b4b80002072fd",
        "order": 3,
        "width": 8,
        "height": 1,
        "name": "",
        "label": "PRODUCTION",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1760,
        "y": 480,
        "wires": []
    },
    {
        "id": "793d2494b3810ed0",
        "type": "change",
        "z": "299a5e821c565bab",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "from_dte_moth",
                "pt": "flow",
                "to": "payload",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "from_dte_moth",
                "pt": "global",
                "to": "payload",
                "tot": "global",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "c64bde8124e6fdde",
        "type": "change",
        "z": "299a5e821c565bab",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "to_dte_moth",
                "pt": "flow",
                "to": "payload",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "to_dte_moth",
                "pt": "global",
                "to": "payload",
                "tot": "global",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "593635ac102e6ecd",
        "type": "ui_date_picker",
        "z": "299a5e821c565bab",
        "name": "",
        "label": "FROM DATE",
        "group": "c3decad61a9a9538",
        "order": 1,
        "width": 9,
        "height": 1,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 170,
        "y": 1120,
        "wires": [
            [
                "320e67455ea70377"
            ]
        ]
    },
    {
        "id": "4187bcb8f3441ff7",
        "type": "ui_date_picker",
        "z": "299a5e821c565bab",
        "name": "",
        "label": "TO DATE",
        "group": "c3decad61a9a9538",
        "order": 3,
        "width": 9,
        "height": 1,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 160,
        "y": 1180,
        "wires": [
            [
                "0e97cd374804f026"
            ]
        ]
    },
    {
        "id": "ab13b223aa8e2cef",
        "type": "function",
        "z": "299a5e821c565bab",
        "name": "Function",
        "func": "var ontime = flow.get(\"from_dte_moth\")\n//var ontime_1 = flow.get(\"set_time_on\")\nvar offtime = flow.get(\"to_dte_moth\")\n//var offtime_1 = flow.get(\"set_time_off\")\n//var ondate = ontime + \" \" + ontime_1;\n//var offdate = offtime + \" \" + offtime_1;\nvar pld = \"SELECT DATE,FINAL_OEE,TOTAL_DOWN,PRODUCTION_COUNT,PRODUCTION_PLAN_TIME,BREAKDWON,NOLOAD,GAS_CONSUMPTION,POWER_CONSUMPTION,BREAKDOWN_LOSS,POWER_LOSS,ORGANIZATION_LOSS,QUALITY_LOSS,SETUP_LOSS,NOLOAD_LOSS \" //NO_LOAD,TOTAL_DOWN_TIME \"\n\n//var pld =       \"SELECT ID, Topic, Payload, Timestamp \"\npld = pld + \"FROM [node_red].[dbo].[MC_DAILY_PRODUCTION_HISTORY] \"\n\n//pld = pld + \"WHERE DATE = '\" + ontime + \" ' \";\npld = pld + \"WHERE DATE BETWEEN '\" + ontime + \" ' AND ' \" + offtime + \"' ORDER BY DATE \";\n//pld = pld + \"WHERE ID = 1 \"  \n\n//pld = pld + \"VALUES ('\" + gk + \"','\" + dformat + \"')\"\nmsg.payload = pld\nreturn msg;\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 1000,
        "wires": [
            [
                "f37a1ae283bc61f9"
            ]
        ]
    },
    {
        "id": "08ede13168ae60c5",
        "type": "ui_button",
        "z": "299a5e821c565bab",
        "name": "",
        "group": "c3decad61a9a9538",
        "order": 5,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "ENTER",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "TRUE",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 680,
        "y": 1000,
        "wires": [
            [
                "ab13b223aa8e2cef"
            ]
        ]
    },
    {
        "id": "f37a1ae283bc61f9",
        "type": "MSSQL",
        "z": "299a5e821c565bab",
        "mssqlCN": "76839cf0e528d185",
        "name": "MSSQL",
        "query": "",
        "outField": "payload",
        "x": 1060,
        "y": 1000,
        "wires": [
            [
                "a4acd26845a8a885",
                "f60e1f2d52c6f02a",
                "69c69a1689226f3c",
                "571c08beda00e57c",
                "cd867232993a9da6",
                "ee6345a4a996cd3f",
                "d5998540ceacde6b"
            ]
        ]
    },
    {
        "id": "ccc7f2ac3378377d",
        "type": "ui_chart",
        "z": "299a5e821c565bab",
        "name": "",
        "group": "c3decad61a9a9538",
        "order": 30,
        "width": 13,
        "height": 6,
        "label": "DOWN TIME BREAKDWON (Sec.)",
        "chartType": "bar",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "no data",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": "50",
        "useOneColor": true,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1580,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "522b28f5e26b85af",
        "type": "function",
        "z": "299a5e821c565bab",
        "name": "function 47",
        "func": "var v = Object.keys(msg.payload).length;\n\nvar k = msg.payload\nvar data = [];\nvar date = [];\nvar date_1 = [];\nvar data_1 = [];\n\nfor (let i = 0; i < v; i++) {\n\n    //msg.payload = [{ \"labels\": [date], \"data\": [data], \"series\": [] }] \n    //momv(date.push(k[i].DATE));\n    //var obj = momv(date)\n\n    data.push(k[i].FINAL_OEE)\n    date.push(k[i].DATE)\n    data_1[i] = data[i];\n    console.log(data_1)\n}\n//var msgPayload = msg.payload;\nmsg.payload = [{ \"series\": [], \"data\": [data_1], \"labels\": date }]\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1970,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "8695c1ef1c339c10",
        "type": "ui_chart",
        "z": "299a5e821c565bab",
        "name": "",
        "group": "c3decad61a9a9538",
        "order": 11,
        "width": 13,
        "height": 6,
        "label": "TOTAL PRODUCTION (No's.)",
        "chartType": "bar",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": "50",
        "useOneColor": true,
        "useUTC": false,
        "colors": [
            "#ddec09",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1590,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "17388469dae3c93a",
        "type": "function",
        "z": "299a5e821c565bab",
        "name": "function 48",
        "func": "var v = Object.keys(msg.payload).length;\n\nvar k = msg.payload\nvar data = [];\nvar date = [];\nvar date_1 = [];\nvar data_1 = [];\n\nfor (let i = 0; i < v; i++) {\n\n    //msg.payload = [{ \"labels\": [date], \"data\": [data], \"series\": [] }] \n    //momv(date.push(k[i].DATE));\n    //var obj = momv(date)\n\n    data.push(k[i].GAS_CONSUMPTION)\n    date.push(k[i].DATE)\n    data_1[i] = data[i];\n    console.log(data_1)\n}\n//var msgPayload = msg.payload;\nmsg.payload = [{ \"series\": [], \"data\": [data_1], \"labels\": date }]\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1970,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "4d6c6e1d3f1d84c2",
        "type": "function",
        "z": "299a5e821c565bab",
        "name": "function 49",
        "func": "var v = Object.keys(msg.payload).length;\n\nvar k = msg.payload\nvar data = [];\nvar date = [];\nvar date_1 = [];\nvar data_1 = [];\n\nfor (let i = 0; i < v; i++) {\n\n    //msg.payload = [{ \"labels\": [date], \"data\": [data], \"series\": [] }] \n    //momv(date.push(k[i].DATE));\n    //var obj = momv(date)\n\n    data.push(k[i].POWER_CONSUMPTION)\n    date.push(k[i].DATE)\n    data_1[i] = data[i];\n    console.log(data_1)\n}\n//var msgPayload = msg.payload;\nmsg.payload = [{ \"series\": [], \"data\": [data_1], \"labels\": date }]\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1950,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "a4acd26845a8a885",
        "type": "function",
        "z": "299a5e821c565bab",
        "name": "function 51",
        "func": "var v = Object.keys(msg.payload).length;\n\nvar k = msg.payload\nvar data = [];\nvar date = [];\nvar date_1 = [];\nvar data_1 = [];\n\nfor (let i=0;i<v;i++){\n     \n    //msg.payload = [{ \"labels\": [date], \"data\": [data], \"series\": [] }] \n    //momv(date.push(k[i].DATE));\n    //var obj = momv(date)\n    \n    data.push(k[i].BREAKDWON)\n    date.push(k[i].DATE)\n    data_1[i]= data[i];\n    console.log(data_1)\n}\n//var msgPayload = msg.payload;\nmsg.payload = [{ \"series\": [], \"data\": [data_1], \"labels\": date }]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "110ed433c6b7d7b7",
        "type": "function",
        "z": "299a5e821c565bab",
        "name": "function 52",
        "func": "var v = Object.keys(msg.payload).length;\n\nvar k = msg.payload\nvar data = [];\nvar date = [];\nvar date_1 = [];\nvar data_1 = [];\n\nfor (let i=0;i<v;i++){\n     \n    //msg.payload = [{ \"labels\": [date], \"data\": [data], \"series\": [] }] \n    //momv(date.push(k[i].DATE));\n    //var obj = momv(date)\n    \n    data.push(k[i].PRODUCTION_COUNT)\n    date.push(k[i].DATE)\n    data_1[i]= data[i];\n    console.log(data_1)\n}\n//var msgPayload = msg.payload;\nmsg.payload = [{ \"series\": [], \"data\": [data_1], \"labels\": date }]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1970,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "7c1d84f97dba8dcc",
        "type": "ui_chart",
        "z": "299a5e821c565bab",
        "name": "",
        "group": "c3decad61a9a9538",
        "order": 9,
        "width": 13,
        "height": 6,
        "label": "OEE %",
        "chartType": "bar",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": "50",
        "useOneColor": true,
        "useUTC": false,
        "colors": [
            "#ff7f0e",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1520,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "158be7318bee5e5b",
        "type": "ui_chart",
        "z": "299a5e821c565bab",
        "name": "",
        "group": "c3decad61a9a9538",
        "order": 51,
        "width": 13,
        "height": 6,
        "label": "GAS CONSUMPTION (m³/h)",
        "chartType": "bar",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": "50",
        "useOneColor": true,
        "useUTC": false,
        "colors": [
            "#0fefff",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1580,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "eff5a156de6a910e",
        "type": "ui_chart",
        "z": "299a5e821c565bab",
        "name": "",
        "group": "c3decad61a9a9538",
        "order": 53,
        "width": 13,
        "height": 6,
        "label": "ELECTRICITY CONSUMPTION (Kwh)",
        "chartType": "bar",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": "50",
        "useOneColor": true,
        "useUTC": false,
        "colors": [
            "#ff0f3f",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1610,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "f60e1f2d52c6f02a",
        "type": "change",
        "z": "299a5e821c565bab",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\t\"labels\":[],\t\"series\":$distinct(*.$substring($string(DATE),1, 10)),\t\"data\":$each(payload{$string(DATE):BREAKDWON}, function($val){[$val]})\t}]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 940,
        "wires": [
            [
                "ccc7f2ac3378377d"
            ]
        ]
    },
    {
        "id": "69c69a1689226f3c",
        "type": "change",
        "z": "299a5e821c565bab",
        "name": "function 52",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\t\"labels\":[],\t\"series\":$distinct(*.$substring($string(DATE),1, 10)),\t\"data\":$each(payload{$string(DATE):PRODUCTION_COUNT}, function($val){[$val]})\t}]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1310,
        "y": 1020,
        "wires": [
            [
                "8695c1ef1c339c10"
            ]
        ]
    },
    {
        "id": "571c08beda00e57c",
        "type": "change",
        "z": "299a5e821c565bab",
        "name": "function 47",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\t\"labels\":[],\t\"series\":$distinct(*.$substring($string(DATE),1, 10)),\t\"data\":$each(payload{$string(DATE):FINAL_OEE}, function($val){[$val]})\t}]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1310,
        "y": 1060,
        "wires": [
            [
                "7c1d84f97dba8dcc"
            ]
        ]
    },
    {
        "id": "cd867232993a9da6",
        "type": "change",
        "z": "299a5e821c565bab",
        "name": "function 48",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\t\"labels\":[],\t\"series\":$distinct(*.$substring($string(DATE),1, 10)),\t\"data\":$each(payload{$string(DATE):GAS_CONSUMPTION}, function($val){[$val]})\t}]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1310,
        "y": 1100,
        "wires": [
            [
                "158be7318bee5e5b"
            ]
        ]
    },
    {
        "id": "ee6345a4a996cd3f",
        "type": "change",
        "z": "299a5e821c565bab",
        "name": "function 49",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\t\"labels\":[],\t\"series\":$distinct(*.$substring($string(DATE),1, 10)),\t\"data\":$each(payload{$string(DATE):POWER_CONSUMPTION}, function($val){[$val]})\t}]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1310,
        "y": 1140,
        "wires": [
            [
                "eff5a156de6a910e"
            ]
        ]
    },
    {
        "id": "d5998540ceacde6b",
        "type": "change",
        "z": "299a5e821c565bab",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\t\"labels\":[],\t\"series\":$distinct(*.$substring($string(DATE),1, 10)),\t\"data\":$each(payload{$string(DATE):NOLOAD}, function($val){[$val]})\t}]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 980,
        "wires": [
            [
                "2ae18996a67e12ec"
            ]
        ]
    },
    {
        "id": "2ae18996a67e12ec",
        "type": "ui_chart",
        "z": "299a5e821c565bab",
        "name": "",
        "group": "c3decad61a9a9538",
        "order": 32,
        "width": 13,
        "height": 6,
        "label": "DOWN TIME NOLOAD (Sec.)",
        "chartType": "bar",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "no data",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": "50",
        "useOneColor": true,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1570,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "140b208ea2485f56",
        "type": "function",
        "z": "299a5e821c565bab",
        "name": "function 127",
        "func": "var labels = msg.payload[0].DATE;\nvar production = msg.payload[0].PRODUCTION_COUNT;\n\n\nmsg.payload = [\n    {\n        \"series\": [],\n        \"data\": [production],\n        \"labels\": [\"PRODUCTION--\" + production + \" NO'S\"]\n    }\n];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 620,
        "wires": [
            [
                "010a1f64e65141fc"
            ]
        ]
    },
    {
        "id": "287d53f804b74e4e",
        "type": "ui_chart",
        "z": "299a5e821c565bab",
        "name": "",
        "group": "9a9b4b80002072fd",
        "order": 22,
        "width": 6,
        "height": 5,
        "label": "OEE VS LOSSES %",
        "chartType": "pie",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "no data",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": "50",
        "useOneColor": true,
        "useUTC": false,
        "colors": [
            "#ff7f0e",
            "#aec7e8",
            "#0fefff",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1120,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "18c99259042d6b7f",
        "type": "function",
        "z": "299a5e821c565bab",
        "name": "month oee vs loss",
        "func": "var labels = [\"OEE\", \"BREAKDOWN\", \"POWER\", \"ORGANIZATION\", \"QUALITY\", \"SETUP\", \"NOLOAD\"];\nvar oee = [];\nvar production = [[oee, breakdown, power, organization, quality, setup, no_load]];\nvar breakdown = [];\nvar power = [];\nvar organization = [];\nvar quality = [];\nvar setup = [];\nvar no_load = [];\n\nfor (var i = 0; i < msg.payload.length; i++) {\n    //labels.push[i];\n    oee.push(msg.payload[i].FINAL_OEE);\n    breakdown.push(msg.payload[i].BREAKDOWN_LOSS);\n    power.push(msg.payload[i].POWER_LOSS);\n    organization.push(msg.payload[i].ORGANIZATION_LOSS);\n    quality.push(msg.payload[i].QUALITY_LOSS);\n    setup.push(msg.payload[i].SETUP_LOSS);\n    no_load.push(msg.payload[i].NOLOAD_LOSS);\n}\n\nmsg.payload = [\n    {\n        \"series\":[],\n        \"data\": [12,11.0,12.0,1.0,12.3,12.0,20.0],\n        \"labels\": [\"OEE %\", \"BREAKDOWN %\", \"POWER %\", \"ORGANIZATION %\", \"QUALITY %\", \"SETUP %\", \"NOLOAD %\"]\n    }\n];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "2e7f75f377ea7309",
        "type": "function",
        "z": "299a5e821c565bab",
        "name": "month oee vs loss",
        "func": "var labels = [\"OEE\", \"BREAKDOWN\", \"POWER\", \"ORGANIZATION\", \"QUALITY\", \"SETUP\", \"NOLOAD\"];\nvar oee = [];\nvar production = [[oee, breakdown, power, organization, quality, setup, no_load]];\nvar breakdown = [];\nvar power = [];\nvar organization = [];\nvar quality = [];\nvar setup = [];\nvar no_load = [];\n\nfor (var i = 0; i < msg.payload.length; i++) {\n    //labels.push[i];\n    oee.push(msg.payload[i].FINAL_OEE);\n    breakdown.push(msg.payload[i].BREAKDOWN_LOSS);\n    power.push(msg.payload[i].POWER_LOSS);\n    organization.push(msg.payload[i].ORGANIZATION_LOSS);\n    quality.push(msg.payload[i].QUALITY_LOSS);\n    setup.push(msg.payload[i].SETUP_LOSS);\n    no_load.push(msg.payload[i].NOLOAD_LOSS);\n}\n\nmsg.payload = [\n    {\n        \"series\":[],\n        \"data\": [12,11.0,12.0,1.0,12.3,12.0,20.0],\n        \"labels\": [\"OEE %\", \"BREAKDOWN %\", \"POWER %\", \"ORGANIZATION %\", \"QUALITY %\", \"SETUP %\", \"NOLOAD %\"]\n    }\n];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "f1749186b6332d1c",
        "type": "function",
        "z": "299a5e821c565bab",
        "name": "function 128",
        "func": "var labels = msg.payload[0].DATE;\nvar oee = msg.payload[0].FINAL_OEE;\nvar production = [];\n//var breakdown = msg.payload[0].BREAKDOWN_LOSS;\n//var power = msg.payload[0].POWER_LOSS;\nvar organization = msg.payload[0].ORGANIZATION_LOSS;\nvar quality = msg.payload[0].QUALITY_LOSS;\nvar setup = msg.payload[0].SETUP_LOSS;\nvar technical = msg.payload[0].TECHNICAL_LOSS;\nvar uncount = msg.payload[0].UNACCOUNT_LOSS;\n//var no_load = msg.payload[0].NOLOAD_LOSS;\n\nmsg.payload = [\n    {\n        \"series\": [],\n        \"data\": [[oee, organization, quality, setup, technical, uncount]],\n        \"labels\": [\"OEE-\" + oee + \" %\", \"ORGANIZATION-\" + organization + \" %\", \"QUALITY-\" + quality + \" %\", \"SETUP-\" + setup + \" %\", \"TECHNICAL-\" + technical + \" %\", \"UNACCOUNTABLE-\" + uncount + \" %\"]\n    }\n];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 820,
        "wires": [
            [
                "287d53f804b74e4e"
            ]
        ]
    },
    {
        "id": "701c6a02ae0da177",
        "type": "function",
        "z": "299a5e821c565bab",
        "name": "function 133",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "28d3d2773f2976c5",
        "type": "moment",
        "z": "299a5e821c565bab",
        "name": "",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "Asia/Calcutta",
        "adjAmount": 0,
        "adjType": "years",
        "adjDir": "subtract",
        "format": "YYYY-MM-DD",
        "locale": "en-US",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Asia/Calcutta",
        "x": 360,
        "y": 700,
        "wires": [
            [
                "b0668037fd0eef0a"
            ]
        ]
    },
    {
        "id": "320e67455ea70377",
        "type": "moment",
        "z": "299a5e821c565bab",
        "name": "",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "Asia/Calcutta",
        "adjAmount": 0,
        "adjType": "years",
        "adjDir": "subtract",
        "format": "YYYY-MM-DD",
        "locale": "en-US",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Asia/Calcutta",
        "x": 360,
        "y": 1120,
        "wires": [
            [
                "793d2494b3810ed0"
            ]
        ]
    },
    {
        "id": "0e97cd374804f026",
        "type": "moment",
        "z": "299a5e821c565bab",
        "name": "",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "Asia/Calcutta",
        "adjAmount": 0,
        "adjType": "years",
        "adjDir": "subtract",
        "format": "YYYY-MM-DD",
        "locale": "en-US",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Asia/Calcutta",
        "x": 360,
        "y": 1180,
        "wires": [
            [
                "c64bde8124e6fdde"
            ]
        ]
    },
    {
        "id": "a344f65242bf096f",
        "type": "inject",
        "z": "299a5e821c565bab",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 890,
        "y": 500,
        "wires": [
            [
                "7e05da1470ba1ab3"
            ]
        ]
    },
    {
        "id": "19737536aba1d0e5",
        "type": "function",
        "z": "299a5e821c565bab",
        "name": "function 151",
        "func": "var labels = msg.payload[0].DATE;\nvar oee = msg.payload[0].FINAL_OEE;\nvar production = [];\nvar breakdown = msg.payload[0].BREAKDOWN_LOSS;\nvar power = msg.payload[0].POWER_LOSS;\nvar organization = msg.payload[0].ORGANIZATION_LOSS;\nvar quality = msg.payload[0].QUALITY_LOSS;\nvar setup = msg.payload[0].SETUP_LOSS;\nvar no_load = msg.payload[0].NOLOAD_LOSS;\n\nmsg.payload = [\n    {\n        \"series\": [],\n        \"data\": [[oee, breakdown, power, organization, quality, setup, no_load]],\n        \"labels\": [\"OEE-\" + oee + \" %\", \"BREAKDOWN-\" + breakdown + \" %\", \"POWER-\" + power + \" %\", \"ORGANIZATION-\" + organization + \" %\", \"QUALITY-\" + quality + \" %\", \"SETUP-\" + setup + \" %\", \"NOLOAD-\" + no_load + \" %\"]\n    }\n];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "f05b4e76903fb291",
        "type": "delay",
        "z": "299a5e821c565bab",
        "name": "",
        "pauseType": "delay",
        "timeout": "4",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1240,
        "y": 440,
        "wires": [
            [
                "26aa18355ad124d3"
            ]
        ]
    },
    {
        "id": "26aa18355ad124d3",
        "type": "function",
        "z": "299a5e821c565bab",
        "name": "Function",
        "func": "var ontime = flow.get(\"set_date_on_2\")\n//var ontime_1 = flow.get(\"set_time_on\")\nvar offtime = flow.get(\"set_date_off\")\n//var offtime_1 = flow.get(\"set_time_off\")\n//var ondate = ontime + \" \" + ontime_1;\n//var offdate = offtime + \" \" + offtime_1;\nvar pld = \"SELECT DATE,BREAKDOWN_LOSS,POWER_LOSS,NOLOAD_LOSS,SAMPLE_LOSS,LIFTER_LOSS,MANPOWER_LOSS \" //NO_LOAD,TOTAL_DOWN_TIME \"\n\n//var pld =       \"SELECT ID, Topic, Payload, Timestamp \"\npld = pld + \"FROM [node_red].[dbo].[MC_DAILY_PRODUCTION_HISTORY] \"\n\npld = pld + \"WHERE DATE = '\" + ontime + \" ' \";\n//pld = pld + \"WHERE TIME BETWEEN '\" + ontime + \" ' AND ' \" + offtime + \"' ORDER BY TIME \";\n//pld = pld + \"WHERE ID = 1 \"  \n\n//pld = pld + \"VALUES ('\" + gk + \"','\" + dformat + \"')\"\nmsg.payload = pld\nreturn msg;\n\n\n\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 440,
        "wires": [
            [
                "439bdb25c8693e32"
            ]
        ]
    },
    {
        "id": "439bdb25c8693e32",
        "type": "MSSQL",
        "z": "299a5e821c565bab",
        "mssqlCN": "76839cf0e528d185",
        "name": "MSSQL",
        "query": "",
        "outField": "payload",
        "x": 1560,
        "y": 440,
        "wires": [
            [
                "b39e1e9323acc0aa"
            ]
        ]
    },
    {
        "id": "b39e1e9323acc0aa",
        "type": "ui_table",
        "z": "299a5e821c565bab",
        "group": "9a9b4b80002072fd",
        "name": "PRODUCTION LOSS",
        "order": 20,
        "width": 21,
        "height": 4,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 1760,
        "y": 440,
        "wires": []
    },
    {
        "id": "7d9b6d571243cd6e",
        "type": "ui_text",
        "z": "299a5e821c565bab",
        "group": "9a9b4b80002072fd",
        "order": 17,
        "width": 8,
        "height": 1,
        "name": "",
        "label": "PRODUCTION LOSS",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1760,
        "y": 400,
        "wires": []
    },
    {
        "id": "df962df5d8fad366",
        "type": "inject",
        "z": "5ccdd863f339e5b3",
        "d": true,
        "name": "",
        "props": [],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "x": 1370,
        "y": 960,
        "wires": [
            [
                "c1f0e9aa4b9c36a4",
                "b9f54ccdaf48c617",
                "f4c1bc9eaa0e7acb",
                "05996597f8845b51",
                "69e72b28041e6c3f"
            ]
        ]
    },
    {
        "id": "49a897bf43d417da",
        "type": "debug",
        "z": "5ccdd863f339e5b3",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 4880,
        "wires": []
    },
    {
        "id": "9b42bf64fe047f68",
        "type": "debug",
        "z": "5ccdd863f339e5b3",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 5080,
        "wires": []
    },
    {
        "id": "adaa1c51032cbdf7",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "function 1",
        "func": "if (msg.originalMessage.command === \"parabolic-3\") {\n    // check if the user has access to execute this function\n         \n     return [msg, null];\n    \n    \n    } else {\n        return [null, msg];\n    }",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 5060,
        "wires": [
            [
                "9f2dcf1f29a6aa24"
            ],
            [
                "5a6b95aa5a078cc8"
            ]
        ]
    },
    {
        "id": "cb926c0e32ec0dc0",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "function 2",
        "func": "var mes = msg.payload;\n\nvar a  =  mes.object.chatId;\n\n\n\nmsg.payload = a ;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 4900,
        "wires": [
            [
                "9b42bf64fe047f68"
            ]
        ]
    },
    {
        "id": "9f2dcf1f29a6aa24",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "function 3",
        "func": "var ms = global.get('D100');\nvar mf = global.get('D102');\nvar ma = global.get('D104');\nvar gk = \"HI.. PARABOLIC-3 OEE\" + \"\\r\\n\";\n    gk += \"TOTAL PRODUCTION:\" + ms + \" NO.\" + \"\\r\\n\";\n    gk += \"DOWN TIME:\" + mf + \" min\" + \"\\r\\n\";\n    gk += \"RUNNING PRODUCT:\" + ma;\nmsg.payload.content = gk;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 4960,
        "wires": [
            [
                "3d9a8f1cb126c25a",
                "ac69b9e41057a870"
            ]
        ]
    },
    {
        "id": "5a6b95aa5a078cc8",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "function 4",
        "func": "var ms = \"Kindly Type Correct Word\";\nmsg.payload.content = ms;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 5040,
        "wires": [
            [
                "3d9a8f1cb126c25a"
            ]
        ]
    },
    {
        "id": "166bdd5d3c00a5d8",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "Language processing",
        "func": "\nvar commands = [\"parabolic-3\" ];\n\nvar temp = msg.payload.content.toLowerCase();\nvar arr = temp.split(\" \");\n\n\nfor (var i = 0; i < commands.length; i++) {\n    for (var j = 0; j < arr.length; j++) {\n        if (arr[j] === commands[i]) {\n            msg.originalMessage.command = commands[i];\n            return msg;\n        }\n    }\n}\n\n\ntemp = temp.replace(\"a \", \"\");\ntemp = temp.replace(\"the \", \"\");\ntemp = temp.replace(\"what \", \"\");\ntemp = temp.replace(\"is \", \"\");\ntemp = temp.replace(\"to \", \"\");\ntemp = temp.replace(\"lights\", \"light\");\ntemp = temp.replace(\"light \", \"\");\ntemp = temp.replace(\"light\", \"\");\n\n\n\n\nif (temp.indexOf(\"turn\") > -1) {\n    temp = temp.replace(\"turn \", \"\");\n    msg.originalMessage.command = \"switch\";\n}\nif (temp.indexOf(\"switch\") > -1) {\n    temp = temp.replace(\"switch \", \"\");\n    msg.originalMessage.command = \"switch\";\n}\n\n\nvar lastIndex = temp.indexOf(\" \");\nvar voice_state = temp.substring(0, lastIndex).trim();\nvar voice_thing = temp.substring(lastIndex + 1, temp.length).trim();\n\n\n\nif (voice_state === \"on\") {\n    msg.originalMessage.state = \"1\";\n}\nif (voice_state === \"off\") {\n    msg.originalMessage.state = \"0\";\n}\n\n\nmsg.originalMessage.thing = voice_thing;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 4960,
        "wires": [
            [
                "adaa1c51032cbdf7"
            ]
        ]
    },
    {
        "id": "9f6d3e65f7b8bdbf",
        "type": "debug",
        "z": "5ccdd863f339e5b3",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 5140,
        "wires": []
    },
    {
        "id": "ac69b9e41057a870",
        "type": "debug",
        "z": "5ccdd863f339e5b3",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1060,
        "y": 4840,
        "wires": []
    },
    {
        "id": "d44118a2dc2f428f",
        "type": "ui_button",
        "z": "5ccdd863f339e5b3",
        "d": true,
        "name": "",
        "group": "",
        "order": 2,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "BreakDown",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "maintenance",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 390,
        "y": 4200,
        "wires": [
            [
                "9f2abeb1771ec627",
                "458b394ebe726a05"
            ]
        ]
    },
    {
        "id": "69cf07ac432645ae",
        "type": "ui_text",
        "z": "5ccdd863f339e5b3",
        "d": true,
        "group": "",
        "order": 8,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "TOTAL DOWN TIME (Sec) :",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1200,
        "y": 4540,
        "wires": []
    },
    {
        "id": "319c6deefb05846e",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "BREAK_COUNT",
        "func": "var counter = global.get(\"counter\") || 0\ncounter ++ \nglobal.set(\"counter\",counter)\nmsg.payload = counter\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 4620,
        "wires": [
            [
                "64302e07074fdff4"
            ]
        ]
    },
    {
        "id": "84e1e7266c9dee87",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "function 9",
        "func": "var k = \"NOT SELECTED\";\nmsg.payload = k;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 4220,
        "wires": [
            []
        ]
    },
    {
        "id": "60745f82f2ccee31",
        "type": "ui_button",
        "z": "5ccdd863f339e5b3",
        "d": true,
        "name": "",
        "group": "",
        "order": 6,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "NOT SELECTION",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "0",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 290,
        "y": 4340,
        "wires": [
            [
                "6226ad12569c07f6"
            ]
        ]
    },
    {
        "id": "9f2abeb1771ec627",
        "type": "change",
        "z": "5ccdd863f339e5b3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "main",
                "pt": "global",
                "to": "maintenance",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 4180,
        "wires": [
            []
        ]
    },
    {
        "id": "f7e8b75e5da17189",
        "type": "inject",
        "z": "5ccdd863f339e5b3",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 530,
        "y": 4720,
        "wires": [
            [
                "7ee6e3cf661ec723",
                "b5c7cfa6757cefa3"
            ]
        ]
    },
    {
        "id": "fc9ed2782a7c14b4",
        "type": "change",
        "z": "5ccdd863f339e5b3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "main",
                "pt": "global",
                "to": "lk",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 4300,
        "wires": [
            []
        ]
    },
    {
        "id": "458b394ebe726a05",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "function 12",
        "func": "if (msg.payload == \"maintenance\") {\n    // check if the user has access to execute this function\n\n    return [msg, null];\n\n\n} else {\n    return [null, msg];\n}\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 4220,
        "wires": [
            [],
            [
                "84e1e7266c9dee87"
            ]
        ]
    },
    {
        "id": "64302e07074fdff4",
        "type": "change",
        "z": "5ccdd863f339e5b3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "count",
                "pt": "flow",
                "to": "payload",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "count",
                "pt": "global",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 4720,
        "wires": [
            [
                "259befbaa7aa51bd"
            ]
        ]
    },
    {
        "id": "7ee6e3cf661ec723",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "function 10",
        "func": "var m = global.get(\"main\");\n\nif (m == \"maintenance\") {\n    // check if the user has access to execute this function\n\n    return [msg, null];\n\n\n} else {\n    return [null, msg];\n}\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 4720,
        "wires": [
            [
                "319c6deefb05846e",
                "0d463c6517d66e09"
            ],
            []
        ]
    },
    {
        "id": "75fcafe573989cc4",
        "type": "delay",
        "z": "5ccdd863f339e5b3",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 600,
        "y": 4420,
        "wires": [
            [
                "ec2217f60642c0cd",
                "0bd7b7b7b570d181"
            ]
        ]
    },
    {
        "id": "ec2217f60642c0cd",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "function 14",
        "func": "var md = global.get(\"main\");\nif (md != \"maintenance\") {\n    // check if the user has access to execute this function\n\n    return [msg, null];\n\n\n} else {\n    return [null, msg];\n}\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 4420,
        "wires": [
            [
                "5a374fe3f39ec972",
                "19c0c42d963a6d02"
            ],
            []
        ]
    },
    {
        "id": "a75204065bef9bee",
        "type": "comment",
        "z": "5ccdd863f339e5b3",
        "name": "BREAKDOWN AND NO LOAD COUNT",
        "info": "",
        "x": 590,
        "y": 4680,
        "wires": []
    },
    {
        "id": "c2e0f6e63681456b",
        "type": "ui_button",
        "z": "5ccdd863f339e5b3",
        "d": true,
        "name": "",
        "group": "",
        "order": 4,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "NO LOAD",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "no_load",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 360,
        "y": 4280,
        "wires": [
            [
                "de242dc83a98301a",
                "458b394ebe726a05"
            ]
        ]
    },
    {
        "id": "de242dc83a98301a",
        "type": "change",
        "z": "5ccdd863f339e5b3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "no_load",
                "pt": "global",
                "to": "no load",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 4260,
        "wires": [
            []
        ]
    },
    {
        "id": "b5c7cfa6757cefa3",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "function 15",
        "func": "var nold = global.get(\"no_load\");\n\nif (nold == \"no load\") {\n    // check if the user has access to execute this function\n\n    return [msg, null];\n\n\n} else {\n    return [null, msg];\n}\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 4780,
        "wires": [
            [
                "d6fbf4bea0e4f2c4",
                "fd3b038e4010e27a"
            ],
            []
        ]
    },
    {
        "id": "d6fbf4bea0e4f2c4",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "NO LOAD_COUNT",
        "func": "var counter_1 = global.get(\"counter_1\") || 0\ncounter_1 ++\nglobal.set(\"counter_1\",counter_1)\nmsg.payload = counter_1\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 4740,
        "wires": [
            [
                "610f599326c0066e"
            ]
        ]
    },
    {
        "id": "610f599326c0066e",
        "type": "change",
        "z": "5ccdd863f339e5b3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "count_1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "count_1",
                "pt": "global",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 4780,
        "wires": [
            [
                "9321686c648f8c79"
            ]
        ]
    },
    {
        "id": "576e907786b53014",
        "type": "comment",
        "z": "5ccdd863f339e5b3",
        "name": "BREAKDOWN AND NO LOAD COUNT RESET AND LOG",
        "info": "",
        "x": 750,
        "y": 4380,
        "wires": []
    },
    {
        "id": "0bd7b7b7b570d181",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "function 16",
        "func": "var md = global.get(\"no_load\");\nif (md != \"no_load\") {\n    // check if the user has access to execute this function\n\n    return [msg, null];\n\n\n} else {\n    return [null, msg];\n}\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 4460,
        "wires": [
            [
                "8510bea6cbfd04e3",
                "19c0c42d963a6d02"
            ],
            []
        ]
    },
    {
        "id": "8510bea6cbfd04e3",
        "type": "change",
        "z": "5ccdd863f339e5b3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "counter_1",
                "pt": "global",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 4440,
        "wires": [
            [
                "9321686c648f8c79"
            ]
        ]
    },
    {
        "id": "d65e50b0c30b1931",
        "type": "delay",
        "z": "5ccdd863f339e5b3",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 600,
        "y": 4480,
        "wires": [
            [
                "5fabbd4c2826c9e4"
            ]
        ]
    },
    {
        "id": "5fabbd4c2826c9e4",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "TOTAL",
        "func": "var brk = global.get(\"counter\");\nvar no_lod = global.get(\"counter_1\");\nvar ful =  global.get(\"full_1\")\n\nvar totl = brk+no_lod+ful;\n\nglobal.set (\"totl\",totl)\n\nmsg.payload = totl;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 4500,
        "wires": [
            [
                "69cf07ac432645ae",
                "e26a364d4f46d157",
                "bd780204076222ed",
                "3974efcb979815ec"
            ]
        ]
    },
    {
        "id": "259befbaa7aa51bd",
        "type": "ui_text",
        "z": "5ccdd863f339e5b3",
        "d": true,
        "group": "",
        "order": 14,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "BREAK DOWN (Sec) :",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1540,
        "y": 4720,
        "wires": []
    },
    {
        "id": "9321686c648f8c79",
        "type": "ui_text",
        "z": "5ccdd863f339e5b3",
        "d": true,
        "group": "",
        "order": 16,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "NO LOAD (Sec)   :",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1530,
        "y": 4780,
        "wires": []
    },
    {
        "id": "dedaa6cd894cc2a0",
        "type": "change",
        "z": "5ccdd863f339e5b3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "no_load",
                "pt": "global",
                "to": "lk",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 4340,
        "wires": [
            []
        ]
    },
    {
        "id": "bd780204076222ed",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "Function",
        "func": "var d = new Date,\ndformat = [d.getMonth()+1,\n    d.getDate(),\n    d.getFullYear()].join('/')+' '+\n    [d.getHours(),\n    d.getMinutes(),\n    d.getSeconds()].join(':');\n//\"UPDATE [node_red].[dbo].[mytable] \"\nvar brkdwn = global.get(\"counter\");\nvar nolod = global.get(\"counter_1\");\nvar tol = global.get(\"FULL\");\nvar dtstmp = new Date().toString();\nvar pld = \"INSERT INTO[node_red].[dbo].[DOWN_TIME](TIME,NO_LOAD,BREAKDOWN,TOTAL_DOWN_TIME)\"      \npld = pld + \"VALUES ('\" + dformat + \"','\" + brkdwn + \"','\" + nolod + \"','\" + tol + \"')\"\n\n//pld = pld + \"SET Timestamp = '\" + dformat + \"' \"\n\n//pld = pld + \"WHERE id = 1\"\n\nmsg.payload = pld\nreturn msg;\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 4340,
        "wires": [
            [
                "c64d5ec3832d3155"
            ]
        ]
    },
    {
        "id": "c64d5ec3832d3155",
        "type": "MSSQL",
        "z": "5ccdd863f339e5b3",
        "mssqlCN": "76839cf0e528d185",
        "name": "MSSQL",
        "query": "",
        "outField": "payload",
        "x": 1760,
        "y": 4380,
        "wires": [
            []
        ]
    },
    {
        "id": "5a374fe3f39ec972",
        "type": "change",
        "z": "5ccdd863f339e5b3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "counter",
                "pt": "global",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1150,
        "y": 4360,
        "wires": [
            []
        ]
    },
    {
        "id": "e26a364d4f46d157",
        "type": "change",
        "z": "5ccdd863f339e5b3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "FULL",
                "pt": "flow",
                "to": "payload",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "FULL",
                "pt": "global",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1120,
        "y": 4500,
        "wires": [
            []
        ]
    },
    {
        "id": "19c0c42d963a6d02",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "TOTAL_HOLD",
        "func": "var ful =  global.get(\"FULL\");\n\n//var full_1 = ful;\n\nglobal.set(\"full_1\", ful);\n\nmsg.payload = ful;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 4320,
        "wires": [
            []
        ]
    },
    {
        "id": "54ff4d782d4b28cd",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "function 17",
        "func": "var md = global.get(\"FULL\");\nif (isNaN(md)) {\n     //check if the user has access to execute this function\n\n    return [msg, null];\n} else {\n    return [null, msg];\n}\n\n\n\n\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 4560,
        "wires": [
            [
                "55cdac93eb5b5982",
                "9b52b3243fea926f"
            ],
            []
        ]
    },
    {
        "id": "55cdac93eb5b5982",
        "type": "change",
        "z": "5ccdd863f339e5b3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "full_1",
                "pt": "global",
                "to": "0",
                "tot": "num",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 940,
        "y": 4580,
        "wires": [
            []
        ]
    },
    {
        "id": "a56bd49bd494903e",
        "type": "delay",
        "z": "5ccdd863f339e5b3",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 600,
        "y": 4540,
        "wires": [
            [
                "54ff4d782d4b28cd"
            ]
        ]
    },
    {
        "id": "9b52b3243fea926f",
        "type": "change",
        "z": "5ccdd863f339e5b3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "FULL",
                "pt": "global",
                "to": "0",
                "tot": "num",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 4540,
        "wires": [
            []
        ]
    },
    {
        "id": "5bc7590fb58bf0cd",
        "type": "telegram receiver",
        "z": "5ccdd863f339e5b3",
        "d": true,
        "name": "NodeRedBot",
        "bot": "b7982dad39851f18",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 330,
        "y": 5100,
        "wires": [
            [
                "9f6d3e65f7b8bdbf",
                "166bdd5d3c00a5d8"
            ],
            []
        ]
    },
    {
        "id": "b62f6ad39f188910",
        "type": "telegram receiver",
        "z": "5ccdd863f339e5b3",
        "d": true,
        "name": "HK",
        "bot": "b7982dad39851f18",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 250,
        "y": 4900,
        "wires": [
            [
                "cb926c0e32ec0dc0"
            ],
            [
                "cb926c0e32ec0dc0"
            ]
        ]
    },
    {
        "id": "245a4e18908f6a08",
        "type": "telegram command",
        "z": "5ccdd863f339e5b3",
        "d": true,
        "name": "",
        "command": "/start",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "b7982dad39851f18",
        "strict": false,
        "hasresponse": false,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 1,
        "x": 230,
        "y": 4960,
        "wires": [
            []
        ]
    },
    {
        "id": "e4a0c6b312e1cbb0",
        "type": "telegram sender",
        "z": "5ccdd863f339e5b3",
        "d": true,
        "name": "",
        "bot": "b7982dad39851f18",
        "haserroroutput": false,
        "outputs": 1,
        "x": 530,
        "y": 4880,
        "wires": [
            [
                "49a897bf43d417da"
            ]
        ]
    },
    {
        "id": "3d9a8f1cb126c25a",
        "type": "telegram sender",
        "z": "5ccdd863f339e5b3",
        "d": true,
        "name": "",
        "bot": "b7982dad39851f18",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1070,
        "y": 4960,
        "wires": [
            []
        ]
    },
    {
        "id": "b9c43a14eb2d891f",
        "type": "ui_text",
        "z": "5ccdd863f339e5b3",
        "d": true,
        "group": "",
        "order": 10,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "TOTAL BREAK DOWN (Sec) :",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1330,
        "y": 4600,
        "wires": []
    },
    {
        "id": "7e15113de3462c6b",
        "type": "ui_text",
        "z": "5ccdd863f339e5b3",
        "d": true,
        "group": "",
        "order": 12,
        "width": 1,
        "height": 1,
        "name": "",
        "label": "TOTAL NO LOAD (Sec)  :         ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1310,
        "y": 4880,
        "wires": []
    },
    {
        "id": "0d463c6517d66e09",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "TOTAL_BREAK_COUNT",
        "func": "var break_count_t_1 = global.get(\"break_count_t_1\") || 0\nbreak_count_t_1 ++\nglobal.set(\"break_count_t_1\", break_count_t_1)\nmsg.payload = break_count_t_1\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 4660,
        "wires": [
            [
                "b9c43a14eb2d891f"
            ]
        ]
    },
    {
        "id": "fd3b038e4010e27a",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "TOTAL_NO_LOAD_COUNT",
        "func": "var total_NO_LOAD = global.get(\"total_NO_LOAD\") || 0\ntotal_NO_LOAD ++\nglobal.set(\"total_NO_LOAD\", total_NO_LOAD)\nmsg.payload = total_NO_LOAD\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 4780,
        "wires": [
            [
                "7e15113de3462c6b"
            ]
        ]
    },
    {
        "id": "4e1e7875a596aad4",
        "type": "comment",
        "z": "5ccdd863f339e5b3",
        "name": "CELL CURRENT STATUS",
        "info": "",
        "x": 290,
        "y": 20,
        "wires": []
    },
    {
        "id": "de4ca3872b94554a",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "RUNNING",
        "func": "var run = \"MACHINE RUNNING\";\nmsg.payload = run ;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1830,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "24a661e125a81df0",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "STOP",
        "func": "var stop = \"MACHINE STOP\";\nmsg.payload = stop;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1810,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "7dfb809da6314a82",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "Function",
        "func": "\n//\"UPDATE [node_red].[dbo].[mytable] \"\nvar brkdwn = global.get(\"break_count_t_1\");\nvar nolod = global.get(\"total_NO_LOAD\");\nvar tol = global.get(\"FULL\");\n//var dtstmp = new Date().toString();\nvar pld = \"UPDATE [node_red].[dbo].[record_1] \"      \npld = pld + \"SET TOTAL_DWN = '\" + tol + \"' , BREAKDOWN = '\" + brkdwn + \"' ,NOLOAD = '\" + nolod + \"'\"\n\npld = pld + \"WHERE ID = 1\"\n\nmsg.payload = pld\nreturn msg;\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1600,
        "y": 4460,
        "wires": [
            [
                "c64d5ec3832d3155"
            ]
        ]
    },
    {
        "id": "3974efcb979815ec",
        "type": "delay",
        "z": "5ccdd863f339e5b3",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1440,
        "y": 4440,
        "wires": [
            [
                "7dfb809da6314a82"
            ]
        ]
    },
    {
        "id": "0047ea29190fc6e1",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "function 103",
        "func": "var m = global.get(\"machine_data_update\");\n;\n\nif (m == 0) {\n    // check if the user has access to execute this function\n\n    return [msg, null];\n\n\n} else {\n    return [null, msg];\n}\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 4440,
        "wires": [
            [
                "458b394ebe726a05",
                "fc9ed2782a7c14b4",
                "dedaa6cd894cc2a0",
                "75fcafe573989cc4",
                "d65e50b0c30b1931",
                "a56bd49bd494903e"
            ],
            []
        ]
    },
    {
        "id": "6226ad12569c07f6",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "function 102",
        "func": "var m = global.get(\"del_data_chking\");\n;\n\nif (m == 0) {\n    // check if the user has access to execute this function\n\n    return [msg, null];\n\n\n} else {\n    return [null, msg];\n}\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 4440,
        "wires": [
            [
                "0047ea29190fc6e1"
            ],
            []
        ]
    },
    {
        "id": "67771989a6e53a9f",
        "type": "inject",
        "z": "5ccdd863f339e5b3",
        "name": "",
        "props": [],
        "repeat": "20",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "x": 50,
        "y": 400,
        "wires": [
            [
                "4a173c3bcd929ed4",
                "358ae8fbdc51212f",
                "b3a769d115f60248",
                "743fdf6bf564be20",
                "f76cddba8cb8aede"
            ]
        ]
    },
    {
        "id": "53090929c3a84b05",
        "type": "ui_text",
        "z": "5ccdd863f339e5b3",
        "group": "556030eaa7a2d84c",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "MACHINE RUNNING STATUS :",
        "format": "<font face='arial'><font size=4><font color={{fcolor}}>{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1210,
        "y": 500,
        "wires": []
    },
    {
        "id": "4a173c3bcd929ed4",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "WIRE CONSUM CELL-1",
        "func": "var cell_1_wire = global.get(\"wire_cell_1_line_1\")\n//msg.payload = cell_1_wire\n\nmsg.payload = 50\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 380,
        "wires": [
            [
                "fbca830deeef5cf6"
            ]
        ]
    },
    {
        "id": "743fdf6bf564be20",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "MC_STATUS CELL-1",
        "func": "var mc_status = global.get(\"mc_status_cell_1_line_1\");\n\nif (mc_status == 1) {\n    // check if the user has access to execute this function\n    return [msg, null];\n} else {\n    return [null, msg];\n}\nreturn msg;\n//var t_cyl = global.get(\"CY_TIM\");\nmsg.payload = mc_status;\nreturn msg;",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 540,
        "wires": [
            [
                "8637aafe0fa5c25b"
            ],
            [
                "b552417a777e7ddd"
            ]
        ]
    },
    {
        "id": "8637aafe0fa5c25b",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "RUNNING",
        "func": "var run = \"MACHINE RUNNING\";\nmsg.payload = run ;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 520,
        "wires": [
            [
                "7aaaeba05587a4a4"
            ]
        ]
    },
    {
        "id": "b552417a777e7ddd",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "STOP",
        "func": "var stop = \"MACHINE STOP\";\nmsg.payload = stop;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 540,
        "wires": [
            [
                "df2f992694c05e50"
            ]
        ]
    },
    {
        "id": "df2f992694c05e50",
        "type": "change",
        "z": "5ccdd863f339e5b3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "fcolor",
                "pt": "msg",
                "to": "red",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 520,
        "wires": [
            [
                "53090929c3a84b05"
            ]
        ]
    },
    {
        "id": "7aaaeba05587a4a4",
        "type": "change",
        "z": "5ccdd863f339e5b3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "fcolor",
                "pt": "msg",
                "to": "green",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 500,
        "wires": [
            [
                "53090929c3a84b05"
            ]
        ]
    },
    {
        "id": "fbca830deeef5cf6",
        "type": "ui_text",
        "z": "5ccdd863f339e5b3",
        "group": "556030eaa7a2d84c",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "WIRE CONSUME:-",
        "format": "{{msg.payload}} Gram",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1170,
        "y": 380,
        "wires": []
    },
    {
        "id": "c1f0e9aa4b9c36a4",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "(ENERGY)",
        "func": "var cell_1_energy = global.get(\"energy_cell_1_line_1\");\nglobal.set(\"cell_1_energy\", cell_1_energy);\nmsg.payload = cell_1_energy\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1610,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "b9f54ccdaf48c617",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "GAS FLOW",
        "func": "var cell_1_gasflow = global.get(\"flow_cell_1_line_1\")\nmsg.payload = cell_1_gasflow\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1610,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "f4c1bc9eaa0e7acb",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "WIRE CONSUM",
        "func": "var cell_1_wire = global.get(\"wire_cell_1_line_1\")\nmsg.payload = cell_1_wire\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1620,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "69e72b28041e6c3f",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "PRODUCTION",
        "func": "var production_cell_1_line_1 = global.get(\"production_cell_1_line_1\");\nmsg.payload = production_cell_1_line_1;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1620,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "05996597f8845b51",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "MC_STATUS",
        "func": "var mc_status = global.get(\"mc_status_cell_1_line_1\");\n\nif (mc_status == 1) {\n    // check if the user has access to execute this function\n    return [msg, null];\n} else {\n    return [null, msg];\n}\nreturn msg;\n//var t_cyl = global.get(\"CY_TIM\");\nmsg.payload = mc_status;\nreturn msg;",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1610,
        "y": 1060,
        "wires": [
            [
                "de4ca3872b94554a"
            ],
            [
                "24a661e125a81df0"
            ]
        ]
    },
    {
        "id": "cfd12ab1f1d4f39d",
        "type": "inject",
        "z": "5ccdd863f339e5b3",
        "d": true,
        "name": "",
        "props": [],
        "repeat": "3",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "x": 110,
        "y": 1760,
        "wires": [
            [
                "1779773e362e7ede"
            ]
        ]
    },
    {
        "id": "1779773e362e7ede",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "LAST 8 HOURS DATA",
        "func": "var tus = \"'tus'\"; // or whatever value you want\nvar pld = \"UPDATE test SET data = 500 \";\npld += \"WHERE days = \" + tus;\nmsg.payload = pld;\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 1700,
        "wires": [
            [
                "dc522b7439d9790d"
            ]
        ]
    },
    {
        "id": "dc522b7439d9790d",
        "type": "MSSQL",
        "z": "5ccdd863f339e5b3",
        "mssqlCN": "489ecfa5c218484f",
        "name": "",
        "query": "",
        "outField": "payload",
        "x": 560,
        "y": 1640,
        "wires": [
            [
                "a8714599e9e1ae64",
                "6787d83c17ede425",
                "7fcd4aa4d2fb3b7f"
            ]
        ]
    },
    {
        "id": "9276c6e9566b63d1",
        "type": "inject",
        "z": "5ccdd863f339e5b3",
        "d": true,
        "name": "",
        "props": [],
        "repeat": "3",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "x": 110,
        "y": 2200,
        "wires": [
            [
                "b42b22b46ba50f72"
            ]
        ]
    },
    {
        "id": "b42b22b46ba50f72",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "LAST 8 HOURS DATA",
        "func": "var pld = \" SELECT TIME,PROBLEM,AREA,ACTION,FREQUENT,LOSS\" \n    pld = pld+ \" FROM [node_red].[dbo].[break_down] \"\n    pld    = pld + \"ORDER BY TIME\"\nmsg.payload = pld\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 2200,
        "wires": [
            [
                "48f3ea14b23127fe"
            ]
        ]
    },
    {
        "id": "48f3ea14b23127fe",
        "type": "MSSQL",
        "z": "5ccdd863f339e5b3",
        "mssqlCN": "76839cf0e528d185",
        "name": "",
        "query": "",
        "outField": "payload",
        "x": 480,
        "y": 2200,
        "wires": [
            []
        ]
    },
    {
        "id": "638f9d2caef6a6cc",
        "type": "inject",
        "z": "5ccdd863f339e5b3",
        "name": "",
        "props": [],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 90,
        "y": 740,
        "wires": [
            [
                "003d3cb21f3f531c",
                "e2afe97fef3deea0"
            ]
        ]
    },
    {
        "id": "3565c29f43a4b6cf",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "h_1_update",
        "func": "msg.ui_control = { tabulator: { columns: [] } };\nmsg.payload = [];\n\nmsg.ui_control = {\n    tabulator: {\n        columns: [\n            { title: \"TIME\", field: \"TIME\", width: 80 },\n            { title: \"PRODUCTION\", field: \"PRODUCTION\", width: 180 },\n            { title: \"ENERGY (Kwh)\", field: \"ENERGY (Kwh)\", width: 200 },\n            { title: \"GAS (CPM)\", field: \"GAS (CPM)\", width: 180 },\n            { title: \"WIRE\", field: \"WIRE\", width: 180 },\n            { title: \"PART NAME\", field: \"PART NAME\", width: 180 }\n        ]\n    }\n};\n\nmsg.payload = [\n    {\n        \"TIME\": \"9:00\",\n        \"PRODUCTION\": \"35\",\n        \"ENERGY (Kwh)\": \"123\",\n        \"GAS (CPM)\": \"120\",\n        \"PART NAME\": \"ABCD\",\n        \"WIRE\": 5\n    },\n    \n    {\n        \"TIME\": \"10:00\",\n        \"PRODUCTION\": \"70\",\n        \"ENERGY (Kwh)\": \"203\",\n        \"GAS (CPM)\": \"220\",\n        \"PART NAME\": \"ABCD\",\n        \"WIRE\": 20\n    },\n    {\n        \"TIME\": \"11:00\",\n        \"PRODUCTION\": \"140\",\n        \"ENERGY (Kwh)\": \"303\",\n        \"GAS (CPM)\": \"320\",\n        \"PART NAME\": \"ANCD\",\n        \"WIRE\": 20\n    },\n    {\n        \"TIME\": \"12:00\",\n        \"PRODUCTION\": \"210\",\n        \"ENERGY (Kwh)\": \"403\",\n        \"GAS (CPM)\": \"420\",\n        \"PART NAME\": \"ANCD\",\n        \"WIRE\": 20\n    },\n    {\n        \"TIME\": \"13:00\",\n        \"PRODUCTION\": \"310\",\n        \"ENERGY (Kwh)\": \"503\",\n        \"GAS (CPM)\": \"520\",\n        \"PART NAME\": \"ABCD\",\n        \"WIRE\": 20\n    },\n    {\n        \"TIME\": \"14:00\",\n        \"PRODUCTION\": \"410\",\n        \"ENERGY (Kwh)\": \"603\",\n        \"GAS (CPM)\": \"620\",\n        \"PART NAME\": \"ABCD\",\n        \"WIRE\": 20\n    },\n    {\n        \"TIME\": \"15:00\",\n        \"PRODUCTION\": \"510\",\n        \"ENERGY (Kwh)\": \"703\",\n        \"GAS (CPM)\": \"720\",\n        \"PART NAME\": \"ANCD\",\n        \"WIRE\": 20\n    },\n    {\n        \"TIME\": \"16:00\",\n        \"PRODUCTION\": \"610\",\n        \"ENERGY (Kwh)\": \"803\",\n        \"GAS (CPM)\": \"920\",\n        \"PART NAME\": \"ANCD\",\n        \"WIRE\": 20\n    },\n    {\n        \"TIME\": \"17:00\",\n        \"PRODUCTION\": \"710\",\n        \"ENERGY (Kwh)\": \"903\",\n        \"GAS (CPM)\": \"1020\",\n        \"PART NAME\": \"ANCD\",\n        \"WIRE\": 20\n    }\n];\n\nglobal.set(\"h_1\",1)\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 720,
        "wires": [
            [
                "099a4075f367d0c2",
                "6019b0d9067a38b8"
            ]
        ]
    },
    {
        "id": "045866623d12b7fc",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "h_2_update",
        "func": "msg.ui_control = { tabulator: { columns: [] } };\nmsg.payload = [];\n\nmsg.ui_control = {\n    tabulator: {\n        columns: [\n            { title: \"TIME\", field: \"TIME\", width: 80 },\n            { title: \"OEE(%)\", field: \"OEE(%)\", width: 150 },\n            { title: \"PRODUCTIVITY(%)\", field: \"PRODUCTIVITY(%)\", width: 200 },\n            { title: \"QUALITY(%)\", field: \"QUALITY(%)\", width: 180 },\n            { title: \"UTILZATION(%)\", field: \"UTILZATION(%)\", width: 180 },\n            { title: \"LOSS\", field: \"LOSS\", width: 180 }\n        ]\n    }\n};\n\nmsg.payload = [\n    {\n        \"TIME\": \"9:00\",\n        \"OEE(%)\": \"35\",\n        \"PRODUCTIVITY(%)\": \"95\",\n        \"QUALITY(%)\": \"10\",\n        \"UTILZATION(%)\": \"20\",\n        \"LOSS\": 5\n    },\n    \n    {\n        \"TIME\": \"10:00\",\n        \"OEE(%)\": \"40\",\n        \"PRODUCTIVITY(%)\": \"95\",\n        \"QUALITY(%)\": \"20\",\n        \"UTILZATION(%)\": \"30\",\n        \"LOSS\": 20\n    },\n    {\n        \"TIME\": \"11:00\",\n        \"OEE(%)\": \"50\",\n        \"PRODUCTIVITY(%)\": \"90\",\n        \"QUALITY(%)\": \"80\",\n        \"UTILZATION(%)\": \"50\",\n        \"LOSS\": 20\n    },\n    {\n        \"TIME\": \"12:00\",\n        \"OEE(%)\": \"70\",\n        \"PRODUCTIVITY(%)\": \"90\",\n        \"QUALITY(%)\": \"90\",\n        \"UTILZATION(%)\": \"70\",\n        \"LOSS\": 20\n    },\n    {\n        \"TIME\": \"13:00\",\n        \"OEE(%)\": \"80\",\n        \"PRODUCTIVITY(%)\": \"95\",\n        \"QUALITY(%)\": \"45\",\n        \"UTILZATION(%)\": \"40\",\n        \"LOSS\": 20\n    },\n    {\n        \"TIME\": \"14:00\",\n        \"OEE(%)\": \"90\",\n        \"PRODUCTIVITY(%)\": \"96\",\n        \"QUALITY(%)\": \"60\",\n        \"UTILZATION(%)\": \"50\",\n        \"LOSS\": 20\n    },\n    {\n        \"TIME\": \"15:00\",\n        \"OEE(%)\": \"97\",\n        \"PRODUCTIVITY(%)\": \"96\",\n        \"QUALITY(%)\": \"80\",\n        \"UTILZATION(%)\": \"70\",\n        \"LOSS\": 20\n    },\n    {\n        \"TIME\": \"16:00\",\n        \"OEE(%)\": \"95\",\n        \"PRODUCTIVITY(%)\": \"80\",\n        \"QUALITY(%)\": \"94\",\n        \"UTILZATION(%)\": \"90\",\n        \"LOSS\": 20\n    },\n    {\n        \"TIME\": \"17:00\",\n        \"OEE(%)\": \"100\",\n        \"PRODUCTIVITY(%)\": \"20\",\n        \"QUALITY(%)\": \"30\",\n        \"UTILZATION(%)\": \"45\",\n        \"LOSS\": 20\n    }\n];\n\nglobal.set(\"h_1\", 0)\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 780,
        "wires": [
            [
                "099a4075f367d0c2",
                "6019b0d9067a38b8"
            ]
        ]
    },
    {
        "id": "003d3cb21f3f531c",
        "type": "switch",
        "z": "5ccdd863f339e5b3",
        "name": "h_1",
        "property": "h_1",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "jsonata"
            },
            {
                "t": "eq",
                "v": "undefined",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 230,
        "y": 720,
        "wires": [
            [
                "db4b8f77474d48af",
                "cc5629a5bf22dcaa"
            ],
            [
                "db4b8f77474d48af",
                "cc5629a5bf22dcaa"
            ]
        ]
    },
    {
        "id": "e2afe97fef3deea0",
        "type": "switch",
        "z": "5ccdd863f339e5b3",
        "name": "h_2",
        "property": "h_1",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 230,
        "y": 780,
        "wires": [
            [
                "3e0c3556107d333e",
                "3c2762fdf5f318fb"
            ]
        ]
    },
    {
        "id": "db4b8f77474d48af",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "errase",
        "func": "msg.ui_control = { tabulator: { columns: [] } };\nmsg.payload = [];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 700,
        "wires": [
            [
                "099a4075f367d0c2",
                "6019b0d9067a38b8"
            ]
        ]
    },
    {
        "id": "3e0c3556107d333e",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "errase",
        "func": "msg.ui_control = { tabulator: { columns: [] } };\nmsg.payload = [];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 760,
        "wires": [
            [
                "099a4075f367d0c2",
                "6019b0d9067a38b8"
            ]
        ]
    },
    {
        "id": "cc5629a5bf22dcaa",
        "type": "delay",
        "z": "5ccdd863f339e5b3",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 470,
        "y": 720,
        "wires": [
            [
                "3565c29f43a4b6cf"
            ]
        ]
    },
    {
        "id": "3c2762fdf5f318fb",
        "type": "delay",
        "z": "5ccdd863f339e5b3",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 470,
        "y": 780,
        "wires": [
            [
                "045866623d12b7fc"
            ]
        ]
    },
    {
        "id": "099a4075f367d0c2",
        "type": "ui_table",
        "z": "5ccdd863f339e5b3",
        "group": "0576513590b8b648",
        "name": "LINE_1_CELL_1_8_HOUR",
        "order": 1,
        "width": 19,
        "height": 5,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 1080,
        "y": 720,
        "wires": []
    },
    {
        "id": "abf15e0f872c5633",
        "type": "ui_chart",
        "z": "5ccdd863f339e5b3",
        "name": "",
        "group": "f4131b3dda3c433c",
        "order": 2,
        "width": 19,
        "height": 5,
        "label": "",
        "chartType": "bar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 710,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "868d245fdcf878dd",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "week_production",
        "func": "const labels = [global.get(\"week_mon\"), global.get(\"week_Tue\"), global.get(\"week_Wed\"), global.get(\"week_Thu\"), global.get(\"week_Fri\"), global.get(\"week_Sat\")];\nconst values = [global.get(\"week_production_mon\"), global.get(\"week_production_Tue\"), global.get(\"week_production_Wed\"), global.get(\"week_production_Thu\"), global.get(\"week_production_Fri\"), global.get(\"week_production_Sat\") ];\n\nlet chartMsgs = [];\nfor (let i = 0; i < labels.length; i++) {\n    chartMsgs.push({\n        topic: labels[i],\n        payload: values[i]\n    });\n}\n\nglobal.set(\"week_chart_1\", 1)\n// Output 1: Chart data\n// Output 2: Title text\nreturn [chartMsgs, { payload: \"📊 Production Chart (Mon–Sat)\" }];\n\n\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 1160,
        "wires": [
            [
                "65a1db13693d5545",
                "abf15e0f872c5633"
            ],
            [
                "d2aa98de0ec51b64",
                "f72c12c1484abae5"
            ]
        ]
    },
    {
        "id": "d2aa98de0ec51b64",
        "type": "ui_text",
        "z": "5ccdd863f339e5b3",
        "group": "0dca55ca7a419905",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "18",
        "color": "#f5f5f5",
        "x": 710,
        "y": 1200,
        "wires": []
    },
    {
        "id": "a8714599e9e1ae64",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "function 160",
        "func": "global.set (\"week_mon\" , msg.payload[0].days)\nglobal.set(\"week_production_mon\", msg.payload[0].production)\nglobal.set(\"week_oee_mon\", msg.payload[0].oee)\nglobal.set(\"week_energy_mon\", msg.payload[0].energy)\nglobal.set(\"week_gas_mon\", msg.payload[0].gas)\nglobal.set(\"week_wire_mon\", msg.payload[0].wire)\nglobal.set(\"week_loss_mon\", msg.payload[0].loss)\n\nglobal.set(\"week_Tue\", msg.payload[1].days)\nglobal.set(\"week_production_Tue\", msg.payload[1].production)\nglobal.set(\"week_oee_Tue\", msg.payload[1].oee)\nglobal.set(\"week_energy_Tue\", msg.payload[1].energy)\nglobal.set(\"week_gas_Tue\", msg.payload[1].gas)\nglobal.set(\"week_wire_Tue\", msg.payload[1].wire)\nglobal.set(\"week_loss_Tue\", msg.payload[1].loss)\n\nglobal.set(\"week_Wed\", msg.payload[2].days )\nglobal.set(\"week_production_Wed\", msg.payload[2].production)\nglobal.set(\"week_oee_Wed\", msg.payload[2].oee)\nglobal.set(\"week_energy_Wed\", msg.payload[2].energy)\nglobal.set(\"week_gas_Wed\", msg.payload[2].gas)\nglobal.set(\"week_wire_Wed\", msg.payload[2].wire)\nglobal.set(\"week_loss_Wed\", msg.payload[2].loss)\n\nglobal.set(\"week_Thu\", msg.payload[3].days )\nglobal.set(\"week_production_Thu\", msg.payload[3].production)\nglobal.set(\"week_oee_Thu\", msg.payload[3].oee)\nglobal.set(\"week_energy_Thu\", msg.payload[3].energy)\nglobal.set(\"week_gas_Thu\", msg.payload[3].gas)\nglobal.set(\"week_wire_Thu\", msg.payload[3].wire)\nglobal.set(\"week_loss_Thu\", msg.payload[3].loss)\n\nglobal.set(\"week_Fri\", msg.payload[4].days )\nglobal.set(\"week_production_Fri\", msg.payload[4].production)\nglobal.set(\"week_oee_Fri\", msg.payload[4].oee)\nglobal.set(\"week_energy_Fri\", msg.payload[4].energy)\nglobal.set(\"week_gas_Fri\", msg.payload[4].gas)\nglobal.set(\"week_wire_Fri\", msg.payload[4].wire)\nglobal.set(\"week_loss_Fri\", msg.payload[4].loss)\n\nglobal.set(\"week_Sat\", msg.payload[5].days )\nglobal.set(\"week_production_Sat\", msg.payload[5].production)\nglobal.set(\"week_oee_Sat\", msg.payload[5].oee)\nglobal.set(\"week_energy_Sat\", msg.payload[5].energy)\nglobal.set(\"week_gas_Sat\", msg.payload[5].gas)\nglobal.set(\"week_wire_Sat\", msg.payload[5].wire)\nglobal.set(\"week_loss_Sat\", msg.payload[5].loss)\n\nmsg.payload = global.get(\"prd_production_Sat\")\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "aec8538a5f35346e",
        "type": "inject",
        "z": "5ccdd863f339e5b3",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110,
        "y": 1700,
        "wires": [
            [
                "1779773e362e7ede"
            ]
        ]
    },
    {
        "id": "bd43d133bbae8681",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "LAST 8 HOURS DATA",
        "func": "var pld = \" SELECT days,production,oee,energy,gas,wire,loss\" \n    pld = pld+ \" FROM [Furnace].[dbo].[test_1] \"\n    msg.payload = pld\n    return msg;\n\n\n\n\n\n\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 1640,
        "wires": [
            [
                "dc522b7439d9790d"
            ]
        ]
    },
    {
        "id": "4631652030e7b53f",
        "type": "inject",
        "z": "5ccdd863f339e5b3",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110,
        "y": 1640,
        "wires": [
            [
                "bd43d133bbae8681"
            ]
        ]
    },
    {
        "id": "4c917813ff88c54d",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "week_oee",
        "func": "const labels = [global.get(\"week_mon\"), global.get(\"week_Tue\"), global.get(\"week_Wed\"), global.get(\"week_Thu\"), global.get(\"week_Fri\"), global.get(\"week_Sat\")];\nconst values = [global.get(\"week_oee_mon\"), global.get(\"week_oee_Tue\"), global.get(\"week_oee_Wed\"), global.get(\"week_oee_Thu\"), global.get(\"week_oee_Fri\"), global.get(\"week_oee_Sat\") ];\n\nlet chartMsgs = [];\nfor (let i = 0; i < labels.length; i++) {\n    chartMsgs.push({\n        topic: labels[i],\n        payload: values[i]\n    });\n}\n\nglobal.set(\"week_chart_2\", 1)\n\n\n// Output 1: Chart data\n// Output 2: Title text\nreturn [chartMsgs, { payload: \"📊 OEE (%) Chart (Mon–Sat)\" }];\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 1200,
        "wires": [
            [
                "65a1db13693d5545",
                "abf15e0f872c5633"
            ],
            [
                "d2aa98de0ec51b64",
                "f72c12c1484abae5"
            ]
        ]
    },
    {
        "id": "3ae286d7a1134f5a",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "week_energy",
        "func": "const labels = [global.get(\"week_mon\"), global.get(\"week_Tue\"), global.get(\"week_Wed\"), global.get(\"week_Thu\"), global.get(\"week_Fri\"), global.get(\"week_Sat\")];\nconst values = [global.get(\"week_energy_mon\"), global.get(\"week_energy_Tue\"), global.get(\"week_energy_Wed\"), global.get(\"week_energy_Thu\"), global.get(\"week_energy_Fri\"), global.get(\"week_energy_Sat\") ];\n\nlet chartMsgs = [];\nfor (let i = 0; i < labels.length; i++) {\n    chartMsgs.push({\n        topic: labels[i],\n        payload: values[i]\n    });\n}\n\n// Output 1: Chart data\n// Output 2: Title text\nreturn [chartMsgs, { payload: \"📊 Energy (Kwh) Chart (Mon–Sat)\" }];\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 1220,
        "wires": [
            [
                "65a1db13693d5545",
                "abf15e0f872c5633"
            ],
            [
                "d2aa98de0ec51b64",
                "f72c12c1484abae5"
            ]
        ]
    },
    {
        "id": "15b257ed92533226",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "week_gas",
        "func": "const labels = [global.get(\"week_mon\"), global.get(\"week_Tue\"), global.get(\"week_Wed\"), global.get(\"week_Thu\"), global.get(\"week_Fri\"), global.get(\"week_Sat\")];\nconst values = [global.get(\"week_gas_mon\"), global.get(\"week_gas_Tue\"), global.get(\"week_gas_Wed\"), global.get(\"week_gas_Thu\"), global.get(\"week_gas_Fri\"), global.get(\"week_gas_Sat\") ];\n\nlet chartMsgs = [];\nfor (let i = 0; i < labels.length; i++) {\n    chartMsgs.push({\n        topic: labels[i],\n        payload: values[i]\n    });\n}\n\n// Output 1: Chart data\n// Output 2: Title text\nreturn [chartMsgs, { payload: \"📊 Gas (CPM) Chart (Mon–Sat)\" }];\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1240,
        "wires": [
            [
                "65a1db13693d5545",
                "abf15e0f872c5633"
            ],
            [
                "d2aa98de0ec51b64",
                "f72c12c1484abae5"
            ]
        ]
    },
    {
        "id": "18d14f5538c37eb9",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "week_wire",
        "func": "const labels = [global.get(\"week_mon\"), global.get(\"week_Tue\"), global.get(\"week_Wed\"), global.get(\"week_Thu\"), global.get(\"week_Fri\"), global.get(\"week_Sat\")];\nconst values = [global.get(\"week_wire_mon\"), global.get(\"week_wire_Tue\"), global.get(\"week_wire_Wed\"), global.get(\"week_wire_Thu\"), global.get(\"week_wire_Fri\"), global.get(\"week_wire_Sat\") ];\n\nlet chartMsgs = [];\nfor (let i = 0; i < labels.length; i++) {\n    chartMsgs.push({\n        topic: labels[i],\n        payload: values[i]\n    });\n}\n\n// Output 1: Chart data\n// Output 2: Title text\nreturn [chartMsgs, { payload: \"📊 Wire Consume Chart (Mon–Sat)\" }];\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 1260,
        "wires": [
            [
                "65a1db13693d5545",
                "abf15e0f872c5633"
            ],
            [
                "d2aa98de0ec51b64",
                "f72c12c1484abae5"
            ]
        ]
    },
    {
        "id": "b7d3eca961fb6278",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "week_loss",
        "func": "const labels = [global.get(\"week_mon\"), global.get(\"week_Tue\"), global.get(\"week_Wed\"), global.get(\"week_Thu\"), global.get(\"week_Fri\"), global.get(\"week_Sat\")];\nconst values = [global.get(\"week_loss_mon\"), global.get(\"week_loss_Tue\"), global.get(\"week_loss_Wed\"), global.get(\"week_loss_Thu\"), global.get(\"week_loss_Fri\"), global.get(\"week_loss_Sat\") ];\n\nlet chartMsgs = [];\nfor (let i = 0; i < labels.length; i++) {\n    chartMsgs.push({\n        topic: labels[i],\n        payload: values[i]\n    });\n}\n\n// Output 1: Chart data\n// Output 2: Title text\nreturn [chartMsgs, { payload: \"📊 loss (Sec.) Chart (Mon–Sat)\" }];\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 1300,
        "wires": [
            [
                "65a1db13693d5545",
                "abf15e0f872c5633"
            ],
            [
                "d2aa98de0ec51b64",
                "f72c12c1484abae5"
            ]
        ]
    },
    {
        "id": "d8373c071c71c8b8",
        "type": "inject",
        "z": "5ccdd863f339e5b3",
        "d": true,
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 70,
        "y": 840,
        "wires": [
            [
                "edfe19d63a0624e7",
                "8e261f595d931caa",
                "1434a41fd63595a4",
                "062cc23c97cf2f7a",
                "51bc5e6d73af77b5",
                "e69db6884153c5ad"
            ]
        ]
    },
    {
        "id": "8e261f595d931caa",
        "type": "delay",
        "z": "5ccdd863f339e5b3",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 340,
        "y": 880,
        "wires": [
            [
                "f0dce50aef72379b"
            ]
        ]
    },
    {
        "id": "1434a41fd63595a4",
        "type": "delay",
        "z": "5ccdd863f339e5b3",
        "name": "",
        "pauseType": "delay",
        "timeout": "20",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 340,
        "y": 920,
        "wires": [
            [
                "18d45b88ccb5b27f"
            ]
        ]
    },
    {
        "id": "062cc23c97cf2f7a",
        "type": "delay",
        "z": "5ccdd863f339e5b3",
        "name": "",
        "pauseType": "delay",
        "timeout": "30",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 340,
        "y": 960,
        "wires": [
            [
                "55324f07a9232f5b"
            ]
        ]
    },
    {
        "id": "51bc5e6d73af77b5",
        "type": "delay",
        "z": "5ccdd863f339e5b3",
        "name": "",
        "pauseType": "delay",
        "timeout": "40",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 340,
        "y": 980,
        "wires": [
            [
                "999da690d438d41d"
            ]
        ]
    },
    {
        "id": "e69db6884153c5ad",
        "type": "delay",
        "z": "5ccdd863f339e5b3",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 340,
        "y": 1020,
        "wires": [
            [
                "060e39bb86af24c2"
            ]
        ]
    },
    {
        "id": "6019b0d9067a38b8",
        "type": "ui_table",
        "z": "5ccdd863f339e5b3",
        "group": "e90229bd006224f2",
        "name": "LINE_1_CELL_2_8_HOUR",
        "order": 1,
        "width": 19,
        "height": 5,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 1080,
        "y": 680,
        "wires": []
    },
    {
        "id": "65a1db13693d5545",
        "type": "ui_chart",
        "z": "5ccdd863f339e5b3",
        "name": "",
        "group": "0dca55ca7a419905",
        "order": 2,
        "width": 19,
        "height": 5,
        "label": "",
        "chartType": "bar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 710,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "f72c12c1484abae5",
        "type": "ui_text",
        "z": "5ccdd863f339e5b3",
        "group": "f4131b3dda3c433c",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "18",
        "color": "#f5f5f5",
        "x": 710,
        "y": 1280,
        "wires": []
    },
    {
        "id": "f734af9a8741d6a9",
        "type": "ui_gauge",
        "z": "5ccdd863f339e5b3",
        "name": "",
        "group": "7c1bb3377e665bf6",
        "order": 3,
        "width": 5,
        "height": 4,
        "gtype": "donut",
        "title": "PRODUCTION",
        "label": "NO'S",
        "format": "{{value}}",
        "min": 0,
        "max": "2000",
        "colors": [
            "#00b500",
            "#00b400",
            "#00b438"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 860,
        "y": 140,
        "wires": []
    },
    {
        "id": "c82952e44ed43ce2",
        "type": "ui_gauge",
        "z": "5ccdd863f339e5b3",
        "name": "",
        "group": "7c1bb3377e665bf6",
        "order": 5,
        "width": 5,
        "height": 4,
        "gtype": "donut",
        "title": "GAS",
        "label": "CPM",
        "format": "{{value}}",
        "min": 0,
        "max": "2000",
        "colors": [
            "#00b500",
            "#00b400",
            "#00b400"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 830,
        "y": 60,
        "wires": []
    },
    {
        "id": "4deb54c8b071fa87",
        "type": "ui_gauge",
        "z": "5ccdd863f339e5b3",
        "name": "",
        "group": "7c1bb3377e665bf6",
        "order": 7,
        "width": 5,
        "height": 4,
        "gtype": "donut",
        "title": "ENERGY",
        "label": "Kwh",
        "format": "{{value}}",
        "min": 0,
        "max": "2000",
        "colors": [
            "#00b500",
            "#00b400",
            "#00b400"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 840,
        "y": 100,
        "wires": []
    },
    {
        "id": "428f83d36dd41e71",
        "type": "inject",
        "z": "5ccdd863f339e5b3",
        "name": "",
        "props": [],
        "repeat": "20",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 90,
        "y": 80,
        "wires": [
            [
                "8c256a5a48958b9f",
                "2069a7b0b7714c50",
                "dc724a4eb2a9bf79",
                "736ba58601b78710",
                "ac9a1037cf85ba1d"
            ]
        ]
    },
    {
        "id": "8c256a5a48958b9f",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "CELL-1 GAS",
        "func": "var cell_1_gasflow = global.get(\"flow_cell_1_line_1\")\n//msg.payload = cell_2_gasflow\n\n\n\n\n\nmsg.payload = 50\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 60,
        "wires": [
            [
                "c82952e44ed43ce2"
            ]
        ]
    },
    {
        "id": "2069a7b0b7714c50",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "CELL-1 ENERGY",
        "func": "var cell_1_energy = global.get(\"energy_cell_1_line_1\");\nglobal.set(\"cell_1_energy\", cell_1_energy);\n//msg.payload = cell_2_energy\n\n\n\nmsg.payload = 90\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 80,
        "wires": [
            [
                "4deb54c8b071fa87"
            ]
        ]
    },
    {
        "id": "dc724a4eb2a9bf79",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "CELL-1 PRODUCTION",
        "func": "var production_cell_1_line_1 = global.get(\"production_cell_1_line_1\");\n//msg.payload = production_cell_1_line_1;\nmsg.payload = 60\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 100,
        "wires": [
            [
                "f734af9a8741d6a9"
            ]
        ]
    },
    {
        "id": "44d52dcd10eb47c9",
        "type": "ui_template",
        "z": "5ccdd863f339e5b3",
        "group": "7c1bb3377e665bf6",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<style>\n  .dynamic-title {\n    position: relative;\n    text-align: center;\n    font-weight: bold;\n    color: #00ff00;\n    font-size: 16px;\n    margin-top: -8px;\n    margin-bottom: 10px;\n  }\n</style>\n\n<div class=\"dynamic-title\">\n  {{msg.payload}}\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 840,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "ac6c889069575fc2",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "CELL-2 GAS",
        "func": "var cell_2_gasflow = global.get(\"flow_cell_2_line_1\")\n//msg.payload = cell_2_gasflow\n\nmsg.payload = 700\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 180,
        "wires": [
            [
                "c82952e44ed43ce2"
            ]
        ]
    },
    {
        "id": "fd8157fdd261aab3",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "CELL-2 ENERGY",
        "func": "var cell_2_energy = global.get(\"energy_cell_2_line_1\");\nglobal.set(\"cell_2_energy\", cell_2_energy);\n//msg.payload = cell_2_energy\n\n\nmsg.payload = 1000\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 200,
        "wires": [
            [
                "4deb54c8b071fa87"
            ]
        ]
    },
    {
        "id": "dad2c76a8e58f4a1",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "CELL-2 PRODUCTION",
        "func": "var production_cell_2_line_1 = global.get(\"production_cell_2_line_1\");\n//msg.payload = production_cell_2_line_1;\n\nmsg.payload = 1200\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 220,
        "wires": [
            [
                "f734af9a8741d6a9"
            ]
        ]
    },
    {
        "id": "736ba58601b78710",
        "type": "delay",
        "z": "5ccdd863f339e5b3",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 220,
        "y": 180,
        "wires": [
            [
                "ac6c889069575fc2",
                "fd8157fdd261aab3",
                "dad2c76a8e58f4a1",
                "65de78f040e09eda"
            ]
        ]
    },
    {
        "id": "ac9a1037cf85ba1d",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "CELL-1 NAME",
        "func": "msg.payload =\"ROBOTICS CELL-1\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 120,
        "wires": [
            [
                "44d52dcd10eb47c9"
            ]
        ]
    },
    {
        "id": "65de78f040e09eda",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "CELL-2 NAME",
        "func": "msg.payload = \"ROBOTICS CELL-2\"\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 240,
        "wires": [
            [
                "44d52dcd10eb47c9"
            ]
        ]
    },
    {
        "id": "5bd56b2763248d2b",
        "type": "ui_template",
        "z": "5ccdd863f339e5b3",
        "group": "",
        "name": "",
        "order": 1,
        "width": 19,
        "height": 5,
        "format": "<canvas id=\"chartGroup1\" style=\"width:100%; height:100%;\"></canvas>\n<script src=\"https://cdn.jsdelivr.net/npm/chart.js@2.9.4/dist/Chart.min.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@0.7.0\"></script>\n<script>\n    (function(scope) {\n    scope.$watch('msg.payload', function(data) {\n        if (!data || !data.labels || !data.values) return;\n\n        const canvasId = 'chartGroup1';\n        const chartVar = 'myChartGroup1';\n        const canvas = document.getElementById(canvasId);\n        if (!canvas) return;\n\n        const ctx = canvas.getContext('2d');\n\n        if (window[chartVar]) {\n            window[chartVar].destroy();\n        }\n\n        window[chartVar] = new Chart(ctx, {\n            type: 'bar',\n            data: {\n                labels: data.labels,\n                datasets: [{\n                    label: data.label || 'Production',\n                    data: data.values,\n                    backgroundColor: data.colors || [\n                        '#4285F4', '#AECBFA', '#FB8C00', '#34A853', '#A8DAB5', '#EA4335'\n                    ]\n                }]\n            },\n            options: {\n                responsive: true,\n                maintainAspectRatio: false,\n                title: {\n                    display: !!data.title,\n                    text: data.title || '',\n                    fontColor: '#ffffff',\n                    fontSize: 20\n                },\n                plugins: {\n                    datalabels: {\n                        color: '#fff',\n                        anchor: 'end',\n                        align: 'start',\n                        font: {\n                            weight: 'bold',\n                            size: 18\n                        },\n                        formatter: function(value) {\n                            return value;\n                        }\n                    }\n                },\n                legend: { display: false },\n                scales: {\n                    yAxes: [{\n                        ticks: {\n                            beginAtZero: true,\n                            fontColor: '#ffffff'\n                        }\n                    }],\n                    xAxes: [{\n                        ticks: {\n                            fontColor: '#ffffff'\n                        }\n                    }]\n                }\n            },\n            plugins: [ChartDataLabels]\n        });\n    });\n})(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 820,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "edfe19d63a0624e7",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "week_production",
        "func": "\nconst labels = [\n    global.get(\"week_mon\"),\n    global.get(\"week_Tue\"),\n    global.get(\"week_Wed\"),\n    global.get(\"week_Thu\"),\n    global.get(\"week_Fri\"),\n    global.get(\"week_Sat\")\n];\n\nconst values = [\n    global.get(\"week_production_mon\"),\n    global.get(\"week_production_Tue\"),\n    global.get(\"week_production_Wed\"),\n    global.get(\"week_production_Thu\"),\n    global.get(\"week_production_Fri\"),\n    global.get(\"week_production_Sat\")\n];\n\nmsg.payload = {\n    title: \"📊 Weekly Production (Mon–Sat)\",\n    labels: labels,\n    values: values\n};\n\nreturn msg;\n\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 840,
        "wires": [
            [
                "5bd56b2763248d2b"
            ]
        ]
    },
    {
        "id": "f0dce50aef72379b",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "week_oee",
        "func": "const labels = [global.get(\"week_mon\"), global.get(\"week_Tue\"), global.get(\"week_Wed\"), global.get(\"week_Thu\"), global.get(\"week_Fri\"), global.get(\"week_Sat\")];\nconst values = [global.get(\"week_oee_mon\"), global.get(\"week_oee_Tue\"), global.get(\"week_oee_Wed\"), global.get(\"week_oee_Thu\"), global.get(\"week_oee_Fri\"), global.get(\"week_oee_Sat\") ];\n\n\nmsg.payload = {\n    title: \"📊 OEE (%) Chart (Mon–Sat)\",\n    labels: labels,\n    values: values\n};\n\nreturn msg;\n\n\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 880,
        "wires": [
            [
                "5bd56b2763248d2b"
            ]
        ]
    },
    {
        "id": "18d45b88ccb5b27f",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "week_energy",
        "func": "const labels = [global.get(\"week_mon\"), global.get(\"week_Tue\"), global.get(\"week_Wed\"), global.get(\"week_Thu\"), global.get(\"week_Fri\"), global.get(\"week_Sat\")];\nconst values = [global.get(\"week_energy_mon\"), global.get(\"week_energy_Tue\"), global.get(\"week_energy_Wed\"), global.get(\"week_energy_Thu\"), global.get(\"week_energy_Fri\"), global.get(\"week_energy_Sat\") ];\n\nmsg.payload = {\n    title: \"📊 Energy (Kwh) Chart (Mon–Sat)\",\n    labels: labels,\n    values: values\n};\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 920,
        "wires": [
            [
                "5bd56b2763248d2b"
            ]
        ]
    },
    {
        "id": "55324f07a9232f5b",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "week_gas",
        "func": "const labels = [global.get(\"week_mon\"), global.get(\"week_Tue\"), global.get(\"week_Wed\"), global.get(\"week_Thu\"), global.get(\"week_Fri\"), global.get(\"week_Sat\")];\nconst values = [global.get(\"week_gas_mon\"), global.get(\"week_gas_Tue\"), global.get(\"week_gas_Wed\"), global.get(\"week_gas_Thu\"), global.get(\"week_gas_Fri\"), global.get(\"week_gas_Sat\") ];\n\nmsg.payload = {\n    title: \"📊 Gas (CPM) Chart (Mon–Sat)\",\n    labels: labels,\n    values: values\n};\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 940,
        "wires": [
            [
                "5bd56b2763248d2b"
            ]
        ]
    },
    {
        "id": "999da690d438d41d",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "week_wire",
        "func": "const labels = [global.get(\"week_mon\"), global.get(\"week_Tue\"), global.get(\"week_Wed\"), global.get(\"week_Thu\"), global.get(\"week_Fri\"), global.get(\"week_Sat\")];\nconst values = [global.get(\"week_wire_mon\"), global.get(\"week_wire_Tue\"), global.get(\"week_wire_Wed\"), global.get(\"week_wire_Thu\"), global.get(\"week_wire_Fri\"), global.get(\"week_wire_Sat\") ];\n\nmsg.payload = {\n    title: \"📊 Wire Consume Chart (Mon–Sat)\",\n    labels: labels,\n    values: values\n};\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 980,
        "wires": [
            [
                "5bd56b2763248d2b"
            ]
        ]
    },
    {
        "id": "060e39bb86af24c2",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "week_loss",
        "func": "const labels = [global.get(\"week_mon\"), global.get(\"week_Tue\"), global.get(\"week_Wed\"), global.get(\"week_Thu\"), global.get(\"week_Fri\"), global.get(\"week_Sat\")];\nconst values = [global.get(\"week_loss_mon\"), global.get(\"week_loss_Tue\"), global.get(\"week_loss_Wed\"), global.get(\"week_loss_Thu\"), global.get(\"week_loss_Fri\"), global.get(\"week_loss_Sat\") ];\n\nmsg.payload = {\n    title: \"📊 loss (Sec.) Chart (Mon–Sat)\",\n    labels: labels,\n    values: values\n};\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1020,
        "wires": [
            [
                "5bd56b2763248d2b"
            ]
        ]
    },
    {
        "id": "75019e3984a9235f",
        "type": "inject",
        "z": "5ccdd863f339e5b3",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 90,
        "y": 1160,
        "wires": [
            [
                "868d245fdcf878dd",
                "960bb57806434413",
                "6662e9419efa63dd",
                "d196859c7fa8ad05",
                "e098ef38fff96bb8",
                "2a2e115d43ff281f"
            ]
        ]
    },
    {
        "id": "960bb57806434413",
        "type": "delay",
        "z": "5ccdd863f339e5b3",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 250,
        "y": 1200,
        "wires": [
            [
                "4c917813ff88c54d"
            ]
        ]
    },
    {
        "id": "6662e9419efa63dd",
        "type": "delay",
        "z": "5ccdd863f339e5b3",
        "name": "",
        "pauseType": "delay",
        "timeout": "20",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 250,
        "y": 1240,
        "wires": [
            [
                "3ae286d7a1134f5a"
            ]
        ]
    },
    {
        "id": "d196859c7fa8ad05",
        "type": "delay",
        "z": "5ccdd863f339e5b3",
        "name": "",
        "pauseType": "delay",
        "timeout": "30",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 250,
        "y": 1280,
        "wires": [
            [
                "15b257ed92533226"
            ]
        ]
    },
    {
        "id": "e098ef38fff96bb8",
        "type": "delay",
        "z": "5ccdd863f339e5b3",
        "name": "",
        "pauseType": "delay",
        "timeout": "40",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 250,
        "y": 1320,
        "wires": [
            [
                "18d14f5538c37eb9"
            ]
        ]
    },
    {
        "id": "2a2e115d43ff281f",
        "type": "delay",
        "z": "5ccdd863f339e5b3",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 250,
        "y": 1360,
        "wires": [
            [
                "b7d3eca961fb6278"
            ]
        ]
    },
    {
        "id": "657838c2b60c1d83",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "week_production",
        "func": "\nconst labels = [\n    global.get(\"week_mon\"),\n    global.get(\"week_Tue\"),\n    global.get(\"week_Wed\"),\n    global.get(\"week_Thu\"),\n    global.get(\"week_Fri\"),\n    global.get(\"week_Sat\")\n];\n\nconst values = [\n    global.get(\"week_production_mon\"),\n    global.get(\"week_production_Tue\"),\n    global.get(\"week_production_Wed\"),\n    global.get(\"week_production_Thu\"),\n    global.get(\"week_production_Fri\"),\n    global.get(\"week_production_Sat\")\n];\n\nmsg.payload = {\n    title: \"📊 Weekly Production (Mon–Sat)\",\n    labels: labels,\n    values: values\n};\n\nreturn msg;\n\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1810,
        "y": 1920,
        "wires": [
            []
        ]
    },
    {
        "id": "c02aca21db29cc2e",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "week_oee",
        "func": "const labels = [global.get(\"week_mon\"), global.get(\"week_Tue\"), global.get(\"week_Wed\"), global.get(\"week_Thu\"), global.get(\"week_Fri\"), global.get(\"week_Sat\")];\nconst values = [global.get(\"week_oee_mon\"), global.get(\"week_oee_Tue\"), global.get(\"week_oee_Wed\"), global.get(\"week_oee_Thu\"), global.get(\"week_oee_Fri\"), global.get(\"week_oee_Sat\") ];\n\n\nmsg.payload = {\n    title: \"📊 OEE (%) Chart (Mon–Sat)\",\n    labels: labels,\n    values: values\n};\n\nreturn msg;\n\n\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1810,
        "y": 1960,
        "wires": [
            []
        ]
    },
    {
        "id": "724c9083e6ac0d55",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "week_energy",
        "func": "const labels = [global.get(\"week_mon\"), global.get(\"week_Tue\"), global.get(\"week_Wed\"), global.get(\"week_Thu\"), global.get(\"week_Fri\"), global.get(\"week_Sat\")];\nconst values = [global.get(\"week_energy_mon\"), global.get(\"week_energy_Tue\"), global.get(\"week_energy_Wed\"), global.get(\"week_energy_Thu\"), global.get(\"week_energy_Fri\"), global.get(\"week_energy_Sat\") ];\n\nmsg.payload = {\n    title: \"📊 Energy (Kwh) Chart (Mon–Sat)\",\n    labels: labels,\n    values: values\n};\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1810,
        "y": 2000,
        "wires": [
            []
        ]
    },
    {
        "id": "1e0b5d8d80ed6f6f",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "week_gas",
        "func": "const labels = [global.get(\"week_mon\"), global.get(\"week_Tue\"), global.get(\"week_Wed\"), global.get(\"week_Thu\"), global.get(\"week_Fri\"), global.get(\"week_Sat\")];\nconst values = [global.get(\"week_gas_mon\"), global.get(\"week_gas_Tue\"), global.get(\"week_gas_Wed\"), global.get(\"week_gas_Thu\"), global.get(\"week_gas_Fri\"), global.get(\"week_gas_Sat\") ];\n\nmsg.payload = {\n    title: \"📊 Gas (CPM) Chart (Mon–Sat)\",\n    labels: labels,\n    values: values\n};\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1790,
        "y": 2040,
        "wires": [
            []
        ]
    },
    {
        "id": "7ac71f3c3442f43e",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "week_wire",
        "func": "const labels = [global.get(\"week_mon\"), global.get(\"week_Tue\"), global.get(\"week_Wed\"), global.get(\"week_Thu\"), global.get(\"week_Fri\"), global.get(\"week_Sat\")];\nconst values = [global.get(\"week_wire_mon\"), global.get(\"week_wire_Tue\"), global.get(\"week_wire_Wed\"), global.get(\"week_wire_Thu\"), global.get(\"week_wire_Fri\"), global.get(\"week_wire_Sat\") ];\n\nmsg.payload = {\n    title: \"📊 Wire Consume Chart (Mon–Sat)\",\n    labels: labels,\n    values: values\n};\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1810,
        "y": 2080,
        "wires": [
            []
        ]
    },
    {
        "id": "c0126c8704637f6b",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "week_loss",
        "func": "const labels = [global.get(\"week_mon\"), global.get(\"week_Tue\"), global.get(\"week_Wed\"), global.get(\"week_Thu\"), global.get(\"week_Fri\"), global.get(\"week_Sat\")];\nconst values = [global.get(\"week_loss_mon\"), global.get(\"week_loss_Tue\"), global.get(\"week_loss_Wed\"), global.get(\"week_loss_Thu\"), global.get(\"week_loss_Fri\"), global.get(\"week_loss_Sat\") ];\n\nmsg.payload = {\n    title: \"📊 loss (Sec.) Chart (Mon–Sat)\",\n    labels: labels,\n    values: values\n};\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1810,
        "y": 2120,
        "wires": [
            []
        ]
    },
    {
        "id": "7b50bede15728465",
        "type": "ui_template",
        "z": "5ccdd863f339e5b3",
        "group": "",
        "name": "",
        "order": 1,
        "width": 19,
        "height": 7,
        "format": "<div style=\"position: relative; width: 100%; height: 300px; background-color: #222;\">\n    <canvas id=\"chartGroup2\" style=\"width: 100%; height: 100%;\"></canvas>\n    <div id=\"chartReloadBtn\" style=\"position: absolute; top: 10px; right: 10px; z-index: 10;\">\n        <button onclick=\"refreshChart()\" style=\"padding: 5px 10px;\">Reload Chart</button>\n    </div>\n</div>\n\n<script src=\"https://cdn.jsdelivr.net/npm/chart.js@2.9.4/dist/Chart.min.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@0.7.0\"></script>\n\n<script>\n    (function(scope) {\n  let chart;\n\n  function renderChart(data) {\n    const ctx = document.getElementById('chartGroup2').getContext('2d');\n    if (chart) chart.destroy();\n\n    chart = new Chart(ctx, {\n      type: 'bar',\n      data: {\n        labels: data.labels,\n        datasets: [{\n          label: data.label || 'Production',\n          data: data.values,\n          backgroundColor: data.colors || [\n            '#4285F4', '#AECBFA', '#FB8C00', '#34A853', '#A8DAB5', '#EA4335'\n          ]\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        title: {\n          display: !!data.title,\n          text: data.title || '',\n          fontColor: '#ffffff',\n          fontSize: 20\n        },\n        plugins: {\n          datalabels: {\n            color: '#fff',\n            anchor: 'end',\n            align: 'start',\n            font: {\n              weight: 'bold',\n              size: 18\n            },\n            formatter: function(value) {\n              return value;\n            }\n          }\n        },\n        legend: { display: false },\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true,\n              fontColor: '#ffffff'\n            },\n            gridLines: {\n              color: 'rgba(255,255,255,0.1)'  // Light white grid\n            }\n          }],\n          xAxes: [{\n            ticks: {\n              fontColor: '#ffffff'\n            },\n            gridLines: {\n              color: 'rgba(255,255,255,0.1)'  // Light white grid\n            }\n          }]\n        }\n      },\n      plugins: [ChartDataLabels]\n    });\n  }\n\n  // Watch msg.payload changes\n  scope.$watch('msg.payload', function(data) {\n    if (!data || !data.labels || !data.values) return;\n    setTimeout(() => renderChart(data), 300); // Helps with mobile rendering\n  });\n\n  // Manual reload function for the button\n  window.refreshChart = function() {\n    if (scope.msg && scope.msg.payload) {\n      renderChart(scope.msg.payload);\n    }\n  };\n\n})(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1460,
        "y": 1880,
        "wires": [
            []
        ]
    },
    {
        "id": "f71e8cc391b09941",
        "type": "ui_template",
        "z": "5ccdd863f339e5b3",
        "d": true,
        "group": "",
        "name": "",
        "order": 1,
        "width": 19,
        "height": 7,
        "format": "<canvas id=\"myBarChart\" width=\"930\" height=\"330\"></canvas>\n\n<script src=\"https://cdn.jsdelivr.net/npm/chart.js@2.9.4/dist/Chart.min.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@0.7.0\"></script>\n\n<script>\n    (function(scope) {\n    scope.$watch('msg.payload', function(data) {\n        if (!data || !data.labels || !data.values) return;\n\n        const ctx = document.getElementById('myBarChart').getContext('2d');\n\n        // Destroy previous chart if exists\n        if (window.myBarChart) {\n            window.myBarChart.destroy();\n        }\n\n        window.myBarChart = new Chart(ctx, {\n            type: 'bar',\n            data: {\n                labels: data.labels,\n                datasets: [{\n                    label: 'Production',\n                    data: data.values,\n                    backgroundColor: [\n                        '#4285F4', '#AECBFA', '#FB8C00', '#34A853', '#A8DAB5', '#EA4335'\n                    ]\n                }]\n            },\n            options: {\n                title: {\n                    display: !!data.title, // show title only if it exists\n                    text: data.title || '',\n                    fontColor: '#ffffff',\n                    fontSize: 18\n                },\n                plugins: {\n                    datalabels: {\n                        color: '#fff',\n                        anchor: 'end',\n                        align: 'start',\n                        font: {\n                            weight: 'bold',\n                            size: 14\n                        },\n                        formatter: function(value) {\n                            return value;\n                        }\n                    }\n                },\n                legend: {\n                    display: false\n                },\n                scales: {\n                    yAxes: [{\n                        ticks: {\n                            beginAtZero: true,\n                            fontColor: '#ffffff'\n                        }\n                    }],\n                    xAxes: [{\n                        ticks: {\n                            fontColor: '#ffffff'\n                        }\n                    }]\n                }\n            },\n            plugins: [ChartDataLabels]\n        });\n    });\n})(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1240,
        "y": 2040,
        "wires": [
            []
        ]
    },
    {
        "id": "6118ab8f79f9b049",
        "type": "inject",
        "z": "5ccdd863f339e5b3",
        "name": "Group 1 Data",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"title\":\"Group 1 Production\",\"labels\":[\"Line A\",\"Line B\"],\"values\":[100,150]}",
        "payloadType": "json",
        "x": 1030,
        "y": 2160,
        "wires": [
            [
                "529de3b09ef093fb"
            ]
        ]
    },
    {
        "id": "f958e1370611726c",
        "type": "inject",
        "z": "5ccdd863f339e5b3",
        "name": "Group 2 Data",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"title\":\"Group 2 Production\",\"labels\":[\"Line X\",\"Line Y\",\"Line Z\"],\"values\":[90,120,80]}",
        "payloadType": "json",
        "x": 1030,
        "y": 2240,
        "wires": [
            [
                "e7adfa57bf50f9d2"
            ]
        ]
    },
    {
        "id": "529de3b09ef093fb",
        "type": "ui_template",
        "z": "5ccdd863f339e5b3",
        "d": true,
        "group": "",
        "name": "Bar Chart - Group 1",
        "order": 1,
        "width": 12,
        "height": 7,
        "format": "<canvas id=\"chartGroup1\" width=\"930\" height=\"330\"></canvas>\n<script src=\"https://cdn.jsdelivr.net/npm/chart.js@2.9.4/dist/Chart.min.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@0.7.0\"></script>\n<script>\n(function(scope) {\n    scope.$watch('msg.payload', function(data) {\n        if (!data || !data.labels || !data.values) return;\n\n        const canvasId = 'chartGroup1';\n        const chartVar = 'myChartGroup1';\n\n        const ctx = document.getElementById(canvasId).getContext('2d');\n\n        if (window[chartVar]) {\n            window[chartVar].destroy();\n        }\n\n        window[chartVar] = new Chart(ctx, {\n            type: 'bar',\n            data: {\n                labels: data.labels,\n                datasets: [{\n                    label: data.label || 'Production',\n                    data: data.values,\n                    backgroundColor: data.colors || [\n                        '#4285F4', '#FB8C00', '#34A853'\n                    ]\n                }]\n            },\n            options: {\n                title: {\n                    display: !!data.title,\n                    text: data.title || '',\n                    fontColor: '#ffffff',\n                    fontSize: 18\n                },\n                plugins: {\n                    datalabels: {\n                        color: '#fff',\n                        anchor: 'end',\n                        align: 'start',\n                        font: {\n                            weight: 'bold',\n                            size: 14\n                        },\n                        formatter: function(value) {\n                            return value;\n                        }\n                    }\n                },\n                legend: {\n                    display: false\n                },\n                scales: {\n                    yAxes: [{\n                        ticks: {\n                            beginAtZero: true,\n                            fontColor: '#ffffff'\n                        }\n                    }],\n                    xAxes: [{\n                        ticks: {\n                            fontColor: '#ffffff'\n                        }\n                    }]\n                }\n            },\n            plugins: [ChartDataLabels]\n        });\n    });\n})(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1300,
        "y": 2160,
        "wires": [
            []
        ]
    },
    {
        "id": "e7adfa57bf50f9d2",
        "type": "ui_template",
        "z": "5ccdd863f339e5b3",
        "d": true,
        "group": "",
        "name": "Bar Chart - Group 2",
        "order": 1,
        "width": 12,
        "height": 7,
        "format": "<canvas id=\"chartGroup2\" width=\"930\" height=\"330\"></canvas>\n<script src=\"https://cdn.jsdelivr.net/npm/chart.js@2.9.4/dist/Chart.min.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@0.7.0\"></script>\n<script>\n(function(scope) {\n    scope.$watch('msg.payload', function(data) {\n        if (!data || !data.labels || !data.values) return;\n\n        const canvasId = 'chartGroup2';\n        const chartVar = 'myChartGroup2';\n\n        const ctx = document.getElementById(canvasId).getContext('2d');\n\n        if (window[chartVar]) {\n            window[chartVar].destroy();\n        }\n\n        window[chartVar] = new Chart(ctx, {\n            type: 'bar',\n            data: {\n                labels: data.labels,\n                datasets: [{\n                    label: data.label || 'Production',\n                    data: data.values,\n                    backgroundColor: data.colors || [\n                        '#AECBFA', '#EA4335', '#34A853'\n                    ]\n                }]\n            },\n            options: {\n                title: {\n                    display: !!data.title,\n                    text: data.title || '',\n                    fontColor: '#ffffff',\n                    fontSize: 18\n                },\n                plugins: {\n                    datalabels: {\n                        color: '#fff',\n                        anchor: 'end',\n                        align: 'start',\n                        font: {\n                            weight: 'bold',\n                            size: 14\n                        },\n                        formatter: function(value) {\n                            return value;\n                        }\n                    }\n                },\n                legend: {\n                    display: false\n                },\n                scales: {\n                    yAxes: [{\n                        ticks: {\n                            beginAtZero: true,\n                            fontColor: '#ffffff'\n                        }\n                    }],\n                    xAxes: [{\n                        ticks: {\n                            fontColor: '#ffffff'\n                        }\n                    }]\n                }\n            },\n            plugins: [ChartDataLabels]\n        });\n    });\n})(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1310,
        "y": 2240,
        "wires": [
            []
        ]
    },
    {
        "id": "ebd70c8826e44acc",
        "type": "comment",
        "z": "5ccdd863f339e5b3",
        "name": "CELL CURRENT STATUS.",
        "info": "",
        "x": 270,
        "y": 300,
        "wires": []
    },
    {
        "id": "358ae8fbdc51212f",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "OP NAME-CELL-1",
        "func": "//msg.payload = global.get(\"op_name\");\n\nmsg.payload = 'MUKESH ID NO-2345'\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 360,
        "wires": [
            [
                "a9d06bb7d74f96e6"
            ]
        ]
    },
    {
        "id": "a9d06bb7d74f96e6",
        "type": "ui_text",
        "z": "5ccdd863f339e5b3",
        "group": "556030eaa7a2d84c",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "OPERATOR NAME",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1170,
        "y": 300,
        "wires": []
    },
    {
        "id": "4815851612c1d2e7",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "WIRE CONSUM CELL-2",
        "func": "var cell_1_wire = global.get(\"wire_cell_1_line_1\")\n//msg.payload = cell_1_wire\n\nmsg.payload = 100\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 480,
        "wires": [
            [
                "fbca830deeef5cf6"
            ]
        ]
    },
    {
        "id": "5caced963d7287c4",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "OP NAME-CELL-2",
        "func": "//msg.payload = global.get(\"op_name\");\n\nvar op_name = 'JITENDER'\nvar op_id =  'ID NO-2350'\nmsg.payload = op_name +\" \"+ op_id\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 460,
        "wires": [
            [
                "a9d06bb7d74f96e6"
            ]
        ]
    },
    {
        "id": "6aa04dd99f44abc5",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "MC_STATUS CELL-2",
        "func": "//var mc_status = global.get(\"mc_status_cell_2_line_1\");\nvar mc_status = 1\nif (mc_status == 1) {\n    // check if the user has access to execute this function\n    return [msg, null];\n} else {\n    return [null, msg];\n}\nreturn msg;\n//var t_cyl = global.get(\"CY_TIM\");\nmsg.payload = mc_status;\nreturn msg;",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 580,
        "wires": [
            [
                "8637aafe0fa5c25b"
            ],
            [
                "b552417a777e7ddd"
            ]
        ]
    },
    {
        "id": "61a56ed093697c23",
        "type": "ui_template",
        "z": "5ccdd863f339e5b3",
        "group": "556030eaa7a2d84c",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<style>\n  .dynamic-title {\n    position: relative;\n    text-align: center;\n    font-weight: bold;\n    color: #00ff00;\n    font-size: 16px;\n    margin-top: -8px;\n    margin-bottom: 10px;\n  }\n</style>\n\n<div class=\"dynamic-title\">\n  {{msg.payload}}\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1140,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "b3a769d115f60248",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "CELL-1 NAME",
        "func": "msg.payload =\"ROBOTICS CELL-1\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 400,
        "wires": [
            [
                "61a56ed093697c23"
            ]
        ]
    },
    {
        "id": "4805ce6a8a0e867e",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "CELL-2 NAME",
        "func": "msg.payload =\"ROBOTICS CELL-2\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 500,
        "wires": [
            [
                "61a56ed093697c23"
            ]
        ]
    },
    {
        "id": "f76cddba8cb8aede",
        "type": "delay",
        "z": "5ccdd863f339e5b3",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 180,
        "y": 500,
        "wires": [
            [
                "5caced963d7287c4",
                "4815851612c1d2e7",
                "4805ce6a8a0e867e",
                "6aa04dd99f44abc5"
            ]
        ]
    },
    {
        "id": "bd7c557158bd13ec",
        "type": "ui_button",
        "z": "5ccdd863f339e5b3",
        "name": "Refresh Chart",
        "group": "",
        "order": 2,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Refresh Chart",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "refresh",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 1420,
        "y": 1760,
        "wires": [
            [
                "9dfbcca0d92591c4"
            ]
        ]
    },
    {
        "id": "5f243a8d48218195",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "Store Chart Data",
        "func": "flow.set(\"last_chart_data\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1720,
        "y": 1700,
        "wires": [
            []
        ]
    },
    {
        "id": "9dfbcca0d92591c4",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "Get Last Chart Data",
        "func": "msg.payload = flow.get(\"last_chart_data\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "bad9687b86138b0b",
        "type": "inject",
        "z": "5ccdd863f339e5b3",
        "name": "Inject Chart Data",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{\"labels\":[\"A\",\"B\",\"C\",\"D\"],\"values\":[10,15,7,12],\"label\":\"Sample Data\"}",
        "payloadType": "json",
        "x": 1430,
        "y": 1700,
        "wires": [
            [
                "5f243a8d48218195"
            ]
        ]
    },
    {
        "id": "c2a15a36054f83b0",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "Get Last Chart Data",
        "func": "msg.payload = flow.get(\"last_chart_data\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "6787d83c17ede425",
        "type": "debug",
        "z": "5ccdd863f339e5b3",
        "name": "debug 31",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 1580,
        "wires": []
    },
    {
        "id": "c08764191c72c1ef",
        "type": "inject",
        "z": "5ccdd863f339e5b3",
        "d": true,
        "name": "",
        "props": [],
        "repeat": "3",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "x": 1130,
        "y": 80,
        "wires": [
            [
                "bfdb9ec4f4cbc33e",
                "845526d8dad52c40",
                "ed90bb8c4b84c9ba",
                "9944b61a68d8c8e8"
            ]
        ]
    },
    {
        "id": "fcea5b9b01ae223a",
        "type": "MC Read",
        "z": "5ccdd863f339e5b3",
        "name": "192.168.94.11",
        "topic": "",
        "connection": "de8fd6fff3d9e828",
        "address": "d4000,30",
        "addressType": "str",
        "outputFormat": "1",
        "errorHandling": "output2",
        "outputs": 2,
        "x": 1645,
        "y": 20,
        "wires": [
            [
                "910c74b9e93fd78e"
            ],
            [
                "d52c84bc36ca99cb"
            ]
        ],
        "l": false
    },
    {
        "id": "910c74b9e93fd78e",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "plc_to_cell1",
        "func": "var energy_cell_1_line_1 =  msg.payload[0]\nvar flow_cell_1_line_1 = msg.payload[1]\nvar wire_cell_1_line_1 = msg.payload[2]\nvar mc_status_cell_1_line_1 = msg.payload[3]\nvar production_cell_1_line_1 = msg.payload[4]\n\nglobal.set(\"energy_cell_1_line_1\",energy_cell_1_line_1)\nglobal.set(\"flow_cell_1_line_1\",flow_cell_1_line_1)\nglobal.set(\"wire_cell_1_line_1\",wire_cell_1_line_1)\nglobal.set(\"mc_status_cell_1_line_1\",mc_status_cell_1_line_1)\nglobal.set(\"production_cell_1_line_1\",production_cell_1_line_1)\nreturn msg;",
        "outputs": 1,
        "x": 1790,
        "y": 20,
        "wires": [
            []
        ]
    },
    {
        "id": "9e910aa107f9f31d",
        "type": "MC Read",
        "z": "5ccdd863f339e5b3",
        "name": "192.168.94.11",
        "topic": "",
        "connection": "de8fd6fff3d9e828",
        "address": "d4100,30",
        "addressType": "str",
        "outputFormat": "1",
        "errorHandling": "output2",
        "outputs": 2,
        "x": 1695,
        "y": 100,
        "wires": [
            [
                "62a0f6ab0e4d7035"
            ],
            [
                "569f9d65919e4e6e"
            ]
        ],
        "icon": "node-red/link-return.svg",
        "l": false
    },
    {
        "id": "bfdb9ec4f4cbc33e",
        "type": "delay",
        "z": "5ccdd863f339e5b3",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1380,
        "y": 100,
        "wires": [
            [
                "9e910aa107f9f31d"
            ]
        ]
    },
    {
        "id": "62a0f6ab0e4d7035",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "plc_to_cell2",
        "func": "var energy_cell_2_line_1 =  msg.payload[0]\nvar flow_cell_2_line_1 = msg.payload[1]\nvar wire_cell_2_line_1 = msg.payload[2]\nvar mc_status_cell_2_line_1 = msg.payload[3]\nvar production_cell_2_line_1 = msg.payload[4]\n\nglobal.set(\"energy_cell_2_line_1\",energy_cell_2_line_1)\nglobal.set(\"flow_cell_2_line_1\",flow_cell_2_line_1)\nglobal.set(\"wire_cell_2_line_1\",wire_cell_2_line_1)\nglobal.set(\"mc_status_cell_2_line_1\",mc_status_cell_2_line_1)\nglobal.set(\"production_cell_2_line_1\",production_cell_2_line_1)\nreturn msg;",
        "outputs": 1,
        "x": 1830,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "ed90bb8c4b84c9ba",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "function 163",
        "func": "msg.topic = 'connect'\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 20,
        "wires": [
            [
                "fcea5b9b01ae223a"
            ]
        ]
    },
    {
        "id": "845526d8dad52c40",
        "type": "delay",
        "z": "5ccdd863f339e5b3",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1480,
        "y": 60,
        "wires": [
            [
                "fcea5b9b01ae223a"
            ]
        ]
    },
    {
        "id": "d52c84bc36ca99cb",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "plc cell 1 error",
        "func": "var error = msg.payload;\n\n// Convert to string if not already\nif (typeof error !== \"string\") {\n    error = String(error);\n}\n\n//if (error.trim().startsWith(\"Error:\")) {\n//    msg.payload = \"Error: No data received from PLC\";\n//} else {\n//    msg.payload = \"good\";\n//}\n//return msg;\n\n\n//var error = msg.payload\n\n//if (error == \"Error: \" || error == \"Error: timeout\") {\n//    msg.payload = \"Error: No data received from PLC\";\n//} else {\n//    msg.payload = \"good\";\n//}\n//return msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1800,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "9944b61a68d8c8e8",
        "type": "delay",
        "z": "5ccdd863f339e5b3",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1520,
        "y": 140,
        "wires": [
            [
                "9e910aa107f9f31d"
            ]
        ]
    },
    {
        "id": "40fa12a0918d8b6d",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "function 164",
        "func": "msg.topic = 'connect'\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "569f9d65919e4e6e",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "plc cell 2 error",
        "func": "var error = msg.payload;\n\n// Convert to string if not already\nif (typeof error !== \"string\") {\n    error = String(error);\n}\n\n//if (error.trim().startsWith(\"Error:\")) {\n//    msg.payload = \"Error: No data received from PLC\";\n//} else {\n//    msg.payload = \"good\";\n//}\n//return msg;\n\n\n//var error = msg.payload\n\n//if (error == \"Error: \" || error == \"Error: timeout\") {\n//    msg.payload = \"Error: No data received from PLC\";\n//} else {\n//    msg.payload = \"good\";\n//}\n//return msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1860,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "7fcd4aa4d2fb3b7f",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "function 166",
        "func": "msg.headers = {\n    \"Content-Type\": \"application/json\"\n};\nmsg.method = \"POST\";\nmsg.url = \"https://iot-adient.onrender.com/api/upload\"; // Cloud endpoint\n\nmsg.payload = msg.payload; // send full result set\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 1700,
        "wires": [
            [
                "d69af610c7be07ce"
            ]
        ]
    },
    {
        "id": "d69af610c7be07ce",
        "type": "http request",
        "z": "5ccdd863f339e5b3",
        "name": "Send to Cloud API",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1010,
        "y": 1700,
        "wires": [
            [
                "29c95937c26d54a3"
            ]
        ]
    },
    {
        "id": "29c95937c26d54a3",
        "type": "debug",
        "z": "5ccdd863f339e5b3",
        "name": "debug 36",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 1700,
        "wires": []
    },
    {
        "id": "0f47da1cdd748c53",
        "type": "http in",
        "z": "5ccdd863f339e5b3",
        "name": "",
        "url": "/api/upload",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 360,
        "y": 1820,
        "wires": [
            [
                "0bf1835ffe813186"
            ]
        ]
    },
    {
        "id": "0bf1835ffe813186",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "function 167",
        "func": "// Print the received payload to the debug console\nnode.warn(\"Received data: \" + JSON.stringify(msg.payload));\n\n// Optional: You can save to DB here if needed\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1820,
        "wires": [
            [
                "21d736eb89582754"
            ]
        ]
    },
    {
        "id": "21d736eb89582754",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "function 168",
        "func": "global.set (\"week_mon\" , msg.payload[0].days)\nglobal.set(\"week_production_mon\", msg.payload[0].production)\nglobal.set(\"week_oee_mon\", msg.payload[0].oee)\nglobal.set(\"week_energy_mon\", msg.payload[0].energy)\nglobal.set(\"week_gas_mon\", msg.payload[0].gas)\nglobal.set(\"week_wire_mon\", msg.payload[0].wire)\nglobal.set(\"week_loss_mon\", msg.payload[0].loss)\n\nglobal.set(\"week_Tue\", msg.payload[1].days)\nglobal.set(\"week_production_Tue\", msg.payload[1].production)\nglobal.set(\"week_oee_Tue\", msg.payload[1].oee)\nglobal.set(\"week_energy_Tue\", msg.payload[1].energy)\nglobal.set(\"week_gas_Tue\", msg.payload[1].gas)\nglobal.set(\"week_wire_Tue\", msg.payload[1].wire)\nglobal.set(\"week_loss_Tue\", msg.payload[1].loss)\n\nglobal.set(\"week_Wed\", msg.payload[2].days )\nglobal.set(\"week_production_Wed\", msg.payload[2].production)\nglobal.set(\"week_oee_Wed\", msg.payload[2].oee)\nglobal.set(\"week_energy_Wed\", msg.payload[2].energy)\nglobal.set(\"week_gas_Wed\", msg.payload[2].gas)\nglobal.set(\"week_wire_Wed\", msg.payload[2].wire)\nglobal.set(\"week_loss_Wed\", msg.payload[2].loss)\n\nglobal.set(\"week_Thu\", msg.payload[3].days )\nglobal.set(\"week_production_Thu\", msg.payload[3].production)\nglobal.set(\"week_oee_Thu\", msg.payload[3].oee)\nglobal.set(\"week_energy_Thu\", msg.payload[3].energy)\nglobal.set(\"week_gas_Thu\", msg.payload[3].gas)\nglobal.set(\"week_wire_Thu\", msg.payload[3].wire)\nglobal.set(\"week_loss_Thu\", msg.payload[3].loss)\n\nglobal.set(\"week_Fri\", msg.payload[4].days )\nglobal.set(\"week_production_Fri\", msg.payload[4].production)\nglobal.set(\"week_oee_Fri\", msg.payload[4].oee)\nglobal.set(\"week_energy_Fri\", msg.payload[4].energy)\nglobal.set(\"week_gas_Fri\", msg.payload[4].gas)\nglobal.set(\"week_wire_Fri\", msg.payload[4].wire)\nglobal.set(\"week_loss_Fri\", msg.payload[4].loss)\n\nglobal.set(\"week_Sat\", msg.payload[5].days )\nglobal.set(\"week_production_Sat\", msg.payload[5].production)\nglobal.set(\"week_oee_Sat\", msg.payload[5].oee)\nglobal.set(\"week_energy_Sat\", msg.payload[5].energy)\nglobal.set(\"week_gas_Sat\", msg.payload[5].gas)\nglobal.set(\"week_wire_Sat\", msg.payload[5].wire)\nglobal.set(\"week_loss_Sat\", msg.payload[5].loss)\n\nmsg.payload = global.get(\"prd_production_Sat\")\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1820,
        "wires": [
            []
        ]
    },
    {
        "id": "4ebb031bd8097696",
        "type": "ui_template",
        "z": "5ccdd863f339e5b3",
        "d": true,
        "group": "",
        "name": "Clock Toolbar",
        "order": 2,
        "width": "0",
        "height": "0",
        "format": "<script id=\"titleScript\" type=\"text/javascript\">\n    $(function () {\n    if ($('.md-toolbar-tools').length != 0) {\n        loadHeaderElements();\n    } else {\n        setTimeout(loadHeaderElements, 500);\n    }\n});\n\nfunction loadHeaderElements() {\n    $('#demoTitle').remove();\n    $('#clockContainer').remove();\n\n    var toolbar = $('.md-toolbar-tools');\n\n    // --- Centered DEMO VERSION ---\n    var titleSpan = $('<span/>', {\n        id: 'demoTitle',\n        text: 'DEMO VERSION',\n        css: {\n            position: 'absolute',\n            left: '50%',\n            transform: 'translateX(-50%)',\n            fontWeight: 'bold',\n            fontSize: '25px',\n            color: 'FFFFFF', // red text\n        }\n    });\n\n    // --- Right-side clock ---\n    var clockDiv = $('<div/>', { id: 'clockContainer' });\n    var clockText = $('<p/>', { id: 'clock' });\n\n    clockDiv.append(clockText);\n    clockDiv.css({\n        margin: '5px 5px 5px auto',\n    });\n\n    toolbar.css('position', 'relative'); // Ensure relative position for absolute centering\n    toolbar.append(titleSpan);\n    toolbar.append(clockDiv);\n\n    function updateClock() {\n        var d = new Date();\n        $('#clock').text(d.toLocaleString());\n    }\n\n    if (document.clockInterval) {\n        clearInterval(document.clockInterval);\n    }\n\n    document.clockInterval = setInterval(updateClock, 1000);\n}\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "global",
        "className": "",
        "x": 1360,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "a1b2c3d4.123456",
        "type": "inject",
        "z": "5ccdd863f339e5b3",
        "name": "Trigger on Startup",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1070,
        "y": 1200,
        "wires": [
            [
                "b2c3d4e5.234567"
            ]
        ]
    },
    {
        "id": "b2c3d4e5.234567",
        "type": "function",
        "z": "5ccdd863f339e5b3",
        "name": "Inject DEMO Banner CSS",
        "func": "// Dashboard CSS Injection for DEMO VERSION banner\nmsg._ui = msg._ui || {};\nmsg._ui.append = msg._ui.append || {};\n\nmsg._ui.append.head = `\n<style>\n  /* Main banner styles */\n  .md-toolbar-tools::after {\n    content: \"DEMO VERSION\";\n    position: absolute;\n    left: 50%;\n    transform: translateX(-50%);\n    color: #ff0000;\n    font-weight: bold;\n    font-size: 20px;\n    text-shadow: 1px 1px 1px rgba(0,0,0,0.3);\n    z-index: 1000;\n    pointer-events: none;\n  }\n\n  /* Fix for dashboard scrolling */\n  .md-toolbar-tools {\n    position: relative !important;\n  }\n\n  /* Mobile responsive */\n  @media (max-width: 768px) {\n    .md-toolbar-tools::after {\n      font-size: 16px;\n      top: 8px;\n    }\n  }\n</style>\n`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 1200,
        "wires": [
            [
                "c3d4e5f6.345678"
            ]
        ]
    },
    {
        "id": "c3d4e5f6.345678",
        "type": "ui_template",
        "z": "5ccdd863f339e5b3",
        "group": "d4e5f6g7.456789",
        "name": "CSS Loader",
        "order": 0,
        "width": "0",
        "height": "0",
        "format": "<script>\n// This empty template just forces CSS injection\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "global",
        "x": 1530,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "38a3b5665cd675bc",
        "type": "ui_text_input",
        "z": "b3922748f6dbb361",
        "name": "",
        "label": "Problem*",
        "tooltip": "",
        "group": "18dd4b6528c69124",
        "order": 13,
        "width": 6,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "payload",
        "sendOnBlur": false,
        "className": "",
        "topicType": "msg",
        "x": 1180,
        "y": 240,
        "wires": [
            [
                "494c7a7443a18055"
            ]
        ]
    },
    {
        "id": "530863e16af12db3",
        "type": "ui_text_input",
        "z": "b3922748f6dbb361",
        "name": "",
        "label": "Area*",
        "tooltip": "",
        "group": "18dd4b6528c69124",
        "order": 15,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "D104",
        "sendOnBlur": true,
        "className": "",
        "topicType": "flow",
        "x": 1170,
        "y": 300,
        "wires": [
            [
                "d536922be7f2f5e6"
            ]
        ]
    },
    {
        "id": "494c7a7443a18055",
        "type": "function",
        "z": "b3922748f6dbb361",
        "name": "ENTER TOTAL PRODUCTION TIME ",
        "func": "var brk_problem_entery = msg.payload;\nglobal.set(\"brk_problem_entery\", brk_problem_entery);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "d536922be7f2f5e6",
        "type": "function",
        "z": "b3922748f6dbb361",
        "name": "ENTER OPERATOR NAME",
        "func": "var brk_identification_entery = msg.payload;\nglobal.set(\"brk_identification_entery\", brk_identification_entery);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1440,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "eef1f99a546e8f18",
        "type": "ui_text_input",
        "z": "b3922748f6dbb361",
        "name": "",
        "label": "Action*",
        "tooltip": "",
        "group": "18dd4b6528c69124",
        "order": 17,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "D104",
        "sendOnBlur": true,
        "className": "",
        "topicType": "flow",
        "x": 1180,
        "y": 360,
        "wires": [
            [
                "7a67280bf5ad372c"
            ]
        ]
    },
    {
        "id": "7a67280bf5ad372c",
        "type": "function",
        "z": "b3922748f6dbb361",
        "name": "ENTER RUNNING PRODUCT",
        "func": "var brk_action_entery = msg.payload;\nglobal.set(\"brk_action_entery\", brk_action_entery);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "3bf459e92fc51639",
        "type": "ui_text_input",
        "z": "b3922748f6dbb361",
        "name": "",
        "label": "Frequent*",
        "tooltip": "",
        "group": "18dd4b6528c69124",
        "order": 21,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "D104",
        "sendOnBlur": true,
        "className": "",
        "topicType": "flow",
        "x": 1180,
        "y": 420,
        "wires": [
            [
                "470637b49fddb487"
            ]
        ]
    },
    {
        "id": "470637b49fddb487",
        "type": "function",
        "z": "b3922748f6dbb361",
        "name": "ENTER RUNNING PRODUCT",
        "func": "var brk_note_entery = msg.payload;\nglobal.set(\"brk_note_entery\", brk_note_entery);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "d448791d098f4be8",
        "type": "ui_button",
        "z": "b3922748f6dbb361",
        "name": "",
        "group": "18dd4b6528c69124",
        "order": 26,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "ENTER",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "TRUE",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 100,
        "y": 920,
        "wires": [
            [
                "0102a7045d629b64",
                "cf5c492a9885cea1",
                "d8da5d5899536139",
                "24b924fcddb98356",
                "5df6bd88de3ea6a6",
                "40e1510cf1b81e81"
            ]
        ]
    },
    {
        "id": "0102a7045d629b64",
        "type": "function",
        "z": "b3922748f6dbb361",
        "name": "Function",
        "func": "var d = new Date,\ndformat = [d.getMonth()+1,\n    d.getDate(),\n    d.getFullYear()].join('/')+' '+\n    [d.getHours(),\n    d.getMinutes(),\n    d.getSeconds()].join(':');\n//\"UPDATE [node_red].[dbo].[mytable] \"\nvar prblem = global.get(\"brk_problem_entery\");\nvar ident = global.get(\"brk_identification_entery\");\nvar action = global.get(\"brk_action_entery\");\nvar note = global.get(\"brk_note_entery\");\nvar brk_time = global.get(\"brk_loss_time\");\nvar dtstmp = new Date().toString();\nvar pld = \"INSERT INTO[Furnace].[dbo].[break_down](TIME,PROBLEM,AREA,ACTION,FREQUENT,LOSS)\"      \npld = pld + \"VALUES ('\" + dformat + \"','\" + prblem + \"','\" + ident + \"','\" + action + \"','\" + note + \"','\" + brk_time + \"')\"\n\n//pld = pld + \"SET Timestamp = '\" + dformat + \"' \"\n\n//pld = pld + \"WHERE id = 1\"\n\nmsg.payload = pld\nreturn msg;\n\n\n\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 900,
        "wires": [
            [
                "b1d46aa41b7bdcce"
            ]
        ]
    },
    {
        "id": "b1d46aa41b7bdcce",
        "type": "MSSQL",
        "z": "b3922748f6dbb361",
        "mssqlCN": "489ecfa5c218484f",
        "name": "BREAK_DOWN",
        "query": "",
        "outField": "payload",
        "x": 600,
        "y": 900,
        "wires": [
            [
                "791e68608cf89c80",
                "cc12991ef0c5ae18"
            ]
        ]
    },
    {
        "id": "4a246c92777cd275",
        "type": "function",
        "z": "b3922748f6dbb361",
        "name": "Function",
        "func": "var d = new Date,\ndformat = [d.getMonth()+1,\n    d.getDate(),\n    d.getFullYear()].join('/')+' '+\n    [d.getHours(),\n    d.getMinutes(),\n    d.getSeconds()].join(':');\n//\"UPDATE [node_red].[dbo].[mytable] \"\nvar prblem = global.get(\"brk_problem_entery\");\nvar ident = global.get(\"brk_identification_entery\");\nvar action = global.get(\"brk_action_entery\");\nvar note = global.get(\"brk_note_entery\");\nvar brk_time = global.get(\"brk_loss_time\");\nvar dtstmp = new Date().toString();\nvar pld = \"INSERT INTO[Furnace].[dbo].[break_down_history](TIME,PROBLEM,AREA,ACTION,FREQUENT,LOSS)\"      \npld = pld + \"VALUES ('\" + dformat + \"','\" + prblem + \"','\" + ident + \"','\" + action + \"','\" + note + \"','\" + brk_time + \"')\"\n\n//pld = pld + \"SET Timestamp = '\" + dformat + \"' \"\n\n//pld = pld + \"WHERE id = 1\"\n\nmsg.payload = pld\nreturn msg;\n\n\n\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 1100,
        "wires": [
            [
                "a5f4ef8ae67805bb"
            ]
        ]
    },
    {
        "id": "a5f4ef8ae67805bb",
        "type": "MSSQL",
        "z": "b3922748f6dbb361",
        "mssqlCN": "489ecfa5c218484f",
        "name": "BREAK_DOWN_HISTORY",
        "query": "",
        "outField": "payload",
        "x": 920,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "ba8660028db5ed52",
        "type": "ui_table",
        "z": "b3922748f6dbb361",
        "group": "18dd4b6528c69124",
        "name": "TODAY BREAKDOWN ENTERY",
        "order": 23,
        "width": 15,
        "height": 12,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 930,
        "y": 1040,
        "wires": []
    },
    {
        "id": "07e6ef71b84f2b82",
        "type": "function",
        "z": "b3922748f6dbb361",
        "name": "Function",
        "func": "var pld = \" SELECT TIME,PROBLEM,AREA,ACTION,FREQUENT,LOSS\" \n    pld = pld+ \" FROM [Furnace].[dbo].[break_down] \"\n    pld    = pld + \"ORDER BY TIME\"\nmsg.payload = pld\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1040,
        "wires": [
            [
                "3938b895c30d7647"
            ]
        ]
    },
    {
        "id": "3938b895c30d7647",
        "type": "MSSQL",
        "z": "b3922748f6dbb361",
        "mssqlCN": "489ecfa5c218484f",
        "name": "BREAK_DOWN_DISPLAY",
        "query": "",
        "outField": "payload",
        "x": 640,
        "y": 1040,
        "wires": [
            [
                "ba8660028db5ed52"
            ]
        ]
    },
    {
        "id": "cf5c492a9885cea1",
        "type": "delay",
        "z": "b3922748f6dbb361",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 300,
        "y": 1040,
        "wires": [
            [
                "07e6ef71b84f2b82"
            ]
        ]
    },
    {
        "id": "4309ef3ce8b3c34c",
        "type": "ui_button",
        "z": "b3922748f6dbb361",
        "name": "",
        "group": "18dd4b6528c69124",
        "order": 30,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "DELETE",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "TRUE",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 140,
        "y": 1240,
        "wires": [
            [
                "dcd1634413218767",
                "cf5c492a9885cea1",
                "b583a407f6322418"
            ]
        ]
    },
    {
        "id": "dcd1634413218767",
        "type": "function",
        "z": "b3922748f6dbb361",
        "name": "Function",
        "func": "//DELETE FROM table_name WHERE condition\nvar delt_item = global.get(\"erase_selected\");\n\nvar pld = \" DELETE FROM [Furnace].[dbo].[break_down] \" \n    \npld = pld + \" WHERE TIME = '\" + delt_item + \"' \"\nmsg.payload = pld\nreturn msg;\n\n\n//[node_red].[dbo].\n\n\n\n\n\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 1240,
        "wires": [
            [
                "4a84378029208dd6"
            ]
        ]
    },
    {
        "id": "c3688c1de060b9df",
        "type": "ui_text_input",
        "z": "b3922748f6dbb361",
        "name": "",
        "label": "DELETE WRONG ENTERY*",
        "tooltip": "",
        "group": "18dd4b6528c69124",
        "order": 28,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "payload",
        "sendOnBlur": false,
        "className": "",
        "topicType": "msg",
        "x": 340,
        "y": 1360,
        "wires": [
            [
                "9e225fdb27484367"
            ]
        ]
    },
    {
        "id": "9e225fdb27484367",
        "type": "function",
        "z": "b3922748f6dbb361",
        "name": "ENTER TOTAL PRODUCTION TIME ",
        "func": "var erase_selected = msg.payload;\nglobal.set(\"erase_selected\", erase_selected);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "4a84378029208dd6",
        "type": "MSSQL",
        "z": "b3922748f6dbb361",
        "mssqlCN": "76839cf0e528d185",
        "name": "DEL_1",
        "query": "",
        "outField": "payload",
        "x": 490,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "e25f5f8c7852bc96",
        "type": "inject",
        "z": "b3922748f6dbb361",
        "name": "",
        "props": [],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 1360,
        "wires": [
            [
                "c3688c1de060b9df"
            ]
        ]
    },
    {
        "id": "d3d9c14bdc8fc35c",
        "type": "ui_text",
        "z": "b3922748f6dbb361",
        "group": "18dd4b6528c69124",
        "order": 19,
        "width": 8,
        "height": 1,
        "name": "",
        "label": "TODAY BREAKDOWN ENTERY",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 990,
        "y": 1000,
        "wires": []
    },
    {
        "id": "0fa28f86f77d6b36",
        "type": "function",
        "z": "b3922748f6dbb361",
        "name": "Function",
        "func": "//DELETE FROM table_name WHERE condition\nvar delt_item = global.get(\"erase_selected\");\n\nvar pld = \" DELETE FROM [Furnace].[dbo].[break_down_history] \" \n    \npld = pld + \" WHERE TIME = '\" + delt_item + \"' \"\nmsg.payload = pld\nreturn msg;\n\n\n//[node_red].[dbo].\n\n\n\n\n\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 1280,
        "wires": [
            [
                "21a8c7b6641f29da"
            ]
        ]
    },
    {
        "id": "21a8c7b6641f29da",
        "type": "MSSQL",
        "z": "b3922748f6dbb361",
        "mssqlCN": "76839cf0e528d185",
        "name": "DEL_HISTRY",
        "query": "",
        "outField": "payload",
        "x": 660,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "d8da5d5899536139",
        "type": "delay",
        "z": "b3922748f6dbb361",
        "name": "",
        "pauseType": "delay",
        "timeout": "4",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 340,
        "y": 1100,
        "wires": [
            [
                "4a246c92777cd275"
            ]
        ]
    },
    {
        "id": "b583a407f6322418",
        "type": "delay",
        "z": "b3922748f6dbb361",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 320,
        "y": 1280,
        "wires": [
            [
                "0fa28f86f77d6b36"
            ]
        ]
    },
    {
        "id": "85426781f2017b76",
        "type": "function",
        "z": "b3922748f6dbb361",
        "name": "DELETE_ALL",
        "func": "//DELETE FROM table_name WHERE condition\nvar delt_item = global.get(\"erase_selected\");\n\nvar pld = \" DELETE FROM [node_red].[dbo].[break_down] \" \n    \n//pld = pld + \" WHERE TIME = '\" + delt_item + \"' \"\nmsg.payload = pld\nreturn msg;\n\n\n//[node_red].[dbo].\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "24b924fcddb98356",
        "type": "delay",
        "z": "b3922748f6dbb361",
        "name": "",
        "pauseType": "delay",
        "timeout": "6",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 340,
        "y": 1140,
        "wires": [
            [
                "ab5b895e2776ef81"
            ]
        ]
    },
    {
        "id": "ab5b895e2776ef81",
        "type": "function",
        "z": "b3922748f6dbb361",
        "name": "Function",
        "func": "var d = new Date,\n    dformat = [d.getMonth() + 1,\n    d.getDate(),\n    d.getFullYear()].join('/') + ' ' +\n        [0,\n        0,\n        0].join(':');\nvar pervious = global.get(\"pervious_date\")   \n//\"UPDATE [node_red].[dbo].[mytable] \"\nvar prblem = global.get(\"brk_problem_entery\");\nvar ident = global.get(\"brk_identification_entery\");\nvar action = global.get(\"brk_action_entery\");\nvar note = global.get(\"brk_note_entery\");\nvar brk_time = global.get(\"brk_loss_time\");\nvar dtstmp = new Date().toString();\nvar pld = \"INSERT INTO[Furnace].[dbo].[break_down_history_1](TIME,PROBLEM,AREA,ACTION,FREQUENT,SLECTED_DATE,LOSS)\"      \npld = pld + \"VALUES ('\" + dformat + \"','\" + prblem + \"','\" + ident + \"','\" + action + \"','\" + note + \"','\" + pervious + \"','\" + brk_time + \"')\"\n\n//pld = pld + \"SET Timestamp = '\" + dformat + \"' \"\n\n//pld = pld + \"WHERE id = 1\"\n\nmsg.payload = pld\nreturn msg;\n\n\n\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 1140,
        "wires": [
            [
                "9d5af59ea3a046a6"
            ]
        ]
    },
    {
        "id": "9d5af59ea3a046a6",
        "type": "MSSQL",
        "z": "b3922748f6dbb361",
        "mssqlCN": "489ecfa5c218484f",
        "name": "BREAK_DOWN_HISTORY",
        "query": "",
        "outField": "payload",
        "x": 920,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "2cd4fa8f1aad6e69",
        "type": "function",
        "z": "b3922748f6dbb361",
        "name": "Function",
        "func": "var pld = \" SELECT PROBLEM,AREA,ACTION\" \npld = pld + \" FROM [Furnace].[dbo].[break_down_reference] \"\n    //pld    = pld + \"ORDER BY TIME\"\nmsg.payload = pld\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 300,
        "wires": [
            [
                "1a8f9b2abd46347a"
            ]
        ]
    },
    {
        "id": "8d0a3efc9bc26dfb",
        "type": "ui_button",
        "z": "b3922748f6dbb361",
        "name": "",
        "group": "18dd4b6528c69124",
        "order": 3,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "SEARCH",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "TRUE",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 60,
        "y": 300,
        "wires": [
            [
                "2cd4fa8f1aad6e69"
            ]
        ]
    },
    {
        "id": "1a8f9b2abd46347a",
        "type": "MSSQL",
        "z": "b3922748f6dbb361",
        "mssqlCN": "76839cf0e528d185",
        "name": "BREAK_DOWN",
        "query": "",
        "outField": "payload",
        "x": 400,
        "y": 300,
        "wires": [
            [
                "931d9506fbd276c7"
            ]
        ]
    },
    {
        "id": "931d9506fbd276c7",
        "type": "ui_table",
        "z": "b3922748f6dbb361",
        "group": "18dd4b6528c69124",
        "name": "BREAKDOWN DATA",
        "order": 8,
        "width": 15,
        "height": 5,
        "columns": [],
        "outputs": 1,
        "cts": true,
        "x": 620,
        "y": 300,
        "wires": [
            [
                "b72e8c4c5450d871"
            ]
        ]
    },
    {
        "id": "07ef2f668261a6c3",
        "type": "ui_text_input",
        "z": "b3922748f6dbb361",
        "name": "",
        "label": "Value",
        "tooltip": "",
        "group": "18dd4b6528c69124",
        "order": 6,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 50,
        "y": 480,
        "wires": [
            [
                "8313b8651346a85b"
            ]
        ]
    },
    {
        "id": "8313b8651346a85b",
        "type": "change",
        "z": "b3922748f6dbb361",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filter.value",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 270,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "2e27b6833c3399da",
        "type": "ui_dropdown",
        "z": "b3922748f6dbb361",
        "name": "",
        "label": "Field",
        "tooltip": "",
        "place": "Select option",
        "group": "18dd4b6528c69124",
        "order": 1,
        "width": 6,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "PROBLEM",
                "value": "PROBLEM",
                "type": "str"
            },
            {
                "label": "AREA",
                "value": "AREA",
                "type": "str"
            },
            {
                "label": "ACTION",
                "value": "ACTION",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 50,
        "y": 360,
        "wires": [
            [
                "4665cc53908528d0",
                "0915cacb662ef1db"
            ]
        ]
    },
    {
        "id": "4665cc53908528d0",
        "type": "change",
        "z": "b3922748f6dbb361",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filter.field",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 270,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "0915cacb662ef1db",
        "type": "change",
        "z": "b3922748f6dbb361",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filter.type",
                "pt": "flow",
                "to": "=",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 270,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "8234bfab4d22b12a",
        "type": "ui_button",
        "z": "b3922748f6dbb361",
        "name": "",
        "group": "18dd4b6528c69124",
        "order": 9,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Apply Filter",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-filter",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 90,
        "y": 660,
        "wires": [
            [
                "b7b4c94585fd2bb9",
                "4020305172f2e621",
                "6a36ea1eb859638f"
            ]
        ]
    },
    {
        "id": "6c90ad4fae410119",
        "type": "ui_button",
        "z": "b3922748f6dbb361",
        "name": "",
        "group": "18dd4b6528c69124",
        "order": 11,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Clear Filter",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "className": "",
        "icon": "fa-trash",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 90,
        "y": 720,
        "wires": [
            [
                "42883061c40d5c53",
                "b7b4c94585fd2bb9"
            ]
        ]
    },
    {
        "id": "42883061c40d5c53",
        "type": "change",
        "z": "b3922748f6dbb361",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"command\":\"setFilter\",\"arguments\":[]}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "b7b4c94585fd2bb9",
        "type": "change",
        "z": "b3922748f6dbb361",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"Dashboard_Filter\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "6a36ea1eb859638f",
        "type": "function",
        "z": "b3922748f6dbb361",
        "name": "Construct Filter",
        "func": "// get filter obj\nconst filter = flow.get(\"filter\");\n\n// define payload\nmsg.payload = {\n    command: \"setFilter\",\n    arguments: [\n        filter.field,\n        filter.type,\n        filter.value\n    ]\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 660,
        "wires": [
            [
                "931d9506fbd276c7"
            ]
        ]
    },
    {
        "id": "4020305172f2e621",
        "type": "function",
        "z": "b3922748f6dbb361",
        "name": "Construct Filter",
        "func": "// get filter obj\nconst filter = flow.get(\"filter\");\n\n// define payload\nmsg.payload = {\n    command: \"download\",\n    arguments: [\"csv\", \"data.csv\" \n        \n    ]\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "b72e8c4c5450d871",
        "type": "function",
        "z": "b3922748f6dbb361",
        "name": "function 155",
        "func": "var table_select = msg.payload\nglobal.set(\"TABLE_SELECTED\", table_select)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 300,
        "wires": [
            [
                "366a6e50d6243b70"
            ]
        ]
    },
    {
        "id": "366a6e50d6243b70",
        "type": "function",
        "z": "b3922748f6dbb361",
        "name": "function 157",
        "func": "var selected = global.get(\"TABLE_SELECTED\")\nglobal.set(\"brk_problem_entery\", selected.PROBLEM)\nglobal.set(\"brk_identification_entery\", selected.AREA)\nglobal.set(\"brk_action_entery\", selected.ACTION)\n\nvar problem = selected.PROBLEM;\nmsg.problem = {payload:problem};\nvar area = selected.AREA;\nmsg.area = { payload: area };\n\nvar action = selected.ACTION;\nmsg.action = { payload: action };\n\nreturn [msg.problem,msg.area,msg.action];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 300,
        "wires": [
            [
                "38a3b5665cd675bc"
            ],
            [
                "530863e16af12db3"
            ],
            [
                "eef1f99a546e8f18"
            ]
        ]
    },
    {
        "id": "64843d86be866c9a",
        "type": "ui_button",
        "z": "b3922748f6dbb361",
        "name": "",
        "group": "18dd4b6528c69124",
        "order": 5,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "NEW ADD",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "TRUE",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 880,
        "wires": [
            [
                "9e290c74243604b7"
            ]
        ]
    },
    {
        "id": "9e290c74243604b7",
        "type": "function",
        "z": "b3922748f6dbb361",
        "name": "Function",
        "func": "var d = new Date,\ndformat = [d.getMonth()+1,\n    d.getDate(),\n    d.getFullYear()].join('/')+' '+\n    [d.getHours(),\n    d.getMinutes(),\n    d.getSeconds()].join(':');\n//\"UPDATE [node_red].[dbo].[mytable] \"\nvar prblem = global.get(\"brk_problem_entery\");\nvar ident = global.get(\"brk_identification_entery\");\nvar action = global.get(\"brk_action_entery\");\nvar note = global.get(\"brk_note_entery\");\nvar dtstmp = new Date().toString();\nvar pld = \"INSERT INTO[node_red].[dbo].[break_down_reference](PROBLEM,AREA,ACTION)\"      \npld = pld + \"VALUES ('\" + prblem + \"','\" + ident + \"','\" + action + \"')\"\n\n//pld = pld + \"SET Timestamp = '\" + dformat + \"' \"\n\n//pld = pld + \"WHERE id = 1\"\n\nmsg.payload = pld\nreturn msg;\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "3e7869aca3e723c1",
        "type": "ui_text_input",
        "z": "b3922748f6dbb361",
        "name": "",
        "label": "Loss Time min*",
        "tooltip": "",
        "group": "18dd4b6528c69124",
        "order": 24,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "D104",
        "sendOnBlur": true,
        "className": "",
        "topicType": "flow",
        "x": 1200,
        "y": 460,
        "wires": [
            [
                "20dae2dafe6f9093"
            ]
        ]
    },
    {
        "id": "20dae2dafe6f9093",
        "type": "function",
        "z": "b3922748f6dbb361",
        "name": "ENTER RUNNING PRODUCT",
        "func": "var brk_loss_time = msg.payload;\nglobal.set(\"brk_loss_time\", brk_loss_time);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "f460eecd18e11e65",
        "type": "MSSQL",
        "z": "b3922748f6dbb361",
        "mssqlCN": "76839cf0e528d185",
        "name": "BREAK_DOWN",
        "query": "",
        "outField": "payload",
        "x": 1080,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "5df6bd88de3ea6a6",
        "type": "function",
        "z": "b3922748f6dbb361",
        "name": "Function",
        "func": "var d = new Date,\ndformat = [d.getMonth()+1,\n    d.getDate(),\n    d.getFullYear()].join('/')+' '+\n    [d.getHours(),\n    d.getMinutes(),\n    d.getSeconds()].join(':');\n//\"UPDATE [node_red].[dbo].[mytable] \"\nvar prblem = global.get(\"brk_problem_entery\");\nvar ident = global.get(\"brk_identification_entery\");\nvar action = global.get(\"brk_action_entery\");\nvar note = global.get(\"brk_note_entery\");\nvar brk_time = global.get(\"brk_loss_time\");\nvar dtstmp = new Date().toString();\nvar pld = \"INSERT INTO[para_3].[dbo].[break_down](TIME,PROBLEM,AREA,ACTION,FREQUENT,LOSS)\"      \npld = pld + \"VALUES ('\" + dformat + \"','\" + prblem + \"','\" + ident + \"','\" + action + \"','\" + note + \"','\" + brk_time + \"')\"\n\n//pld = pld + \"SET Timestamp = '\" + dformat + \"' \"\n\n//pld = pld + \"WHERE id = 1\"\n\nmsg.payload = pld\nreturn msg;\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "9e2e93f4fe338f82",
        "type": "MSSQL",
        "z": "b3922748f6dbb361",
        "mssqlCN": "489ecfa5c218484f",
        "name": "",
        "query": "",
        "outField": "payload",
        "x": 1060,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "f206cc187cec641d",
        "type": "postgresql",
        "z": "b3922748f6dbb361",
        "name": "",
        "query": "INSERT INTO break_down(\"TIME\", \"PROBLEM\", \"AREA\", \"ACTION\", \"FREQUENT\", \"LOSS\")\nVALUES ($1, $2, $3, $4, $5, $6)",
        "postgreSQLConfig": "8453bbc22d0ef611",
        "split": false,
        "rowsPerMsg": "1",
        "outputs": 1,
        "x": 950,
        "y": 740,
        "wires": [
            [
                "49ba9150c698282e"
            ]
        ]
    },
    {
        "id": "40e1510cf1b81e81",
        "type": "delay",
        "z": "b3922748f6dbb361",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 620,
        "y": 740,
        "wires": [
            [
                "14580be95a77672c"
            ]
        ]
    },
    {
        "id": "49ba9150c698282e",
        "type": "debug",
        "z": "b3922748f6dbb361",
        "name": "debug 32",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 740,
        "wires": []
    },
    {
        "id": "fc1c28fe8188c397",
        "type": "function",
        "z": "b3922748f6dbb361",
        "name": "function 161",
        "func": "msg.payload = `\nINSERT INTO break_down(\"TIME\", \"PROBLEM\", \"AREA\", \"ACTION\", \"FREQUENT\", \"LOSS\")\nVALUES ('2025-05-15 14:30:00', 'DirectTest', 'StationX', 'TestAction', 'Yes', '99')\nRETURNING *;\n`;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "14580be95a77672c",
        "type": "function",
        "z": "b3922748f6dbb361",
        "name": "function 162",
        "func": "var d = new Date();\nvar dformat = [\n    d.getFullYear(),\n    (\"0\" + (d.getMonth() + 1)).slice(-2),\n    (\"0\" + d.getDate()).slice(-2)\n].join('-') + ' ' +\n    [\n        (\"0\" + d.getHours()).slice(-2),\n        (\"0\" + d.getMinutes()).slice(-2),\n        (\"0\" + d.getSeconds()).slice(-2)\n    ].join(':');\n\nvar prblem = global.get(\"brk_problem_entery\");\nvar ident = global.get(\"brk_identification_entery\");\nvar action = global.get(\"brk_action_entery\");\nvar note = global.get(\"brk_note_entery\");\nvar brk_time = global.get(\"brk_loss_time\");\n\n\n// Assign SQL and parameters\nmsg.params = [dformat, prblem, ident, action, note, brk_time];\n\n// For debug\nnode.warn(\"Sending query with values: \" + JSON.stringify(msg.payload));\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 740,
        "wires": [
            [
                "f206cc187cec641d"
            ]
        ]
    },
    {
        "id": "7a5b2938db6727f5",
        "type": "debug",
        "z": "b3922748f6dbb361",
        "name": "debug 34",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 920,
        "wires": []
    },
    {
        "id": "791e68608cf89c80",
        "type": "function",
        "z": "b3922748f6dbb361",
        "name": "function 165",
        "func": "// Check if rowsAffected exists and is an array\nif (msg.payload && msg.payload.rowsAffected && Array.isArray(msg.payload.rowsAffected)) {\n    var rows = msg.payload.rowsAffected[0];  // Get the first value\n\n    if (rows > 0) {\n        msg.payload = \"✅ Insert Successful. Rows affected: \" + rows;\n    } else {\n        msg.payload = \"⚠️ Insert executed, but no rows affected.\";\n    }\n} else {\n    msg.payload = \"❌ No valid rowsAffected info in response.\";\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 900,
        "wires": [
            [
                "7a5b2938db6727f5"
            ]
        ]
    },
    {
        "id": "cc12991ef0c5ae18",
        "type": "debug",
        "z": "b3922748f6dbb361",
        "name": "debug 35",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 860,
        "wires": []
    },
    {
        "id": "348b3fcee748f1a3",
        "type": "function",
        "z": "a09542284723710b",
        "name": "Function",
        "func": "var ontime = flow.get(\"set_date_on_1\")\n//var ontime_1 = flow.get(\"set_time_on\")\nvar offtime = flow.get(\"set_date_off_1\")\nvar db = global.get(\"drop\")\n//var offtime_1 = flow.get(\"set_time_off\")\n//var ondate = ontime + \" \" + ontime_1;\n//var offdate = offtime + \" \" + offtime_1;\nvar pld = \"SELECT TIME,PROBLEM,AREA,ACTION,FREQUENT,LOSS \" //NO_LOAD,TOTAL_DOWN_TIME \"\n\n//var pld =       \"SELECT ID, Topic, Payload, Timestamp \"\npld = pld + \"FROM [Furnace].[dbo].\"\npld = pld+db\npld = pld + \" WHERE TIME BETWEEN '\" + ontime + \" ' AND ' \" + offtime + \"' ORDER BY TIME \";\n//pld = pld + \"WHERE ID = 1 \"  \n\n//pld = pld + \"VALUES ('\" + gk + \"','\" + dformat + \"')\"\nmsg.payload = pld\nreturn msg;\n\n\n\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 380,
        "wires": [
            [
                "d1c2af447633c7c6"
            ]
        ]
    },
    {
        "id": "d1c2af447633c7c6",
        "type": "MSSQL",
        "z": "a09542284723710b",
        "mssqlCN": "489ecfa5c218484f",
        "name": "MSSQL",
        "query": "",
        "outField": "payload",
        "x": 1300,
        "y": 440,
        "wires": [
            [
                "0f4c484c8d7726dc"
            ]
        ]
    },
    {
        "id": "c993d980d343a7b0",
        "type": "change",
        "z": "a09542284723710b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "set_date_on_1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "set_date_on_1",
                "pt": "global",
                "to": "payload",
                "tot": "global",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "704185df53bae10f",
        "type": "change",
        "z": "a09542284723710b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "set_date_off_1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "set_date_off_1",
                "pt": "global",
                "to": "payload",
                "tot": "global",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "0f4c484c8d7726dc",
        "type": "ui_table",
        "z": "a09542284723710b",
        "group": "3b44ddbf801a390b",
        "name": "",
        "order": 14,
        "width": 20,
        "height": 13,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 1450,
        "y": 440,
        "wires": []
    },
    {
        "id": "b340d7e086a9dc3c",
        "type": "ui_text_input",
        "z": "a09542284723710b",
        "name": "",
        "label": "FROM DATE/TIME",
        "tooltip": "",
        "group": "3b44ddbf801a390b",
        "order": 4,
        "width": 5,
        "height": 1,
        "passthru": true,
        "mode": "datetime-local",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 190,
        "y": 500,
        "wires": [
            [
                "e2251fa00c6ad849"
            ]
        ]
    },
    {
        "id": "65787f5550e77b1b",
        "type": "ui_text_input",
        "z": "a09542284723710b",
        "name": "",
        "label": "TO DATE/TIME",
        "tooltip": "",
        "group": "3b44ddbf801a390b",
        "order": 6,
        "width": 5,
        "height": 1,
        "passthru": true,
        "mode": "datetime-local",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 200,
        "y": 540,
        "wires": [
            [
                "5478fb24c7fdc3fe"
            ]
        ]
    },
    {
        "id": "cb55d8d8437fe868",
        "type": "ui_dropdown",
        "z": "a09542284723710b",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "3b44ddbf801a390b",
        "order": 2,
        "width": 5,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "BREAKDOWN HISTORY",
                "value": " break_down_history",
                "type": "str"
            },
            {
                "label": "DAILY REJECTION HISTORY",
                "value": " QT_DAILY_REJECTION_HISTORY",
                "type": "str"
            },
            {
                "label": "DAILY PRODUCTION",
                "value": " MC_DAILY_PRODUCTION_2",
                "type": "str"
            },
            {
                "label": "TOOL LIFE",
                "value": "tool_life",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 660,
        "y": 280,
        "wires": [
            [
                "6e39effbfd051b4d"
            ]
        ]
    },
    {
        "id": "6e39effbfd051b4d",
        "type": "function",
        "z": "a09542284723710b",
        "name": "function 27",
        "func": "var drop = msg.payload;\nglobal.set(\"drop\",drop)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "c459cfd148ae8760",
        "type": "inject",
        "z": "a09542284723710b",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 470,
        "y": 280,
        "wires": [
            [
                "cb55d8d8437fe868"
            ]
        ]
    },
    {
        "id": "c883b6aa780edc5b",
        "type": "function",
        "z": "a09542284723710b",
        "name": "function 29",
        "func": "var m = global.get(\"drop\");\n\nif (m == \"break_down_history \") {\n    // check if the user has access to execute this function\n\n    return [msg, null];\n\n\n} else {\n    return [null, msg];\n}\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 100,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "c50162b2c9da4bef",
        "type": "function",
        "z": "a09542284723710b",
        "name": "Function",
        "func": "var ontime = flow.get(\"set_date_on_1\")\n//var ontime_1 = flow.get(\"set_time_on\")\nvar offtime = flow.get(\"set_date_off_1\")\nvar db = global.get(\"drop\")\n//var offtime_1 = flow.get(\"set_time_off\")\n//var ondate = ontime + \" \" + ontime_1;\n//var offdate = offtime + \" \" + offtime_1;\nvar pld = \"SELECT TIME,MACHINE_NAME,MODEL_NAME,OPERATOR_NAME,INSPECTOR_NAME,LEAF_NO,SECTION,WEIGHT,QTY,TOTAL_WEIGHT,DEFECT \" //NO_LOAD,TOTAL_DOWN_TIME \"\n\n//var pld =       \"SELECT ID, Topic, Payload, Timestamp \"\npld = pld + \"FROM [node_red].[dbo].\"\npld = pld+db\npld = pld + \" WHERE TIME BETWEEN '\" + ontime + \" ' AND ' \" + offtime + \"' ORDER BY TIME \";\n//pld = pld + \"WHERE ID = 1 \"  \n\n//pld = pld + \"VALUES ('\" + gk + \"','\" + dformat + \"')\"\nmsg.payload = pld\nreturn msg;\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 420,
        "wires": [
            [
                "d1c2af447633c7c6"
            ]
        ]
    },
    {
        "id": "26dfd8984a4ceda1",
        "type": "function",
        "z": "a09542284723710b",
        "name": "function 30",
        "func": "var m = global.get(\"drop\");\n\nif (m == \"QT_DAILY_REJECTION_HISTORY \") {\n    // check if the user has access to execute this function\n\n    return [msg, null];\n\n\n} else {\n    return [null, msg];\n}\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 180,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "4c57c0a719893d1b",
        "type": "ui_button",
        "z": "a09542284723710b",
        "name": "",
        "group": "3b44ddbf801a390b",
        "order": 9,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "ENTER",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "TRUE",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 600,
        "y": 380,
        "wires": [
            [
                "7c2e594e91fe7438",
                "68ef2876ae5394aa",
                "184aef923391a06b",
                "d718f298fc0a021e"
            ]
        ]
    },
    {
        "id": "899b424f7b114981",
        "type": "ui_button",
        "z": "a09542284723710b",
        "name": "",
        "group": "3b44ddbf801a390b",
        "order": 11,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "EXPORT TO Excel",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "TRUE",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1010,
        "y": 600,
        "wires": [
            [
                "ed6171c6e82a489c"
            ]
        ]
    },
    {
        "id": "36800afb7de23d45",
        "type": "function",
        "z": "a09542284723710b",
        "name": "function 53",
        "func": "var m = global.get(\"drop\");\n\nif (m == \"MC_DAILY_PRODUCTION_1\") {\n    // check if the user has access to execute this function\n\n    return [msg, null];\n\n\n} else {\n    return [null, msg];\n}\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 220,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "d125f66974a0a57c",
        "type": "function",
        "z": "a09542284723710b",
        "name": "Function",
        "func": "var ontime = flow.get(\"set_date_on_1\")\n//var ontime_1 = flow.get(\"set_time_on\")\nvar offtime = flow.get(\"set_date_off_1\")\nvar db = global.get(\"drop\")\n//var offtime_1 = flow.get(\"set_time_off\")\n//var ondate = ontime + \" \" + ontime_1;\n//var offdate = offtime + \" \" + offtime_1;\nvar pld = \"SELECT DATE,PRODUCT_NAME,PRODUCT_QTY,PRODUCTION_COUNT,PRODUCTION_PLAN_TIME,MACHINE_CYCLE_TIME,ACTUAL_OEE,OPERATOR_NAME \" //NO_LOAD,TOTAL_DOWN_TIME \"\n\n//var pld =       \"SELECT ID, Topic, Payload, Timestamp \"\npld = pld + \"FROM [node_red].[dbo].\"\npld = pld+db\npld = pld + \" WHERE DATE BETWEEN '\" + ontime + \" ' AND ' \" + offtime + \"' ORDER BY DATE\";\n//pld = pld + \"WHERE ID = 1 \"  \n\n//pld = pld + \"VALUES ('\" + gk + \"','\" + dformat + \"')\"\nmsg.payload = pld\nreturn msg;\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 460,
        "wires": [
            [
                "d1c2af447633c7c6"
            ]
        ]
    },
    {
        "id": "dbb452e56c764246",
        "type": "http response",
        "z": "a09542284723710b",
        "name": "",
        "statusCode": "200",
        "headers": {
            "Content-Disposition": "attachment; filename=\"example.csv\"",
            "content-type": "text/csv"
        },
        "x": 1980,
        "y": 860,
        "wires": []
    },
    {
        "id": "e2251fa00c6ad849",
        "type": "moment",
        "z": "a09542284723710b",
        "name": "",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "Asia/Calcutta",
        "adjAmount": 0,
        "adjType": "years",
        "adjDir": "subtract",
        "format": "",
        "locale": "en-US",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Asia/Calcutta",
        "x": 400,
        "y": 440,
        "wires": [
            [
                "c993d980d343a7b0"
            ]
        ]
    },
    {
        "id": "5478fb24c7fdc3fe",
        "type": "moment",
        "z": "a09542284723710b",
        "name": "",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "Asia/Calcutta",
        "adjAmount": 0,
        "adjType": "years",
        "adjDir": "subtract",
        "format": "",
        "locale": "en-US",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Asia/Calcutta",
        "x": 400,
        "y": 500,
        "wires": [
            [
                "704185df53bae10f"
            ]
        ]
    },
    {
        "id": "ed6171c6e82a489c",
        "type": "function",
        "z": "a09542284723710b",
        "name": "Construct Filter",
        "func": "// get filter obj\nconst filter = flow.get(\"filter\");\n\n// define payload\nmsg.payload = {\n    command: \"download\",\n    arguments: [\"csv\", \"data.csv\" \n        \n    ]\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 600,
        "wires": [
            [
                "0f4c484c8d7726dc"
            ]
        ]
    },
    {
        "id": "7c2e594e91fe7438",
        "type": "switch",
        "z": "a09542284723710b",
        "name": "",
        "property": "drop",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": " break_down_history",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 890,
        "y": 380,
        "wires": [
            [
                "348b3fcee748f1a3"
            ]
        ]
    },
    {
        "id": "68ef2876ae5394aa",
        "type": "switch",
        "z": "a09542284723710b",
        "name": "",
        "property": "drop",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": " QT_DAILY_REJECTION_HISTORY",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 890,
        "y": 420,
        "wires": [
            [
                "c50162b2c9da4bef"
            ]
        ]
    },
    {
        "id": "184aef923391a06b",
        "type": "switch",
        "z": "a09542284723710b",
        "name": "",
        "property": "drop",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": " MC_DAILY_PRODUCTION_2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 890,
        "y": 460,
        "wires": [
            [
                "d125f66974a0a57c"
            ]
        ]
    },
    {
        "id": "d718f298fc0a021e",
        "type": "switch",
        "z": "a09542284723710b",
        "name": "",
        "property": "drop",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "tool_life",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 890,
        "y": 500,
        "wires": [
            [
                "953b94336854d071"
            ]
        ]
    },
    {
        "id": "953b94336854d071",
        "type": "function",
        "z": "a09542284723710b",
        "name": "Function",
        "func": "var ontime = flow.get(\"set_date_on_1\")\n//var ontime_1 = flow.get(\"set_time_on\")\nvar offtime = flow.get(\"set_date_off_1\")\nvar db = global.get(\"drop\")\n//var offtime_1 = flow.get(\"set_time_off\")\n//var ondate = ontime + \" \" + ontime_1;\n//var offdate = offtime + \" \" + offtime_1;\nvar pld = \"SELECT DATE,PUNCHING_BUSH,FORMING_LOADER_FINGER,FORMING_UNLOADER_FINGER_SPRING,FORMING_UNLOADER_FINGER,QUENCHING_LOADER_FINGER,QUENCHING_UNLOADER_FINGER,QUENCHING_UNLOADER_SPRING_PLATE,TEMPERING_LOADER_FINGER,TEMPERING_LOADER_SPRING_PLATE,STRAIGHTING_PLATE \" //NO_LOAD,TOTAL_DOWN_TIME \"\n\n//var pld =       \"SELECT ID, Topic, Payload, Timestamp \"\npld = pld + \"FROM [node_red].[dbo].\"\npld = pld+db\npld = pld + \" WHERE DATE BETWEEN '\" + ontime + \" ' AND ' \" + offtime + \"' ORDER BY DATE\";\n//pld = pld + \"WHERE ID = 1 \"  \n\n//pld = pld + \"VALUES ('\" + gk + \"','\" + dformat + \"')\"\nmsg.payload = pld\nreturn msg;\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 500,
        "wires": [
            [
                "d1c2af447633c7c6"
            ]
        ]
    },
    {
        "id": "6db563788e146ed3",
        "type": "ui_text",
        "z": "050fb431a7ca83a4",
        "group": "5ada3ed2f7f6c736",
        "order": 4,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "ENTER OPERATOR NAME :",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 580,
        "y": 240,
        "wires": []
    },
    {
        "id": "a52df5fd5f219458",
        "type": "ui_text_input",
        "z": "050fb431a7ca83a4",
        "name": "",
        "label": ".",
        "tooltip": "",
        "group": "5ada3ed2f7f6c736",
        "order": 6,
        "width": 7,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "D104",
        "sendOnBlur": false,
        "className": "",
        "topicType": "flow",
        "x": 650,
        "y": 340,
        "wires": [
            [
                "651c45c2df33cd9a"
            ]
        ]
    },
    {
        "id": "d2f7bd8577f35262",
        "type": "function",
        "z": "050fb431a7ca83a4",
        "name": "ENTER TOTAL PRODUCTION TIME ",
        "func": "var production_time = 1440;\nglobal.set(\"production_time\", production_time);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "651c45c2df33cd9a",
        "type": "function",
        "z": "050fb431a7ca83a4",
        "name": "ENTER OPERATOR NAME",
        "func": "var op_name = msg.payload;\nglobal.set(\"op_name\", op_name);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "80a1b0d162735876",
        "type": "function",
        "z": "050fb431a7ca83a4",
        "name": "ENTER RUNNING PRODUCT",
        "func": "var run_prod = msg.payload;\nglobal.set(\"run_prod\", run_prod);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "dd8bca51b9fdb846",
        "type": "inject",
        "z": "050fb431a7ca83a4",
        "name": "",
        "props": [],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "x": 390,
        "y": 340,
        "wires": [
            [
                "975a8d9eaaaf3cb0",
                "d2f7bd8577f35262"
            ]
        ]
    },
    {
        "id": "1e6048997414ea5b",
        "type": "function",
        "z": "050fb431a7ca83a4",
        "name": "ENTER RUNNING PRODUCT QTY(NO'S)",
        "func": "var run_prod_qty = msg.payload;\nglobal.set(\"run_prod_qty\", run_prod_qty);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "d0819425fbb95bab",
        "type": "inject",
        "z": "050fb431a7ca83a4",
        "name": "",
        "props": [],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 570,
        "y": 660,
        "wires": [
            [
                "c6a26aa56be4884f"
            ]
        ]
    },
    {
        "id": "a7c18b2ed3f43808",
        "type": "function",
        "z": "050fb431a7ca83a4",
        "name": "COUNTER",
        "func": "var performance_time = global.get(\"performance_time\") || 0\nperformance_time++\nglobal.set(\"performance_time\", performance_time)\nmsg.payload = performance_time\nreturn msg;\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 755,
        "y": 660,
        "wires": [
            []
        ],
        "icon": "font-awesome/fa-wrench",
        "l": false
    },
    {
        "id": "c6a26aa56be4884f",
        "type": "function",
        "z": "050fb431a7ca83a4",
        "name": "function 35",
        "func": "var m = global.get(\"performance_time_start\");\n//var m1 = global.get(\"tool1_life_set\");\n\nif (m == \"TRUE\") {\n    // check if the user has access to execute this function\n\n    return [msg, null];\n\n\n} else {\n    return [null, msg];\n}\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 655,
        "y": 660,
        "wires": [
            [
                "2131c5d01fe607d5"
            ],
            []
        ],
        "icon": "font-awesome/fa-wrench",
        "l": false
    },
    {
        "id": "6681c659563e0450",
        "type": "function",
        "z": "050fb431a7ca83a4",
        "name": "function 36",
        "func": "var m = global.get(\"product_check_comp\");\nvar m1 = global.get(\"prodcut_name_pmc\");\nif (m1 != m) {\n    // check if the user has access to execute this function\n\n    return [msg, null];\n} else {\n    return [null, msg];\n}\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 880,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "47c61838ee77decc",
        "type": "function",
        "z": "050fb431a7ca83a4",
        "name": "Function",
        "func": "var pld = \"SELECT PERFORMANCE,RUNNING_PRODUCT \" //NO_LOAD,TOTAL_DOWN_TIME \"\n\n//var pld =       \"SELECT ID, Topic, Payload, Timestamp \"\npld = pld + \"FROM [node_red].[dbo].[record_1] \"\n\n//pld = pld + \"WHERE TIME = '\" + ontime + \" ' \";\n//pld = pld + \"WHERE TIME BETWEEN '\" + ontime + \" ' AND ' \" + offtime + \"' ORDER BY TIME \";\npld = pld + \"WHERE ID = 1 \";  \n\n//pld = pld + \"VALUES ('\" + gk + \"','\" + dformat + \"')\"\nmsg.payload = pld\nreturn msg;\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 755,
        "y": 840,
        "wires": [
            [
                "399d6cb98203bd94"
            ]
        ],
        "icon": "font-awesome/fa-wrench",
        "l": false
    },
    {
        "id": "399d6cb98203bd94",
        "type": "MSSQL",
        "z": "050fb431a7ca83a4",
        "mssqlCN": "76839cf0e528d185",
        "name": "MSSQL",
        "query": "",
        "outField": "payload",
        "x": 805,
        "y": 840,
        "wires": [
            [
                "23433c478b9dafe0"
            ]
        ],
        "icon": "node-red/leveldb.png",
        "l": false
    },
    {
        "id": "7e5cb34c7f0e8a01",
        "type": "delay",
        "z": "050fb431a7ca83a4",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 960,
        "y": 840,
        "wires": [
            [
                "730cc99395b32841"
            ]
        ]
    },
    {
        "id": "035e34a8ca775d41",
        "type": "function",
        "z": "050fb431a7ca83a4",
        "name": "MACHINE_STATUS",
        "func": "var m = global.get(\"MC_STATU\");\n//var m1 = global.get(\"tool1_life_set\");\n\nif (m == false) {\n    // check if the user has access to execute this function\n\n    return [msg, null];\n\n\n} else {\n    return [null, msg];\n}\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 800,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "23433c478b9dafe0",
        "type": "function",
        "z": "050fb431a7ca83a4",
        "name": "function 37",
        "func": "var perfor = msg.payload[0].PERFORMANCE.toFixed(1);\nvar running_product_1 = msg.payload[0].RUNNING_PRODUCT\n//var perfor_time = global.get(\"performance_time\");\nvar production_count = global.get(\"individual_counter\");\nvar cycl_time = global.get(\"CY_TIM\");\nvar total_time = global.get(\"production_time\")\nvar actual_oee = (((production_count / (60 / cycl_time))/ total_time)*100).toFixed(1);\n//var data = (actual_time / perfor_time);\nvar final_performance_1 =+ perfor;\nvar final_performance_2 = + actual_oee;\nvar final_performance = (final_performance_1 + final_performance_2).toFixed(1)\nvar running_product_2 =+ running_product_1\nvar running_product = (running_product_2+1)\nmsg.payload = actual_oee\nglobal.set(\"actual_oee\", actual_oee)\nglobal.set(\"final_performance\", final_performance)\nglobal.set(\"running_product\", running_product)\nglobal.set(\"performance_time_start\", \"FALSE\")\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 855,
        "y": 840,
        "wires": [
            [
                "7e5cb34c7f0e8a01"
            ]
        ],
        "icon": "font-awesome/fa-wrench",
        "l": false
    },
    {
        "id": "730cc99395b32841",
        "type": "function",
        "z": "050fb431a7ca83a4",
        "name": "Function",
        "func": "\n//\"UPDATE [node_red].[dbo].[mytable] \"\nvar count = global.get(\"full_day_counter\");\nvar prod_time = global.get(\"production_time\");\nvar perform = global.get(\"final_performance\");\nvar running_p1 = global.get(\"running_product\");\n//var dtstmp = new Date().toString();\nvar pld = \"UPDATE [node_red].[dbo].[record_1] \"      \npld = pld + \"SET TOTAL_COUNT = '\" + count + \"' ,PRODUCTION_TIME = '\" + prod_time + \"',PERFORMANCE = '\" + perform + \"',RUNNING_PRODUCT = '\" + running_p1 + \"'\"\n\npld = pld + \"WHERE ID = 1\"\n\nmsg.payload = pld\nglobal.set(\"performance_time\", 0)             \nreturn msg;\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1055,
        "y": 840,
        "wires": [
            [
                "c182615adf49d47d"
            ]
        ],
        "icon": "font-awesome/fa-wrench",
        "l": false
    },
    {
        "id": "c182615adf49d47d",
        "type": "MSSQL",
        "z": "050fb431a7ca83a4",
        "mssqlCN": "76839cf0e528d185",
        "name": "MSSQL",
        "query": "",
        "outField": "payload",
        "x": 1105,
        "y": 840,
        "wires": [
            [
                "2bc2bc1611b8e574"
            ]
        ],
        "icon": "node-red/redis.png",
        "l": false
    },
    {
        "id": "78c7ad3c6a312560",
        "type": "function",
        "z": "050fb431a7ca83a4",
        "name": "function 40",
        "func": "msg.payload = global.get(\"performance_time_start\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "0c38a1766f2dc82c",
        "type": "function",
        "z": "050fb431a7ca83a4",
        "name": "function 41",
        "func": "var performance_time_start = msg.payload\nglobal.set(\"performance_time_start\", performance_time_start)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 960,
        "wires": [
            [
                "78c7ad3c6a312560"
            ]
        ]
    },
    {
        "id": "af21f2a9600aa01d",
        "type": "ui_text",
        "z": "050fb431a7ca83a4",
        "group": "9bf1214e14e2a61a",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "ENTER QUALITY INSPECTOR NAME :",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 580,
        "y": 1160,
        "wires": []
    },
    {
        "id": "7c34e753ada1c8cf",
        "type": "ui_text_input",
        "z": "050fb431a7ca83a4",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "9bf1214e14e2a61a",
        "order": 3,
        "width": 6,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "payload",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 500,
        "y": 1200,
        "wires": [
            [
                "d40b7b450bb8448f"
            ]
        ]
    },
    {
        "id": "856f08fabfdbcef7",
        "type": "ui_text",
        "z": "050fb431a7ca83a4",
        "group": "9bf1214e14e2a61a",
        "order": 5,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "ENTER TODAY NUMBER OF PART REJECT :",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 580,
        "y": 1240,
        "wires": []
    },
    {
        "id": "fc281f5b730400ab",
        "type": "ui_text_input",
        "z": "050fb431a7ca83a4",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "9bf1214e14e2a61a",
        "order": 7,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "payload",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 500,
        "y": 1280,
        "wires": [
            [
                "f62d7e6315b82f8c"
            ]
        ]
    },
    {
        "id": "271d218e312e6b5e",
        "type": "comment",
        "z": "050fb431a7ca83a4",
        "name": "MC# Q.C",
        "info": "",
        "x": 480,
        "y": 1120,
        "wires": []
    },
    {
        "id": "d40b7b450bb8448f",
        "type": "function",
        "z": "050fb431a7ca83a4",
        "name": "ENTER QUALITY INSPECTOR NAME",
        "func": "var qt_opr_name = msg.payload;\nglobal.set(\"qt_opr_name\", qt_opr_name);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "f62d7e6315b82f8c",
        "type": "function",
        "z": "050fb431a7ca83a4",
        "name": "ENTER TODAY NUMBER OF PART REJECT",
        "func": "var rejt_part = msg.payload;\nglobal.set(\"rejt_part\", rejt_part);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "2bc2bc1611b8e574",
        "type": "delay",
        "z": "050fb431a7ca83a4",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1200,
        "y": 840,
        "wires": [
            [
                "7d54b886a08d8d75"
            ]
        ]
    },
    {
        "id": "7d54b886a08d8d75",
        "type": "function",
        "z": "050fb431a7ca83a4",
        "name": "Function",
        "func": "var dformat = global.get(\"pervious_date\");\n//\"UPDATE [node_red].[dbo].[mytable] \"\nvar oper_name = global.get(\"op_name\");\nvar plan_product_time = global.get(\"production_time\");\nvar running_product_name = global.get(\"product_check_comp\");\nvar plan_product_qty = global.get(\"run_prod_qty\");\nvar actual_oe = global.get(\"actual_oee\");\nvar cyl_count = global.get(\"individual_counter\");\nvar cycl_time = global.get(\"CY_TIM\");\nvar dtstmp = new Date().toString();\nvar pld = \"INSERT INTO[node_red].[dbo].[MC_DAILY_PRODUCTION_1](DATE,PRODUCT_NAME,PRODUCT_QTY,PRODUCTION_COUNT,PRODUCTION_PLAN_TIME,MACHINE_CYCLE_TIME,ACTUAL_OEE,OPERATOR_NAME)\"      \npld = pld + \"VALUES ('\" + dformat + \"','\" + running_product_name + \"','\" + cyl_count + \"','\" + cyl_count + \"','\" + plan_product_time + \"', '\" + cycl_time + \"','\" + actual_oe + \"','\" + oper_name + \"')\"\n\n//pld = pld + \"SET Timestamp = '\" + dformat + \"' \"\n\n//pld = pld + \"WHERE id = 1\"\n\nmsg.payload = pld\nreturn msg;\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1295,
        "y": 840,
        "wires": [
            [
                "0fc795ea8b16af31"
            ]
        ],
        "icon": "font-awesome/fa-wrench",
        "l": false
    },
    {
        "id": "0fc795ea8b16af31",
        "type": "MSSQL",
        "z": "050fb431a7ca83a4",
        "mssqlCN": "76839cf0e528d185",
        "name": "MSSQL",
        "query": "",
        "outField": "payload",
        "x": 1345,
        "y": 840,
        "wires": [
            [
                "9cdcf1dd9ee5fea7"
            ]
        ],
        "icon": "node-red/leveldb.png",
        "l": false
    },
    {
        "id": "975a8d9eaaaf3cb0",
        "type": "function",
        "z": "050fb431a7ca83a4",
        "name": "function 77",
        "func": "var prodct_name = global.get(\"prodcut_name_pmc\");\nmsg.payload = prodct_name\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "2131c5d01fe607d5",
        "type": "function",
        "z": "050fb431a7ca83a4",
        "name": "function 81",
        "func": "var m = global.get(\"product_check_comp\");\nvar m1 = global.get(\"prodcut_name_pmc\");\n\nif (m1 == m) {\n    // check if the user has access to execute this function\n\n    return [msg, null];\n\n\n} else {\n    return [null, msg];\n}\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 705,
        "y": 660,
        "wires": [
            [
                "a7c18b2ed3f43808"
            ],
            []
        ],
        "icon": "font-awesome/fa-wrench",
        "l": false
    },
    {
        "id": "5d0d9fecb659aade",
        "type": "function",
        "z": "050fb431a7ca83a4",
        "name": "done_status",
        "func": "var dailyprdt_data_wrte_dne = 1;\nglobal.set(\"dailyprdt_data_wrte_dne\", dailyprdt_data_wrte_dne)\nvar product_check_123 = global.get(\"prodcut_name_pmc\");\nglobal.set(\"product_check_comp\", product_check_123)\nglobal.set(\"machine_data_update\", 1)\nglobal.set(\"bypass_deldata\",0)\nglobal.set(\"machine_counter_reset_1\", 1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1625,
        "y": 840,
        "wires": [
            []
        ],
        "icon": "font-awesome/fa-wrench",
        "l": false
    },
    {
        "id": "570883e36e600e1a",
        "type": "function",
        "z": "050fb431a7ca83a4",
        "name": "function 83",
        "func": "var m = global.get(\"dailyprdt_data_wrte_dne\");\n//var m1 = global.get(\"tool1_life_set\");\n\nif (m == 0) {\n    // check if the user has access to execute this function\n\n    return [msg, null];\n\n\n} else {\n    return [null, msg];\n}\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 800,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "82b3d337ae4059db",
        "type": "function",
        "z": "050fb431a7ca83a4",
        "name": "done_status_1",
        "func": "var product_check_123 = global.get(\"prodcut_name_pmc\");\nglobal.set(\"product_check_comp\", product_check_123)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2560,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "71c3347cdc2066a0",
        "type": "comment",
        "z": "050fb431a7ca83a4",
        "name": "MC# LOSS",
        "info": "",
        "x": 910,
        "y": 1540,
        "wires": []
    },
    {
        "id": "70b76eef1815e9b6",
        "type": "ui_numeric",
        "z": "050fb431a7ca83a4",
        "name": "",
        "label": "BREAKDOWN LOSS ENTERY in Min.",
        "tooltip": "",
        "group": "6a7ea06136783db3",
        "order": 4,
        "width": 10,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "10000",
        "step": 1,
        "className": "",
        "x": 770,
        "y": 2020,
        "wires": [
            [
                "7fcf9556dd8ef76b"
            ]
        ]
    },
    {
        "id": "7fcf9556dd8ef76b",
        "type": "function",
        "z": "050fb431a7ca83a4",
        "name": "function 113",
        "func": "var total_prd_time = global.get(\"production_time\")\nvar bd_loss = msg.payload\nvar bd_loss_1 = (bd_loss * 100 / total_prd_time).toFixed(1)\nglobal.set(\"bd_loss_1\", bd_loss_1);\nglobal.set(\"bd_loss_2\", bd_loss)\nmsg.payload = bd_loss_1\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 2020,
        "wires": [
            []
        ]
    },
    {
        "id": "f6630e8a294ff3af",
        "type": "ui_numeric",
        "z": "050fb431a7ca83a4",
        "name": "",
        "label": "POWER LOSS ENTERY in Min.",
        "tooltip": "",
        "group": "6a7ea06136783db3",
        "order": 7,
        "width": 10,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "10000",
        "step": 1,
        "className": "",
        "x": 750,
        "y": 1980,
        "wires": [
            [
                "3cbedbd8ba9a4d20"
            ]
        ]
    },
    {
        "id": "3cbedbd8ba9a4d20",
        "type": "function",
        "z": "050fb431a7ca83a4",
        "name": "function 114",
        "func": "var total_prd_time = global.get(\"production_time\")\nvar power_loss = msg.payload\nvar power_loss_1 = (power_loss * 100 / total_prd_time).toFixed(1)\nglobal.set(\"power_loss_1\", power_loss_1);\nglobal.set(\"power_loss_2\", power_loss)\nmsg.payload = power_loss_1\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1980,
        "wires": [
            []
        ]
    },
    {
        "id": "ac9f0b3da1a4e590",
        "type": "ui_numeric",
        "z": "050fb431a7ca83a4",
        "name": "",
        "label": "QUALITY LOSS ENTERY in Min.",
        "tooltip": "",
        "group": "6a7ea06136783db3",
        "order": 6,
        "width": 10,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "10000",
        "step": 1,
        "className": "",
        "x": 800,
        "y": 1660,
        "wires": [
            [
                "70fc3ef0706ae8c0"
            ]
        ]
    },
    {
        "id": "70fc3ef0706ae8c0",
        "type": "function",
        "z": "050fb431a7ca83a4",
        "name": "function 115",
        "func": "var total_prd_time = global.get(\"production_time\")\nvar qualt_loss = msg.payload\nvar qualt_loss_1 = (qualt_loss * 100 / total_prd_time).toFixed(1)\nglobal.set(\"qualt_loss_1\", qualt_loss_1);\nglobal.set(\"qualt_loss_2\", qualt_loss)\nmsg.payload = qualt_loss_1\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "bf177fd560bafb32",
        "type": "function",
        "z": "050fb431a7ca83a4",
        "name": "total_organization",
        "func": "var no_load = global.get(\"noload_loss_1\")\nvar sample_run = global.get(\"nosample_loss_1\")\nvar no_manpower = global.get(\"nomanpower_loss_1\")\nvar no_lifter = global.get(\"nolifter_loss_1\")\n\nvar orginat_loss_1 = no_load + sample_run + no_manpower + no_lifter\nvar orginat_loss = orginat_loss_1\n//var orginat_loss_1 = (orginat_loss*100/1300).toFixed(1)\nglobal.set(\"orginat_loss_1\", orginat_loss_1);\nglobal.set(\"orginat_loss_2\", orginat_loss)\nmsg.payload = orginat_loss_1\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 1800,
        "wires": [
            []
        ]
    },
    {
        "id": "e1c5162e44ec72ab",
        "type": "ui_numeric",
        "z": "050fb431a7ca83a4",
        "name": "",
        "label": "SETUP LOSS ENTERY in Min.",
        "tooltip": "",
        "group": "6a7ea06136783db3",
        "order": 9,
        "width": 10,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "10000",
        "step": 1,
        "className": "",
        "x": 750,
        "y": 1900,
        "wires": [
            [
                "9dfd8b39943fb1e8"
            ]
        ]
    },
    {
        "id": "9dfd8b39943fb1e8",
        "type": "function",
        "z": "050fb431a7ca83a4",
        "name": "function 117",
        "func": "var total_prd_time = global.get(\"production_time\")\nvar setup_loss = msg.payload\nvar setup_loss_1 = (setup_loss * 100 / total_prd_time).toFixed(1)\nglobal.set(\"setup_loss_1\", setup_loss_1);\nglobal.set(\"setup_loss_2\", setup_loss)\nmsg.payload = setup_loss_1\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1900,
        "wires": [
            []
        ]
    },
    {
        "id": "4f8e4bd2c8fd3505",
        "type": "ui_numeric",
        "z": "050fb431a7ca83a4",
        "name": "",
        "label": "NOLOAD LOSS ENTERY in Min.",
        "tooltip": "",
        "group": "6a7ea06136783db3",
        "order": 10,
        "width": 10,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "10000",
        "step": 1,
        "className": "",
        "x": 800,
        "y": 1740,
        "wires": [
            [
                "4a57cec1113aa58d"
            ]
        ]
    },
    {
        "id": "4a57cec1113aa58d",
        "type": "function",
        "z": "050fb431a7ca83a4",
        "name": "function 118",
        "func": "var total_prd_time = global.get(\"production_time\")\nvar noload_loss = msg.payload\nvar noload_loss_1 = (noload_loss * 100 / total_prd_time).toFixed(1)\nglobal.set(\"noload_loss_1\", noload_loss_1);\nglobal.set(\"noload_loss_2\", noload_loss)\nmsg.payload = noload_loss_1\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1740,
        "wires": [
            [
                "bf177fd560bafb32"
            ]
        ]
    },
    {
        "id": "8d52617d6d99f146",
        "type": "function",
        "z": "050fb431a7ca83a4",
        "name": "Function",
        "func": "var d = new Date,\n    dformat = [d.getMonth() + 1,\n    d.getDate(),\n    d.getFullYear()].join('/') + ' ' +\n        [d.getHours(),\n        d.getMinutes(),\n        d.getSeconds()].join(':');\n//var dformat = global.get(\"pervious_date\");\n//\"UPDATE [node_red].[dbo].[mytable] \"\nvar oper_name = global.get(\"op_name\");\nvar plan_product_time = global.get(\"production_time\");\nvar running_product_name = global.get(\"product_check_comp\");\nvar plan_product_qty = global.get(\"run_prod_qty\");\nvar actual_oe = global.get(\"actual_oee\");\nvar cyl_count = global.get(\"individual_counter\");\nvar cycl_time = global.get(\"CY_TIM\");\nvar dtstmp = new Date().toString();\nvar pld = \"INSERT INTO[node_red].[dbo].[MC_DAILY_PRODUCTION_2](DATE,PRODUCT_NAME,PRODUCT_QTY,PRODUCTION_COUNT,PRODUCTION_PLAN_TIME,MACHINE_CYCLE_TIME,ACTUAL_OEE,OPERATOR_NAME)\"      \npld = pld + \"VALUES ('\" + dformat + \"','\" + running_product_name + \"','\" + cyl_count + \"','\" + cyl_count + \"','\" + plan_product_time + \"', '\" + cycl_time + \"','\" + actual_oe + \"','\" + oper_name + \"')\"\n\n//pld = pld + \"SET Timestamp = '\" + dformat + \"' \"\n\n//pld = pld + \"WHERE id = 1\"\n\nmsg.payload = pld\nreturn msg;\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1525,
        "y": 840,
        "wires": [
            [
                "dd94ce8b47a1270b"
            ]
        ],
        "icon": "font-awesome/fa-wrench",
        "l": false
    },
    {
        "id": "dd94ce8b47a1270b",
        "type": "MSSQL",
        "z": "050fb431a7ca83a4",
        "mssqlCN": "76839cf0e528d185",
        "name": "MSSQL",
        "query": "",
        "outField": "payload",
        "x": 1575,
        "y": 840,
        "wires": [
            [
                "5d0d9fecb659aade"
            ]
        ],
        "icon": "node-red/leveldb.png",
        "l": false
    },
    {
        "id": "9cdcf1dd9ee5fea7",
        "type": "delay",
        "z": "050fb431a7ca83a4",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1440,
        "y": 840,
        "wires": [
            [
                "8d52617d6d99f146"
            ]
        ]
    },
    {
        "id": "7b5d1ab2a9c61e94",
        "type": "switch",
        "z": "050fb431a7ca83a4",
        "name": "PRODUCT_NAME",
        "property": "product_check_comp",
        "propertyType": "global",
        "rules": [
            {
                "t": "neq",
                "v": "prodcut_name_pmc",
                "vt": "global"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 250,
        "y": 840,
        "wires": [
            [
                "c7a2e73322d2783c"
            ]
        ]
    },
    {
        "id": "c7a2e73322d2783c",
        "type": "switch",
        "z": "050fb431a7ca83a4",
        "name": "MAC_STAUS",
        "property": "MC_STATU",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "false",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 440,
        "y": 840,
        "wires": [
            [
                "a3b4256931b7554c"
            ]
        ]
    },
    {
        "id": "9002fe242ef72fa2",
        "type": "switch",
        "z": "050fb431a7ca83a4",
        "name": "MAC_STAUS",
        "property": "MC_STATU",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 240,
        "y": 960,
        "wires": [
            [
                "8b32040944b7845a"
            ]
        ]
    },
    {
        "id": "8b32040944b7845a",
        "type": "switch",
        "z": "050fb431a7ca83a4",
        "name": "PRODUCT_NAME",
        "property": "product_check_comp",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "prodcut_name_pmc",
                "vt": "global"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 430,
        "y": 960,
        "wires": [
            [
                "0c38a1766f2dc82c",
                "9e5e82b5acf569bc"
            ]
        ]
    },
    {
        "id": "348e5ac4cb6f2b43",
        "type": "inject",
        "z": "050fb431a7ca83a4",
        "name": "",
        "props": [],
        "repeat": "9",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 490,
        "y": 1080,
        "wires": [
            [
                "29d0b3cc258c52dd"
            ]
        ]
    },
    {
        "id": "5551fe124ea9c4ca",
        "type": "delay",
        "z": "050fb431a7ca83a4",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 860,
        "y": 1080,
        "wires": [
            [
                "08ac8c3271fb1f90"
            ]
        ]
    },
    {
        "id": "29d0b3cc258c52dd",
        "type": "switch",
        "z": "050fb431a7ca83a4",
        "name": "individual_count_reset",
        "property": "machine_counter_reset_1",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 680,
        "y": 1080,
        "wires": [
            [
                "5551fe124ea9c4ca"
            ]
        ]
    },
    {
        "id": "08ac8c3271fb1f90",
        "type": "change",
        "z": "050fb431a7ca83a4",
        "name": "Set default value",
        "rules": [
            {
                "t": "set",
                "p": "machine_counter_reset_1",
                "pt": "global",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "a3b4256931b7554c",
        "type": "switch",
        "z": "050fb431a7ca83a4",
        "name": "dailyprdt_data_wrte",
        "property": "dailyprdt_data_wrte_dne",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 840,
        "wires": [
            [
                "47c61838ee77decc"
            ]
        ]
    },
    {
        "id": "4e8f686b37613142",
        "type": "function",
        "z": "050fb431a7ca83a4",
        "name": "function 130",
        "func": "var product_check_123 = global.get(\"prodcut_name_pmc\");\nglobal.set(\"product_check_comp\", product_check_123)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "9e5e82b5acf569bc",
        "type": "change",
        "z": "050fb431a7ca83a4",
        "name": "Set default value",
        "rules": [
            {
                "t": "set",
                "p": "dailyprdt_data_wrte_dne",
                "pt": "global",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "f33c2cf16a937d67",
        "type": "inject",
        "z": "050fb431a7ca83a4",
        "d": true,
        "name": "AT_8.28 AM",
        "props": [],
        "repeat": "",
        "crontab": "20 08 * * *",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "x": 740,
        "y": 740,
        "wires": [
            [
                "47c61838ee77decc"
            ]
        ]
    },
    {
        "id": "57f3f5115efc8d4e",
        "type": "inject",
        "z": "050fb431a7ca83a4",
        "name": "",
        "props": [],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 70,
        "y": 960,
        "wires": [
            [
                "9002fe242ef72fa2"
            ]
        ]
    },
    {
        "id": "ed927cf7ae345d95",
        "type": "debug",
        "z": "050fb431a7ca83a4",
        "name": "debug 23",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1220,
        "y": 920,
        "wires": []
    },
    {
        "id": "ed1e7ea1aadff685",
        "type": "function",
        "z": "050fb431a7ca83a4",
        "name": "function 132",
        "func": "msg.payload = global.get(\"dailyprdt_data_wrte_dne\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 920,
        "wires": [
            [
                "ed927cf7ae345d95"
            ]
        ]
    },
    {
        "id": "24a72770318bea90",
        "type": "inject",
        "z": "050fb431a7ca83a4",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 910,
        "y": 920,
        "wires": [
            [
                "ed1e7ea1aadff685"
            ]
        ]
    },
    {
        "id": "0dd41f14ba911528",
        "type": "moment",
        "z": "050fb431a7ca83a4",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "msg",
        "inTz": "",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "",
        "locale": "",
        "output": "",
        "outputType": "msg",
        "outTz": "",
        "x": 620,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "e409aa6e30f6b379",
        "type": "change",
        "z": "050fb431a7ca83a4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "fcolor",
                "pt": "msg",
                "to": "red",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 1660,
        "wires": [
            [
                "ac9f0b3da1a4e590"
            ]
        ]
    },
    {
        "id": "5678f40add6849e2",
        "type": "debug",
        "z": "050fb431a7ca83a4",
        "name": "debug 28",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 1540,
        "wires": []
    },
    {
        "id": "0ada2c4b2d667524",
        "type": "ui_dropdown",
        "z": "050fb431a7ca83a4",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "6a7ea06136783db3",
        "order": 2,
        "width": 12,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "QUALITY LOSS ",
                "value": 11,
                "type": "num"
            },
            {
                "label": "MANAGMENT LOSS",
                "value": 12,
                "type": "num"
            },
            {
                "label": "SETUP LOSS",
                "value": 13,
                "type": "num"
            },
            {
                "label": "TECHNICAL LOSS",
                "value": 14,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 60,
        "y": 1660,
        "wires": [
            [
                "d7c173f973a8e816",
                "8cbfffec6de27592",
                "6324dad26394ea52",
                "f833fbc63e4dd926",
                "fe3bbf9fa04ebe04",
                "74928ea088448d67",
                "f09642edf9341233",
                "938b01191a7afdda"
            ]
        ]
    },
    {
        "id": "f2a5722d9d884342",
        "type": "function",
        "z": "050fb431a7ca83a4",
        "name": "function 137",
        "func": "msg.payload = true\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1660,
        "wires": [
            [
                "e409aa6e30f6b379"
            ]
        ]
    },
    {
        "id": "d7c173f973a8e816",
        "type": "switch",
        "z": "050fb431a7ca83a4",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "11",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 210,
        "y": 1660,
        "wires": [
            [
                "f2a5722d9d884342"
            ]
        ]
    },
    {
        "id": "8cbfffec6de27592",
        "type": "switch",
        "z": "050fb431a7ca83a4",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "11",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 210,
        "y": 1700,
        "wires": [
            [
                "8b5df31d3b83e868"
            ]
        ]
    },
    {
        "id": "8b5df31d3b83e868",
        "type": "function",
        "z": "050fb431a7ca83a4",
        "name": "function 138",
        "func": "msg.payload = false\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1700,
        "wires": [
            [
                "e409aa6e30f6b379"
            ]
        ]
    },
    {
        "id": "b1bb54c1d3b113ea",
        "type": "change",
        "z": "050fb431a7ca83a4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "fcolor",
                "pt": "msg",
                "to": "red",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 1740,
        "wires": [
            [
                "4f8e4bd2c8fd3505",
                "fb59e9bb2dd3d06a",
                "69b875119429cdbd",
                "f98cc0a27737de8b"
            ]
        ]
    },
    {
        "id": "3e7f149f840a85dd",
        "type": "function",
        "z": "050fb431a7ca83a4",
        "name": "function 140",
        "func": "msg.payload = true\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1740,
        "wires": [
            [
                "b1bb54c1d3b113ea"
            ]
        ]
    },
    {
        "id": "6324dad26394ea52",
        "type": "switch",
        "z": "050fb431a7ca83a4",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "12",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 210,
        "y": 1740,
        "wires": [
            [
                "3e7f149f840a85dd"
            ]
        ]
    },
    {
        "id": "f833fbc63e4dd926",
        "type": "switch",
        "z": "050fb431a7ca83a4",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "12",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 210,
        "y": 1780,
        "wires": [
            [
                "3174ad9a07b841ab"
            ]
        ]
    },
    {
        "id": "3174ad9a07b841ab",
        "type": "function",
        "z": "050fb431a7ca83a4",
        "name": "function 141",
        "func": "msg.payload = false\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1780,
        "wires": [
            [
                "b1bb54c1d3b113ea"
            ]
        ]
    },
    {
        "id": "fb59e9bb2dd3d06a",
        "type": "ui_numeric",
        "z": "050fb431a7ca83a4",
        "name": "",
        "label": "SAMPLE RUN ENTERY in Min.",
        "tooltip": "",
        "group": "6a7ea06136783db3",
        "order": 12,
        "width": 10,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "10000",
        "step": 1,
        "className": "",
        "x": 790,
        "y": 1780,
        "wires": [
            [
                "172f1862893e7e1a"
            ]
        ]
    },
    {
        "id": "69b875119429cdbd",
        "type": "ui_numeric",
        "z": "050fb431a7ca83a4",
        "name": "",
        "label": "NO MANPOWER ENTERY in Min.",
        "tooltip": "",
        "group": "6a7ea06136783db3",
        "order": 13,
        "width": 10,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "10000",
        "step": 1,
        "className": "",
        "x": 800,
        "y": 1820,
        "wires": [
            [
                "a95e58a35468f3e0"
            ]
        ]
    },
    {
        "id": "f98cc0a27737de8b",
        "type": "ui_numeric",
        "z": "050fb431a7ca83a4",
        "name": "",
        "label": "NO LIFTER ENTERY in Min.",
        "tooltip": "",
        "group": "6a7ea06136783db3",
        "order": 15,
        "width": 10,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "10000",
        "step": 1,
        "className": "",
        "x": 780,
        "y": 1860,
        "wires": [
            [
                "5c7f5dc25ba64b8b"
            ]
        ]
    },
    {
        "id": "172f1862893e7e1a",
        "type": "function",
        "z": "050fb431a7ca83a4",
        "name": "function 142",
        "func": "var total_prd_time = global.get(\"production_time\")\nvar nosample_loss = msg.payload\nvar nosample_loss_1 = (nosample_loss * 100 / total_prd_time).toFixed(1)\nglobal.set(\"nosample_loss_1\", nosample_loss_1);\nglobal.set(\"nosample_loss_1\", nosample_loss_1)\nmsg.payload = nosample_loss_1\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1780,
        "wires": [
            [
                "bf177fd560bafb32"
            ]
        ]
    },
    {
        "id": "a95e58a35468f3e0",
        "type": "function",
        "z": "050fb431a7ca83a4",
        "name": "function 143",
        "func": "var total_prd_time = global.get(\"production_time\")\nvar nomanpower_loss = msg.payload\nvar nomanpower_loss_1 = (nomanpower_loss * 100 / total_prd_time).toFixed(1)\nglobal.set(\"nomanpower_loss_1\", nomanpower_loss_1);\nglobal.set(\"nomanpower_loss_2\", nomanpower_loss);\nmsg.payload = nomanpower_loss_1\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1820,
        "wires": [
            [
                "bf177fd560bafb32"
            ]
        ]
    },
    {
        "id": "5c7f5dc25ba64b8b",
        "type": "function",
        "z": "050fb431a7ca83a4",
        "name": "function 144",
        "func": "var total_prd_time = global.get(\"production_time\")\nvar nolifter_loss = msg.payload\nvar nolifter_loss_1 = (nolifter_loss * 100 / total_prd_time).toFixed(1)\nglobal.set(\"nolifter_loss_1\", nolifter_loss_1);\nglobal.set(\"nolifter_loss_2\", nolifter_loss)\nmsg.payload = nolifter_loss_1\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 1860,
        "wires": [
            [
                "bf177fd560bafb32"
            ]
        ]
    },
    {
        "id": "711b0d2ee700b14c",
        "type": "change",
        "z": "050fb431a7ca83a4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "fcolor",
                "pt": "msg",
                "to": "red",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 1900,
        "wires": [
            [
                "e1c5162e44ec72ab"
            ]
        ]
    },
    {
        "id": "3185b51a4c85409d",
        "type": "function",
        "z": "050fb431a7ca83a4",
        "name": "function 146",
        "func": "msg.payload = true\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1900,
        "wires": [
            [
                "711b0d2ee700b14c"
            ]
        ]
    },
    {
        "id": "fe3bbf9fa04ebe04",
        "type": "switch",
        "z": "050fb431a7ca83a4",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "13",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 170,
        "y": 1900,
        "wires": [
            [
                "3185b51a4c85409d"
            ]
        ]
    },
    {
        "id": "74928ea088448d67",
        "type": "switch",
        "z": "050fb431a7ca83a4",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "13",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 170,
        "y": 1940,
        "wires": [
            [
                "9ce006be0bc0f07e"
            ]
        ]
    },
    {
        "id": "9ce006be0bc0f07e",
        "type": "function",
        "z": "050fb431a7ca83a4",
        "name": "function 147",
        "func": "msg.payload = false\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1940,
        "wires": [
            [
                "711b0d2ee700b14c"
            ]
        ]
    },
    {
        "id": "fa3d23d29d086293",
        "type": "change",
        "z": "050fb431a7ca83a4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "fcolor",
                "pt": "msg",
                "to": "red",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 1980,
        "wires": [
            [
                "f6630e8a294ff3af",
                "70b76eef1815e9b6"
            ]
        ]
    },
    {
        "id": "ec6400ea67c22889",
        "type": "function",
        "z": "050fb431a7ca83a4",
        "name": "function 149",
        "func": "msg.payload = true\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1980,
        "wires": [
            [
                "fa3d23d29d086293"
            ]
        ]
    },
    {
        "id": "f09642edf9341233",
        "type": "switch",
        "z": "050fb431a7ca83a4",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "14",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 170,
        "y": 1980,
        "wires": [
            [
                "ec6400ea67c22889"
            ]
        ]
    },
    {
        "id": "938b01191a7afdda",
        "type": "switch",
        "z": "050fb431a7ca83a4",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "14",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 170,
        "y": 2020,
        "wires": [
            [
                "e5446cd352714a36"
            ]
        ]
    },
    {
        "id": "e5446cd352714a36",
        "type": "function",
        "z": "050fb431a7ca83a4",
        "name": "function 150",
        "func": "msg.payload = false\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 2020,
        "wires": [
            [
                "fa3d23d29d086293"
            ]
        ]
    },
    {
        "id": "dd356196fdc8fb49",
        "type": "ui_text_input",
        "z": "050fb431a7ca83a4",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "5ada3ed2f7f6c736",
        "order": 3,
        "width": 7,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "D104",
        "sendOnBlur": false,
        "className": "",
        "topicType": "flow",
        "x": 660,
        "y": 440,
        "wires": [
            [
                "80a1b0d162735876"
            ]
        ]
    },
    {
        "id": "1f8c3ff3a57ba078",
        "type": "ui_text",
        "z": "050fb431a7ca83a4",
        "group": "5ada3ed2f7f6c736",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "ENTER RUNNING PRODUCT :",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 730,
        "y": 400,
        "wires": []
    },
    {
        "id": "ab590a8709238358",
        "type": "ui_button",
        "z": "050fb431a7ca83a4",
        "name": "",
        "group": "5ada3ed2f7f6c736",
        "order": 8,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "ENTER",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 80,
        "y": 840,
        "wires": [
            [
                "7b5d1ab2a9c61e94"
            ]
        ]
    },
    {
        "id": "1e197c8ed20543b5",
        "type": "inject",
        "z": "3bbea1871a3904e1",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "25 08 * * *",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "x": 130,
        "y": 360,
        "wires": [
            [
                "0de91f816eba8714"
            ]
        ]
    },
    {
        "id": "507990122927bac2",
        "type": "function",
        "z": "3bbea1871a3904e1",
        "name": "function 42",
        "func": "var pld = \"SELECT TOTAL_DWN,TOTAL_COUNT,PRODUCTION_TIME,PERFORMANCE,RUNNING_PRODUCT,BREAKDOWN,NOLOAD \" //NO_LOAD,TOTAL_DOWN_TIME \"\n\n//var pld =       \"SELECT ID, Topic, Payload, Timestamp \"\npld = pld + \"FROM [node_red].[dbo].[record_1] \"\n\n//pld = pld + \"WHERE TIME = '\" + ontime + \" ' \";\n//pld = pld + \"WHERE TIME BETWEEN '\" + ontime + \" ' AND ' \" + offtime + \"' ORDER BY TIME \";\npld = pld + \"WHERE ID = 1 \";\n\n//pld = pld + \"VALUES ('\" + gk + \"','\" + dformat + \"')\"\nmsg.payload = pld\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 220,
        "wires": [
            [
                "ed12f37d7556d2ce"
            ]
        ]
    },
    {
        "id": "ed12f37d7556d2ce",
        "type": "MSSQL",
        "z": "3bbea1871a3904e1",
        "mssqlCN": "76839cf0e528d185",
        "name": "MSSQL",
        "query": "",
        "outField": "payload",
        "x": 780,
        "y": 220,
        "wires": [
            [
                "1af6580aca0eb9f9"
            ]
        ]
    },
    {
        "id": "1af6580aca0eb9f9",
        "type": "function",
        "z": "3bbea1871a3904e1",
        "name": "function 43",
        "func": "var perfor = msg.payload[0].PERFORMANCE.toFixed(1);\nvar running_product_1 = msg.payload[0].RUNNING_PRODUCT\nvar total_dwn = msg.payload[0].TOTAL_DWN\nvar total_prod = msg.payload[0].TOTAL_COUNT\nvar production_time = msg.payload[0].PRODUCTION_TIME\nvar brekdwn = msg.payload[0].BREAKDOWN\nvar nold = msg.payload[0].NOLOAD\nvar final_oee = (perfor/1).toFixed(1)\nglobal.set(\"d_final_oee\", final_oee)\nglobal.set(\"d_total_dwn\", total_dwn)\nglobal.set(\"d_total_prod\", total_prod)\nglobal.set(\"d_production_time\", production_time)\nglobal.set(\"d_brekdwn\", brekdwn)\nglobal.set(\"d_nold\", nold)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 220,
        "wires": [
            [
                "dcb26ee9bc4734ec"
            ]
        ]
    },
    {
        "id": "dcb26ee9bc4734ec",
        "type": "delay",
        "z": "3bbea1871a3904e1",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1140,
        "y": 220,
        "wires": [
            [
                "446e8e77737f744b"
            ]
        ]
    },
    {
        "id": "446e8e77737f744b",
        "type": "function",
        "z": "3bbea1871a3904e1",
        "name": "Function",
        "func": "var dformat = global.get(\"pervious_date\");\n//\"UPDATE [node_red].[dbo].[mytable] \"\nvar final_oee = global.get(\"d_final_oee\")\nvar total_dwn = global.get(\"d_total_dwn\")\nvar total_prod = global.get(\"d_total_prod\")\nvar production_time = global.get(\"d_production_time\")\nvar brekdwn = global.get(\"d_brekdwn\")\nvar nold = global.get(\"d_nold\")\nvar gas_cons = global.get(\"gas_cons\")\nvar pwer_cons = global.get(\"power_cons\")\nvar bd_loss = global.get(\"bd_loss_1\")\nvar power_loss = global.get(\"power_loss_1\")\nvar qualt_loss = global.get(\"qualt_loss_1\")\nvar orginat_loss = global.get(\"orginat_loss_1\")\nvar setup_loss = global.get(\"setup_loss_1\")\nvar noload_loss = global.get(\"noload_loss_1\")\nvar nosample_loss = global.get(\"nosample_loss_1\")\nvar nomanpower_loss = global.get(\"nomanpower_loss_1\")\nvar nolifter_loss = global.get(\"nolifter_loss_1\")\nvar techial_loss  = bd_loss+power_loss\nvar unaccount_loss = (100 - (techial_loss+qualt_loss+setup_loss+orginat_loss))\nvar dtstmp = new Date().toString();\nvar pld = \"INSERT INTO[node_red].[dbo].[MC_DAILY_PRODUCTION_HISTORY](DATE,FINAL_OEE,TOTAL_DOWN,PRODUCTION_COUNT,PRODUCTION_PLAN_TIME,BREAKDWON,NOLOAD,GAS_CONSUMPTION,POWER_CONSUMPTION,BREAKDOWN_LOSS,POWER_LOSS,ORGANIZATION_LOSS,QUALITY_LOSS,SETUP_LOSS,SAMPLE_LOSS,MANPOWER_LOSS,LIFTER_LOSS,TECHNICAL_LOSS,UNACCOUNT_LOSS)\"      \npld = pld + \"VALUES ('\" + dformat + \"','\" + final_oee + \"','\" + total_dwn + \"','\" + total_prod + \"','\" + production_time + \"', '\" + brekdwn + \"','\" + nold + \"','\" + gas_cons + \"','\" + pwer_cons + \"','\" + bd_loss + \"','\" + power_loss + \"','\" + orginat_loss + \"','\" + qualt_loss + \"','\" + setup_loss + \"','\" + noload_loss + \"','\" + nosample_loss + \"','\" + nomanpower_loss + \"','\" + nolifter_loss + \"','\" + techial_loss + \"','\" + unaccount_loss + \"')\"\n\n//pld = pld + \"SET Timestamp = '\" + dformat + \"' \"\n\n//pld = pld + \"WHERE id = 1\"\n\nmsg.payload = pld\nreturn msg;\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 220,
        "wires": [
            [
                "61a249f97d26029f",
                "ac03325de3f9f106"
            ]
        ]
    },
    {
        "id": "61a249f97d26029f",
        "type": "MSSQL",
        "z": "3bbea1871a3904e1",
        "mssqlCN": "76839cf0e528d185",
        "name": "MSSQL",
        "query": "",
        "outField": "payload",
        "x": 1440,
        "y": 220,
        "wires": [
            [
                "bcebe9a976c5fea2"
            ]
        ]
    },
    {
        "id": "117253d815bcd0d5",
        "type": "function",
        "z": "3bbea1871a3904e1",
        "name": "DELETE_ALL",
        "func": "//DELETE FROM table_name WHERE condition\n//var delt_item = global.get(\"erase_selected\");\n\nvar pld = \" DELETE FROM [node_red].[dbo].[break_down] \" \n    \n//pld = pld + \" WHERE TIME = '\" + delt_item + \"' \"\nmsg.payload = pld\nreturn msg;\n\n\n//[node_red].[dbo].\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1740,
        "y": 220,
        "wires": [
            [
                "d78a4b2708631a43"
            ]
        ]
    },
    {
        "id": "bcebe9a976c5fea2",
        "type": "delay",
        "z": "3bbea1871a3904e1",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1580,
        "y": 220,
        "wires": [
            [
                "117253d815bcd0d5"
            ]
        ]
    },
    {
        "id": "d78a4b2708631a43",
        "type": "MSSQL",
        "z": "3bbea1871a3904e1",
        "mssqlCN": "76839cf0e528d185",
        "name": "MSSQL",
        "query": "",
        "outField": "payload",
        "x": 1920,
        "y": 220,
        "wires": [
            [
                "8fe8bd6e115cf618"
            ]
        ]
    },
    {
        "id": "8fe8bd6e115cf618",
        "type": "delay",
        "z": "3bbea1871a3904e1",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2060,
        "y": 220,
        "wires": [
            [
                "14694abe103d45e2"
            ]
        ]
    },
    {
        "id": "14694abe103d45e2",
        "type": "function",
        "z": "3bbea1871a3904e1",
        "name": "DELETE_ALL_1",
        "func": "//DELETE FROM table_name WHERE condition\n//var delt_item = global.get(\"erase_selected\");\n\nvar pld = \" DELETE FROM [node_red].[dbo].[QT_DAILY_REJECTION] \" \n    \n//pld = pld + \" WHERE TIME = '\" + delt_item + \"' \"\nmsg.payload = pld\nreturn msg;\n\n\n//[node_red].[dbo].\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2220,
        "y": 220,
        "wires": [
            [
                "986da90cba09ac38"
            ]
        ]
    },
    {
        "id": "986da90cba09ac38",
        "type": "MSSQL",
        "z": "3bbea1871a3904e1",
        "mssqlCN": "76839cf0e528d185",
        "name": "MSSQL",
        "query": "",
        "outField": "payload",
        "x": 2380,
        "y": 220,
        "wires": [
            [
                "7e739028031adc9e"
            ]
        ]
    },
    {
        "id": "89be0ec4e10d987a",
        "type": "ui_text_input",
        "z": "3bbea1871a3904e1",
        "name": "",
        "label": "MACHINE NAME*",
        "tooltip": "",
        "group": "",
        "order": 1,
        "width": 6,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "payload",
        "sendOnBlur": false,
        "className": "",
        "topicType": "msg",
        "x": 170,
        "y": 660,
        "wires": [
            [
                "a8b420f6962d2203"
            ]
        ]
    },
    {
        "id": "69f51b92a5259321",
        "type": "ui_text_input",
        "z": "3bbea1871a3904e1",
        "name": "",
        "label": "MODEL/PART NO*",
        "tooltip": "",
        "group": "",
        "order": 5,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "payload",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 170,
        "y": 700,
        "wires": [
            [
                "40ac971ec5c371a2"
            ]
        ]
    },
    {
        "id": "a8b420f6962d2203",
        "type": "function",
        "z": "3bbea1871a3904e1",
        "name": "MACHINE NAME",
        "func": "var newplan_machine_name = msg.payload;\nglobal.set(\"newplan_machine_name\", newplan_machine_name);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "40ac971ec5c371a2",
        "type": "function",
        "z": "3bbea1871a3904e1",
        "name": "MODEL/PART NO*",
        "func": "var newplan_model_name = msg.payload;\nglobal.set(\"newplan_model_name\", newplan_model_name);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "7de3fb121f9cfd80",
        "type": "ui_text_input",
        "z": "3bbea1871a3904e1",
        "name": "",
        "label": "QTY*",
        "tooltip": "",
        "group": "",
        "order": 9,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "payload",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 130,
        "y": 740,
        "wires": [
            [
                "af027e096224e149"
            ]
        ]
    },
    {
        "id": "af027e096224e149",
        "type": "function",
        "z": "3bbea1871a3904e1",
        "name": "QTY*",
        "func": "var newplan_qty = msg.payload;\nglobal.set(\"newplan_qty\", newplan_qty);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "f2bd313009f2a01e",
        "type": "ui_text_input",
        "z": "3bbea1871a3904e1",
        "name": "",
        "label": "CYCLE TIME*",
        "tooltip": "",
        "group": "",
        "order": 12,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "payload",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 160,
        "y": 780,
        "wires": [
            [
                "3ddba9918ce88e30"
            ]
        ]
    },
    {
        "id": "3ddba9918ce88e30",
        "type": "function",
        "z": "3bbea1871a3904e1",
        "name": "CYCLE TIME*",
        "func": "var newplan_cycletime = msg.payload;\nglobal.set(\"newplan_cycletime\", newplan_cycletime);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "f2d776276f635ad7",
        "type": "ui_text_input",
        "z": "3bbea1871a3904e1",
        "name": "",
        "label": "TOTAL TIME*",
        "tooltip": "",
        "group": "",
        "order": 15,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "payload",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 160,
        "y": 820,
        "wires": [
            [
                "5a0a81fc35ba5d9a"
            ]
        ]
    },
    {
        "id": "bba4bc6f436479f9",
        "type": "ui_text_input",
        "z": "3bbea1871a3904e1",
        "name": "",
        "label": "SHIFT*",
        "tooltip": "",
        "group": "",
        "order": 18,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "payload",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 140,
        "y": 860,
        "wires": [
            [
                "f72f6163b81e9d9b"
            ]
        ]
    },
    {
        "id": "5a0a81fc35ba5d9a",
        "type": "function",
        "z": "3bbea1871a3904e1",
        "name": "TOTAL TIME*",
        "func": "var newplan_totaltime = msg.payload;\nglobal.set(\"newplan_totaltime\", newplan_totaltime);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "f72f6163b81e9d9b",
        "type": "function",
        "z": "3bbea1871a3904e1",
        "name": "SHIFT*",
        "func": "var newplan_shift = msg.payload;\nglobal.set(\"newplan_shift\", newplan_shift);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "f8db4953fb97e17e",
        "type": "comment",
        "z": "3bbea1871a3904e1",
        "name": "NEW_PLAN",
        "info": "",
        "x": 150,
        "y": 620,
        "wires": []
    },
    {
        "id": "492c5bfd71258f17",
        "type": "function",
        "z": "3bbea1871a3904e1",
        "name": "Function",
        "func": "var d = new Date,\n    dformat = [d.getMonth() + 1,\n    d.getDate(),\n    d.getFullYear()].join('/') + ' ' +\n        [d.getHours(),\n        d.getMinutes(),\n        d.getSeconds()].join(':');\n//\"UPDATE [node_red].[dbo].[mytable] \"\nvar machine_name = global.get(\"newplan_machine_name\");\nvar model_name = global.get(\"newplan_model_name\");\nvar qty = global.get(\"newplan_qty\");\nvar cycle_time = global.get(\"newplan_cycletime\");\nvar totaltime = global.get(\"newplan_totaltime\");\nvar shift = global.get(\"newplan_shift\");\nvar dtstmp = new Date().toString();\nvar pld = \"INSERT INTO[node_red].[dbo].[NEW_PRODUCTION_PLAN](TIME,MACHINE_NAME,MODEL_NAME,QTY,CYCLE_TIME,TOTAL_TIME,SHIFT) \"\npld = pld + \"VALUES ('\" + dformat + \"','\" + machine_name + \"','\" + model_name + \"','\" + qty + \"','\" + cycle_time + \"','\" + totaltime + \"','\" + shift + \"')\"\n\n//pld = pld + \"SET Timestamp = '\" + dformat + \"' \"\n\n//pld = pld + \"WHERE id = 1\"\n\nmsg.payload = pld\nreturn msg;\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 920,
        "wires": [
            [
                "5a1b068bee241aaa"
            ]
        ]
    },
    {
        "id": "5a1b068bee241aaa",
        "type": "MSSQL",
        "z": "3bbea1871a3904e1",
        "mssqlCN": "76839cf0e528d185",
        "name": "NEW_PLAN_PRODUCTION_1",
        "query": "",
        "outField": "payload",
        "x": 630,
        "y": 1000,
        "wires": [
            [
                "4fb26f5d20d4a769"
            ]
        ]
    },
    {
        "id": "9e779a783b5a8446",
        "type": "MSSQL",
        "z": "3bbea1871a3904e1",
        "mssqlCN": "76839cf0e528d185",
        "name": "NEW_PRODUCTION_PLAN_HISTORY",
        "query": "",
        "outField": "payload",
        "x": 700,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "eeb15ccc968e09e3",
        "type": "ui_table",
        "z": "3bbea1871a3904e1",
        "group": "",
        "name": "NEW PLAN PRODUCTION",
        "order": 7,
        "width": 21,
        "height": 11,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 920,
        "y": 1140,
        "wires": []
    },
    {
        "id": "c60932eb4c779fbe",
        "type": "function",
        "z": "3bbea1871a3904e1",
        "name": "Function",
        "func": "var pld = \" SELECT TIME,MACHINE_NAME,MODEL_NAME,QTY,CYCLE_TIME,TOTAL_TIME,SHIFT\" \npld = pld + \" FROM [node_red].[dbo].[NEW_PRODUCTION_PLAN]\"\npld = pld+ \"ORDER BY TIME\"\nmsg.payload = pld\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1140,
        "wires": [
            [
                "103e6ef28c071d93"
            ]
        ]
    },
    {
        "id": "103e6ef28c071d93",
        "type": "MSSQL",
        "z": "3bbea1871a3904e1",
        "mssqlCN": "76839cf0e528d185",
        "name": "NEW_PLAN_PRODUCTION",
        "query": "",
        "outField": "payload",
        "x": 640,
        "y": 1140,
        "wires": [
            [
                "eeb15ccc968e09e3"
            ]
        ]
    },
    {
        "id": "4068ceaaa6079660",
        "type": "delay",
        "z": "3bbea1871a3904e1",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 300,
        "y": 1140,
        "wires": [
            [
                "c60932eb4c779fbe"
            ]
        ]
    },
    {
        "id": "05361920db6153ce",
        "type": "ui_text",
        "z": "3bbea1871a3904e1",
        "group": "",
        "order": 3,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "NEW PLAN PRODUCTION",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 940,
        "y": 1100,
        "wires": []
    },
    {
        "id": "65d53433acbb60fb",
        "type": "function",
        "z": "3bbea1871a3904e1",
        "name": "Function",
        "func": "var d = new Date,\n    dformat = [d.getMonth() + 1,\n    d.getDate(),\n    d.getFullYear()].join('/') + ' ' +\n        [d.getHours(),\n        d.getMinutes(),\n        d.getSeconds()].join(':');\n//\"UPDATE [node_red].[dbo].[mytable] \"\nvar machine_name = global.get(\"qt_rej_machine_name\");\nvar model_name = global.get(\"qt_rej_model_name\");\nvar opr_name = global.get(\"qt_rej_operator_name\");\nvar qt_inspect_name = global.get(\"qt_rej_inspector_name\");\nvar leaf_no = global.get(\"qt_rej_leaf_no\");\nvar section = global.get(\"qt_rej_section\");\nvar wt = global.get(\"qt_rej_wt\");\nvar rej_qty = global.get(\"qt_rej_qty\");\nvar total_wt = global.get(\"qt_rej_total_wt\");\nvar defect = global.get(\"qt_rej_defect\");\n\nvar dtstmp = new Date().toString();\nvar pld = \"INSERT INTO[node_red].[dbo].[QT_DAILY_REJECTION](TIME,MACHINE_NAME )\"\npld = pld + \"VALUES ('\" + dformat + \"','\" + machine_name + \"')\"\n\n//pld = pld + \"SET Timestamp = '\" + dformat + \"' \"\n\n//pld = pld + \"WHERE id = 1\"\n\nmsg.payload = pld\nreturn msg;\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 1060,
        "wires": [
            [
                "5a1b068bee241aaa"
            ]
        ]
    },
    {
        "id": "5c04ee291eae28c4",
        "type": "ui_button",
        "z": "3bbea1871a3904e1",
        "name": "",
        "group": "",
        "order": 23,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "ENTER",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "TRUE",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 100,
        "y": 1020,
        "wires": [
            [
                "492c5bfd71258f17",
                "4068ceaaa6079660",
                "78482028439d348b"
            ]
        ]
    },
    {
        "id": "78482028439d348b",
        "type": "delay",
        "z": "3bbea1871a3904e1",
        "name": "",
        "pauseType": "delay",
        "timeout": "4",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 300,
        "y": 1200,
        "wires": [
            [
                "d90564c76cbed430"
            ]
        ]
    },
    {
        "id": "d90564c76cbed430",
        "type": "function",
        "z": "3bbea1871a3904e1",
        "name": "Function",
        "func": "var d = new Date,\n    dformat = [d.getMonth() + 1,\n    d.getDate(),\n    d.getFullYear()].join('/') + ' ' +\n        [d.getHours(),\n        d.getMinutes(),\n        d.getSeconds()].join(':');\n//\"UPDATE [node_red].[dbo].[mytable] \"\nvar machine_name = global.get(\"newplan_machine_name\");\nvar model_name = global.get(\"newplan_model_name\");\nvar qty = global.get(\"newplan_qty\");\nvar cycle_time = global.get(\"newplan_cycletime\");\nvar totaltime = global.get(\"newplan_totaltime\");\nvar shift = global.get(\"newplan_shift\");\nvar dtstmp = new Date().toString();\nvar pld = \"INSERT INTO[node_red].[dbo].[NEW_PRODUCTION_PLAN_HISTORY](TIME,MACHINE_NAME,MODEL_NAME,QTY,CYCLE_TIME,TOTAL_TIME,SHIFT) \"\npld = pld + \"VALUES ('\" + dformat + \"','\" + machine_name + \"','\" + model_name + \"','\" + qty + \"','\" + cycle_time + \"','\" + totaltime + \"','\" + shift + \"')\"\n\n//pld = pld + \"SET Timestamp = '\" + dformat + \"' \"\n\n//pld = pld + \"WHERE id = 1\"\n\nmsg.payload = pld\nreturn msg;\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 1240,
        "wires": [
            [
                "9e779a783b5a8446"
            ]
        ]
    },
    {
        "id": "ec8b97df062b3a2d",
        "type": "ui_button",
        "z": "3bbea1871a3904e1",
        "name": "",
        "group": "",
        "order": 31,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "DELETE",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "TRUE",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 140,
        "y": 1320,
        "wires": [
            [
                "9ed186bf283361a8",
                "9463894446f76719",
                "4068ceaaa6079660"
            ]
        ]
    },
    {
        "id": "9ed186bf283361a8",
        "type": "function",
        "z": "3bbea1871a3904e1",
        "name": "Function",
        "func": "//DELETE FROM table_name WHERE condition\nvar delt_item = global.get(\"newplan_erase_selected\");\n\nvar pld = \" DELETE FROM [node_red].[dbo].[NEW_PRODUCTION_PLAN] \" \n    \npld = pld + \" WHERE TIME = '\" + delt_item + \"' \"\nmsg.payload = pld\nreturn msg;\n\n\n//[node_red].[dbo].\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 1320,
        "wires": [
            [
                "472aa1dfc1c93c44"
            ]
        ]
    },
    {
        "id": "472aa1dfc1c93c44",
        "type": "MSSQL",
        "z": "3bbea1871a3904e1",
        "mssqlCN": "76839cf0e528d185",
        "name": "NEWPLAN_DEL_1",
        "query": "",
        "outField": "payload",
        "x": 530,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "4b8cd3acd96e0b56",
        "type": "function",
        "z": "3bbea1871a3904e1",
        "name": "Function",
        "func": "//DELETE FROM table_name WHERE condition\nvar delt_item = global.get(\"newplan_erase_selected\");\n\nvar pld = \" DELETE FROM [node_red].[dbo].[NEW_PRODUCTION_PLAN_HISTORY] \"\n\npld = pld + \" WHERE TIME = '\" + delt_item + \"' \"\nmsg.payload = pld\nreturn msg;\n\n\n//[node_red].[dbo].\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 1360,
        "wires": [
            [
                "aa4a49eb6dbb0630"
            ]
        ]
    },
    {
        "id": "aa4a49eb6dbb0630",
        "type": "MSSQL",
        "z": "3bbea1871a3904e1",
        "mssqlCN": "76839cf0e528d185",
        "name": "NEWPLAN_DEL_HISTRY",
        "query": "",
        "outField": "payload",
        "x": 690,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "9463894446f76719",
        "type": "delay",
        "z": "3bbea1871a3904e1",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 320,
        "y": 1360,
        "wires": [
            [
                "4b8cd3acd96e0b56"
            ]
        ]
    },
    {
        "id": "6f7323431d98b811",
        "type": "ui_text_input",
        "z": "3bbea1871a3904e1",
        "name": "",
        "label": "DELETE WRONG ENTERY*",
        "tooltip": "",
        "group": "",
        "order": 28,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "payload",
        "sendOnBlur": false,
        "className": "",
        "topicType": "msg",
        "x": 340,
        "y": 1440,
        "wires": [
            [
                "b3dd623e77a09513"
            ]
        ]
    },
    {
        "id": "b3dd623e77a09513",
        "type": "function",
        "z": "3bbea1871a3904e1",
        "name": "DELET WRONG ENTERY",
        "func": "var newplan_erase_selected = msg.payload;\nglobal.set(\"newplan_erase_selected\", newplan_erase_selected);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "bb3e93bbce3422bd",
        "type": "inject",
        "z": "3bbea1871a3904e1",
        "name": "",
        "props": [],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 1440,
        "wires": [
            [
                "6f7323431d98b811"
            ]
        ]
    },
    {
        "id": "0a9f41a4c4819632",
        "type": "inject",
        "z": "3bbea1871a3904e1",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110,
        "y": 1140,
        "wires": [
            [
                "492c5bfd71258f17",
                "c60932eb4c779fbe",
                "d90564c76cbed430"
            ]
        ]
    },
    {
        "id": "4fb26f5d20d4a769",
        "type": "function",
        "z": "3bbea1871a3904e1",
        "name": "function 87",
        "func": "var k = 1\nmsg.payload = k;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 1000,
        "wires": [
            [
                "b6712adb734d4f47"
            ]
        ]
    },
    {
        "id": "b6712adb734d4f47",
        "type": "debug",
        "z": "3bbea1871a3904e1",
        "name": "debug 16",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 1000,
        "wires": []
    },
    {
        "id": "0de91f816eba8714",
        "type": "function",
        "z": "3bbea1871a3904e1",
        "name": "8.30 AM ACTIVE",
        "func": "var del_data_chking = 1;\nglobal.set(\"del_data_chking\", del_data_chking)\nglobal.set(\"time_count\", 0)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "3d1fc4e1c629f2b1",
        "type": "inject",
        "z": "3bbea1871a3904e1",
        "name": "",
        "props": [],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "x": 230,
        "y": 220,
        "wires": [
            [
                "7ace4ec06849987a"
            ]
        ]
    },
    {
        "id": "1498bd65a53ca576",
        "type": "function",
        "z": "3bbea1871a3904e1",
        "name": "function 89",
        "func": "var m = global.get(\"del_data_chking\");\n;\n\nif (m == 1) {\n    // check if the user has access to execute this function\n\n    return [msg, null];\n\n\n} else {\n    return [null, msg];\n}\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 40,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "c90c83475ff3a2cf",
        "type": "function",
        "z": "3bbea1871a3904e1",
        "name": "function 90",
        "func": "var del_data_chking = 0;\nglobal.set(\"del_data_chking\", del_data_chking);\nglobal.set(\"time_count\",0);\nglobal.set(\"data_update_counter_reset\",1);\n\nglobal.set(\"bd_loss_1\",0);\nglobal.set(\"power_loss_1\",0)\nglobal.set(\"qualt_loss_1\",0)\nglobal.set(\"orginat_loss_1\",0)\nglobal.set(\"setup_loss_1\",0)\nglobal.set(\"noload_loss_1\",0)\nglobal.set(\"bd_loss_2\", 0);\nglobal.set(\"power_loss_2\", 0)\nglobal.set(\"qualt_loss_2\", 0)\nglobal.set(\"orginat_loss_2\", 0)\nglobal.set(\"setup_loss_2\", 0)\nglobal.set(\"noload_loss_2\", 0)\n\nvar d = new Date,\n    dformat = [d.getFullYear(),d.getMonth() + 1,\n    d.getDate()].join('/');\n\nvar pervious_date = dformat;\nglobal.set(\"pervious_date\", pervious_date)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2990,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "4c74a6e0aeea93cc",
        "type": "function",
        "z": "3bbea1871a3904e1",
        "name": "function 94",
        "func": "//\"UPDATE [node_red].[dbo].[mytable] \"\nvar count = 0;\nvar prod_time = 0;\nvar perform = 0;\nvar running_p1 = 0;\nvar brk = 0;\nvar nold = 0;\n//var dtstmp = new Date().toString();\nvar pld = \"UPDATE [node_red].[dbo].[record_1] \"\npld = pld + \"SET TOTAL_COUNT = '\" + count + \"' ,PRODUCTION_TIME = '\" + prod_time + \"',PERFORMANCE = '\" + perform + \"',RUNNING_PRODUCT = '\" + running_p1 + \"' ,BREAKDOWN = 0,NOLOAD = 0,TOTAL_DWN = 0 \"\n\npld = pld + \"WHERE ID = 1\"\n\nmsg.payload = pld\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2690,
        "y": 220,
        "wires": [
            [
                "d996a7312132191f"
            ]
        ]
    },
    {
        "id": "7e739028031adc9e",
        "type": "delay",
        "z": "3bbea1871a3904e1",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2520,
        "y": 220,
        "wires": [
            [
                "4c74a6e0aeea93cc"
            ]
        ]
    },
    {
        "id": "d996a7312132191f",
        "type": "MSSQL",
        "z": "3bbea1871a3904e1",
        "mssqlCN": "76839cf0e528d185",
        "name": "MSSQL",
        "query": "",
        "outField": "payload",
        "x": 2840,
        "y": 220,
        "wires": [
            [
                "c90c83475ff3a2cf"
            ]
        ]
    },
    {
        "id": "354beb85ec96f08d",
        "type": "inject",
        "z": "3bbea1871a3904e1",
        "name": "",
        "props": [],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 480,
        "wires": [
            [
                "9e20ecd668a2795e"
            ]
        ]
    },
    {
        "id": "9e20ecd668a2795e",
        "type": "function",
        "z": "3bbea1871a3904e1",
        "name": "function 98",
        "func": "var m = global.get(\"del_data_chking\");\nvar m_1 = global.get(\"machine_data_update\")\n\nif (m == m_1) {\n    // check if the user has access to execute this function\n\n    return [msg, null];\n\n\n} else {\n    return [null, msg];\n}\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 480,
        "wires": [
            [
                "c63a6d7b16ed5ff8"
            ],
            []
        ]
    },
    {
        "id": "c63a6d7b16ed5ff8",
        "type": "function",
        "z": "3bbea1871a3904e1",
        "name": "function 99",
        "func": "global.set(\"bypass_deldata\",1)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "a64376efe1a9479e",
        "type": "function",
        "z": "3bbea1871a3904e1",
        "name": "function 101",
        "func": "global.set(\"del_data_chking\",0)\nmsg.payload = global.get(\"machine_data_update\")\nvar d = new Date,\n    dformat = [d.getMonth() + 1,\n    d.getDate(),\n    d.getFullYear()].join('/');\nglobal.set(\"pervious_date\", dformat)\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "78f232d330e1cbdf",
        "type": "function",
        "z": "3bbea1871a3904e1",
        "name": "function 93",
        "func": "var m = global.get(\"machine_data_update\");\n;\n\nif (m == 0) {\n    // check if the user has access to execute this function\n\n    return [msg, null];\n\n\n} else {\n    return [null, msg];\n}\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 160,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "0b04ab5ac537e47e",
        "type": "inject",
        "z": "3bbea1871a3904e1",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 450,
        "y": 300,
        "wires": [
            [
                "a64376efe1a9479e"
            ]
        ]
    },
    {
        "id": "09bcf768961cf91f",
        "type": "inject",
        "z": "3bbea1871a3904e1",
        "name": "",
        "props": [],
        "repeat": "9",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 730,
        "y": 480,
        "wires": [
            [
                "bf6bfdf974745751"
            ]
        ]
    },
    {
        "id": "4fb4219914386e38",
        "type": "delay",
        "z": "3bbea1871a3904e1",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1100,
        "y": 480,
        "wires": [
            [
                "ceaa3cb617a13654"
            ]
        ]
    },
    {
        "id": "457f24e425098791",
        "type": "inject",
        "z": "3bbea1871a3904e1",
        "name": "",
        "props": [],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 1640,
        "wires": [
            [
                "dca9964a339cd3ab",
                "0ed04ac26e6b511f",
                "74527c2389bd30a5",
                "b8b699183f058b1f",
                "371475dc7ebab3f4",
                "a14d2fb5cece99ba",
                "31846fa69c82f0ef",
                "c7bc6809bfc7b937",
                "acd180b7d2e1e1bc",
                "81bd29d1f35522bd",
                "21ffa7acf59e076b",
                "ae40261acca29600",
                "e73c79c119a63480",
                "37d42e0065d0aa41",
                "fc11c876cbc74307",
                "6485362e90f9bd31",
                "08c53fbb0413246f",
                "c7e609e9cd1ef9cf",
                "a2ee512cf2353a38",
                "f1329d8baee1a8cc"
            ]
        ]
    },
    {
        "id": "dca9964a339cd3ab",
        "type": "switch",
        "z": "3bbea1871a3904e1",
        "name": "Is variable undefined?",
        "property": "dailyprdt_data_wrte_dne",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "undefined",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 320,
        "y": 1640,
        "wires": [
            [
                "40e4a5883d77c14a"
            ]
        ]
    },
    {
        "id": "40e4a5883d77c14a",
        "type": "change",
        "z": "3bbea1871a3904e1",
        "name": "Set default value",
        "rules": [
            {
                "t": "set",
                "p": "dailyprdt_data_wrte_dne",
                "pt": "global",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "0ed04ac26e6b511f",
        "type": "switch",
        "z": "3bbea1871a3904e1",
        "name": "Is variable undefined?",
        "property": "pervious_date",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "undefined",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 320,
        "y": 1680,
        "wires": [
            [
                "06ad4cda80769ef5"
            ]
        ]
    },
    {
        "id": "74527c2389bd30a5",
        "type": "switch",
        "z": "3bbea1871a3904e1",
        "name": "Is variable undefined?",
        "property": "op_name",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "undefined",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 320,
        "y": 1720,
        "wires": [
            [
                "23766e03b5331790"
            ]
        ]
    },
    {
        "id": "b8b699183f058b1f",
        "type": "switch",
        "z": "3bbea1871a3904e1",
        "name": "Is variable undefined?",
        "property": "product_check_comp",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "undefined",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 320,
        "y": 1760,
        "wires": [
            [
                "9535668ecc840029"
            ]
        ]
    },
    {
        "id": "371475dc7ebab3f4",
        "type": "switch",
        "z": "3bbea1871a3904e1",
        "name": "Is variable undefined?",
        "property": "run_prod_qty",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "undefined",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 320,
        "y": 1800,
        "wires": [
            [
                "7a519607bbdde885"
            ]
        ]
    },
    {
        "id": "a14d2fb5cece99ba",
        "type": "switch",
        "z": "3bbea1871a3904e1",
        "name": "Is variable undefined?",
        "property": "actual_oee",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "undefined",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 320,
        "y": 1840,
        "wires": [
            [
                "af8f186abdc34337"
            ]
        ]
    },
    {
        "id": "31846fa69c82f0ef",
        "type": "switch",
        "z": "3bbea1871a3904e1",
        "name": "Is variable undefined?",
        "property": "individual_counter",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "undefined",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 320,
        "y": 1880,
        "wires": [
            [
                "35b8a7fcac8082ef"
            ]
        ]
    },
    {
        "id": "23766e03b5331790",
        "type": "change",
        "z": "3bbea1871a3904e1",
        "name": "Set default value",
        "rules": [
            {
                "t": "set",
                "p": "op_name",
                "pt": "global",
                "to": "NOT MENTIONED",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 1720,
        "wires": [
            []
        ]
    },
    {
        "id": "9535668ecc840029",
        "type": "change",
        "z": "3bbea1871a3904e1",
        "name": "Set default value",
        "rules": [
            {
                "t": "set",
                "p": "product_check_comp",
                "pt": "global",
                "to": "AB",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "7a519607bbdde885",
        "type": "change",
        "z": "3bbea1871a3904e1",
        "name": "Set default value",
        "rules": [
            {
                "t": "set",
                "p": "run_prod_qty",
                "pt": "global",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 1800,
        "wires": [
            []
        ]
    },
    {
        "id": "af8f186abdc34337",
        "type": "change",
        "z": "3bbea1871a3904e1",
        "name": "Set default value",
        "rules": [
            {
                "t": "set",
                "p": "actual_oee",
                "pt": "global",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 1840,
        "wires": [
            []
        ]
    },
    {
        "id": "35b8a7fcac8082ef",
        "type": "change",
        "z": "3bbea1871a3904e1",
        "name": "Set default value",
        "rules": [
            {
                "t": "set",
                "p": "individual_counter",
                "pt": "global",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 1880,
        "wires": [
            []
        ]
    },
    {
        "id": "c7bc6809bfc7b937",
        "type": "switch",
        "z": "3bbea1871a3904e1",
        "name": "Is variable undefined?",
        "property": "CY_TIM",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "undefined",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 320,
        "y": 1920,
        "wires": [
            [
                "37e3c5034c95d9ce"
            ]
        ]
    },
    {
        "id": "37e3c5034c95d9ce",
        "type": "change",
        "z": "3bbea1871a3904e1",
        "name": "Set default value",
        "rules": [
            {
                "t": "set",
                "p": "CY_TIM",
                "pt": "global",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 1920,
        "wires": [
            []
        ]
    },
    {
        "id": "06ad4cda80769ef5",
        "type": "function",
        "z": "3bbea1871a3904e1",
        "name": "function 125",
        "func": "var now = new Date();\nvar previousDate = new Date(now.getTime() - 24 * 60 * 60 * 1000);\nvar perv = previousDate.toISOString().slice(0, 10);\nglobal.set(\"pervious_date\",perv)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 1680,
        "wires": [
            []
        ]
    },
    {
        "id": "acd180b7d2e1e1bc",
        "type": "switch",
        "z": "3bbea1871a3904e1",
        "name": "Is variable undefined?",
        "property": "CY_TIM",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "undefined",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 320,
        "y": 1960,
        "wires": [
            [
                "e92d4679cb151831"
            ]
        ]
    },
    {
        "id": "e92d4679cb151831",
        "type": "change",
        "z": "3bbea1871a3904e1",
        "name": "Set default value",
        "rules": [
            {
                "t": "set",
                "p": "CY_TIM",
                "pt": "global",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 1960,
        "wires": [
            []
        ]
    },
    {
        "id": "ac03325de3f9f106",
        "type": "debug",
        "z": "3bbea1871a3904e1",
        "name": "debug 19",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1460,
        "y": 280,
        "wires": []
    },
    {
        "id": "81bd29d1f35522bd",
        "type": "switch",
        "z": "3bbea1871a3904e1",
        "name": "Is variable undefined?",
        "property": "bd_loss_1",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "undefined",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 320,
        "y": 2000,
        "wires": [
            [
                "9ad38b5ba75eaf14"
            ]
        ]
    },
    {
        "id": "9ad38b5ba75eaf14",
        "type": "change",
        "z": "3bbea1871a3904e1",
        "name": "Set default value",
        "rules": [
            {
                "t": "set",
                "p": "bd_loss_1",
                "pt": "global",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 2000,
        "wires": [
            []
        ]
    },
    {
        "id": "21ffa7acf59e076b",
        "type": "switch",
        "z": "3bbea1871a3904e1",
        "name": "Is variable undefined?",
        "property": "power_loss_1",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "undefined",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 320,
        "y": 2040,
        "wires": [
            [
                "4f32914063e61d3c"
            ]
        ]
    },
    {
        "id": "4f32914063e61d3c",
        "type": "change",
        "z": "3bbea1871a3904e1",
        "name": "Set default value",
        "rules": [
            {
                "t": "set",
                "p": "power_loss_1",
                "pt": "global",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 2040,
        "wires": [
            []
        ]
    },
    {
        "id": "ae40261acca29600",
        "type": "switch",
        "z": "3bbea1871a3904e1",
        "name": "Is variable undefined?",
        "property": "qualt_loss_1",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "undefined",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 320,
        "y": 2080,
        "wires": [
            [
                "633350e252d6dfc3"
            ]
        ]
    },
    {
        "id": "633350e252d6dfc3",
        "type": "change",
        "z": "3bbea1871a3904e1",
        "name": "Set default value",
        "rules": [
            {
                "t": "set",
                "p": "qualt_loss_1",
                "pt": "global",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 2080,
        "wires": [
            []
        ]
    },
    {
        "id": "e73c79c119a63480",
        "type": "switch",
        "z": "3bbea1871a3904e1",
        "name": "Is variable undefined?",
        "property": "orginat_loss_1",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "undefined",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 320,
        "y": 2120,
        "wires": [
            [
                "727d44b23caf137c"
            ]
        ]
    },
    {
        "id": "727d44b23caf137c",
        "type": "change",
        "z": "3bbea1871a3904e1",
        "name": "Set default value",
        "rules": [
            {
                "t": "set",
                "p": "orginat_loss_1",
                "pt": "global",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 2120,
        "wires": [
            []
        ]
    },
    {
        "id": "37d42e0065d0aa41",
        "type": "switch",
        "z": "3bbea1871a3904e1",
        "name": "Is variable undefined?",
        "property": "setup_loss_1",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "undefined",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 320,
        "y": 2160,
        "wires": [
            [
                "77ed9fb4ea19cce2"
            ]
        ]
    },
    {
        "id": "77ed9fb4ea19cce2",
        "type": "change",
        "z": "3bbea1871a3904e1",
        "name": "Set default value",
        "rules": [
            {
                "t": "set",
                "p": "setup_loss_1",
                "pt": "global",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 2160,
        "wires": [
            []
        ]
    },
    {
        "id": "fc11c876cbc74307",
        "type": "switch",
        "z": "3bbea1871a3904e1",
        "name": "Is variable undefined?",
        "property": "noload_loss_1",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "undefined",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 320,
        "y": 2200,
        "wires": [
            [
                "2701ca9327dbf9c8"
            ]
        ]
    },
    {
        "id": "2701ca9327dbf9c8",
        "type": "change",
        "z": "3bbea1871a3904e1",
        "name": "Set default value",
        "rules": [
            {
                "t": "set",
                "p": "noload_loss_1",
                "pt": "global",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 2200,
        "wires": [
            []
        ]
    },
    {
        "id": "bf6bfdf974745751",
        "type": "switch",
        "z": "3bbea1871a3904e1",
        "name": "total_count_reset",
        "property": "data_update_counter_reset",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 910,
        "y": 480,
        "wires": [
            [
                "4fb4219914386e38"
            ]
        ]
    },
    {
        "id": "ceaa3cb617a13654",
        "type": "change",
        "z": "3bbea1871a3904e1",
        "name": "Set default value",
        "rules": [
            {
                "t": "set",
                "p": "data_update_counter_reset",
                "pt": "global",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1290,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "7ace4ec06849987a",
        "type": "switch",
        "z": "3bbea1871a3904e1",
        "name": "8AM ACTIVE",
        "property": "del_data_chking",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 390,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "6485362e90f9bd31",
        "type": "switch",
        "z": "3bbea1871a3904e1",
        "name": "Is variable undefined?",
        "property": "rejt_part",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "undefined",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 320,
        "y": 2280,
        "wires": [
            [
                "77bde5d15b6c1211"
            ]
        ]
    },
    {
        "id": "77bde5d15b6c1211",
        "type": "change",
        "z": "3bbea1871a3904e1",
        "name": "Set default value",
        "rules": [
            {
                "t": "set",
                "p": "rejt_part",
                "pt": "global",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 2280,
        "wires": [
            []
        ]
    },
    {
        "id": "08c53fbb0413246f",
        "type": "switch",
        "z": "3bbea1871a3904e1",
        "name": "Is variable undefined?",
        "property": "qt_opr_name",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "undefined",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 320,
        "y": 2240,
        "wires": [
            [
                "747a2090d9dbe8b7"
            ]
        ]
    },
    {
        "id": "747a2090d9dbe8b7",
        "type": "change",
        "z": "3bbea1871a3904e1",
        "name": "Set default value",
        "rules": [
            {
                "t": "set",
                "p": "qt_opr_name",
                "pt": "global",
                "to": "NOT MENTIONED",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 2240,
        "wires": [
            []
        ]
    },
    {
        "id": "d0e92beb8f2b8fd3",
        "type": "inject",
        "z": "3bbea1871a3904e1",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 1110,
        "y": 360,
        "wires": [
            [
                "22c4e1833bbf4c4f"
            ]
        ]
    },
    {
        "id": "22c4e1833bbf4c4f",
        "type": "function",
        "z": "3bbea1871a3904e1",
        "name": "function 131",
        "func": "msg.payload = global.get(\"pervious_date\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 360,
        "wires": [
            [
                "c250e8a5aee8a16e"
            ]
        ]
    },
    {
        "id": "c250e8a5aee8a16e",
        "type": "debug",
        "z": "3bbea1871a3904e1",
        "name": "debug 22",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1500,
        "y": 360,
        "wires": []
    },
    {
        "id": "c7e609e9cd1ef9cf",
        "type": "switch",
        "z": "3bbea1871a3904e1",
        "name": "Is variable undefined?",
        "property": "nosample_loss_1",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "undefined",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 321,
        "y": 2320,
        "wires": [
            [
                "2e91a61242a71b85"
            ]
        ]
    },
    {
        "id": "2e91a61242a71b85",
        "type": "change",
        "z": "3bbea1871a3904e1",
        "name": "Set default value",
        "rules": [
            {
                "t": "set",
                "p": "nosample_loss_1",
                "pt": "global",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 2320,
        "wires": [
            []
        ]
    },
    {
        "id": "b0c6f79f9a6e6a6c",
        "type": "change",
        "z": "3bbea1871a3904e1",
        "name": "Set default value",
        "rules": [
            {
                "t": "set",
                "p": "nomanpower_loss_1",
                "pt": "global",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 2360,
        "wires": [
            []
        ]
    },
    {
        "id": "a2ee512cf2353a38",
        "type": "switch",
        "z": "3bbea1871a3904e1",
        "name": "Is variable undefined?",
        "property": "nomanpower_loss_1",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "undefined",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 321,
        "y": 2360,
        "wires": [
            [
                "b0c6f79f9a6e6a6c"
            ]
        ]
    },
    {
        "id": "29976ced0c22ef69",
        "type": "change",
        "z": "3bbea1871a3904e1",
        "name": "Set default value",
        "rules": [
            {
                "t": "set",
                "p": "nolifter_loss_1",
                "pt": "global",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 2400,
        "wires": [
            []
        ]
    },
    {
        "id": "f1329d8baee1a8cc",
        "type": "switch",
        "z": "3bbea1871a3904e1",
        "name": "Is variable undefined?",
        "property": "nolifter_loss_1",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "undefined",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 321,
        "y": 2400,
        "wires": [
            [
                "29976ced0c22ef69"
            ]
        ]
    },
    {
        "id": "3726045d20e769a0",
        "type": "inject",
        "z": "3bbea1871a3904e1",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.1",
        "topic": "",
        "x": 2730,
        "y": 520,
        "wires": [
            [
                "c90c83475ff3a2cf",
                "b38a8e65b0c88e20"
            ]
        ]
    },
    {
        "id": "b38a8e65b0c88e20",
        "type": "function",
        "z": "3bbea1871a3904e1",
        "name": "function 158",
        "func": "msg.payload = global.get(\"pervious_date\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3090,
        "y": 420,
        "wires": [
            [
                "2111f6455d4e1b41"
            ]
        ]
    },
    {
        "id": "2111f6455d4e1b41",
        "type": "debug",
        "z": "3bbea1871a3904e1",
        "name": "debug 29",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3320,
        "y": 420,
        "wires": []
    },
    {
        "id": "5d010f46ed29f5ad",
        "type": "inject",
        "z": "378dbc1dc89874c8",
        "d": true,
        "name": "",
        "props": [],
        "repeat": "3600",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 160,
        "wires": [
            [
                "5ae09c4b30a8d88c"
            ]
        ]
    },
    {
        "id": "5ae09c4b30a8d88c",
        "type": "function",
        "z": "378dbc1dc89874c8",
        "name": "Function",
        "func": "var d = new Date();\nvar dformat = d.toLocaleTimeString();\nvar gas = global.get(\"gas_cons\");\nvar production = global.get(\"full_day_counter\");\nvar dtstmp = new Date().toString();\nvar pld = \"INSERT INTO[node_red].[dbo].[GAS_PRODUCTION](TIME,GAS,PRODUCTION)\"      \npld = pld + \"VALUES ('\" + dformat + \"','\" + gas + \"','\" + production + \"')\"\nmsg.payload = pld\nreturn msg;\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "8f26561c3d781643",
        "type": "MSSQL",
        "z": "378dbc1dc89874c8",
        "mssqlCN": "76839cf0e528d185",
        "name": "",
        "query": "",
        "outField": "payload",
        "x": 400,
        "y": 160,
        "wires": [
            [
                "f2d82c24f95583f2"
            ]
        ]
    },
    {
        "id": "f2d82c24f95583f2",
        "type": "delay",
        "z": "378dbc1dc89874c8",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 560,
        "y": 160,
        "wires": [
            [
                "cde6a0f1434cd77d"
            ]
        ]
    },
    {
        "id": "cde6a0f1434cd77d",
        "type": "function",
        "z": "378dbc1dc89874c8",
        "name": "Function",
        "func": "var pld = \"SELECT TIME,GAS,PRODUCTION \"\npld = pld + \"FROM [node_red].[dbo].[GAS_PRODUCTION] \"\nmsg.payload = pld + \"ORDER BY TIME\"\nreturn msg;\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 160,
        "wires": [
            [
                "788458b43ebb3372"
            ]
        ]
    },
    {
        "id": "788458b43ebb3372",
        "type": "MSSQL",
        "z": "378dbc1dc89874c8",
        "mssqlCN": "76839cf0e528d185",
        "name": "",
        "query": "",
        "outField": "payload",
        "x": 880,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "e3f058a976b379b0",
        "type": "ui_chart",
        "z": "378dbc1dc89874c8",
        "name": "",
        "group": "",
        "order": 1,
        "width": 29,
        "height": 16,
        "label": "GAS (SCM) VS PRODUCTION NO\"S",
        "chartType": "bar",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "no data",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": "50",
        "useOneColor": true,
        "useUTC": false,
        "colors": [
            "#05e6cc",
            "#0fff13",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1310,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "dd1c18a46349ea77",
        "type": "function",
        "z": "378dbc1dc89874c8",
        "name": "function 126",
        "func": "var labels = [];\nvar gas = [];\nvar production = [];\n\nfor (var i = 0; i < msg.payload.length; i++) {\n    labels.push(msg.payload[i].TIME);\n    gas.push(msg.payload[i].GAS);\n    production.push(msg.payload[i].PRODUCTION);\n}\n\nmsg.payload = [\n    {\n        \"series\": [\"Gas\", \"Production\"],\n        \"data\": [gas, production],\n        \"labels\": labels\n    }\n];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 160,
        "wires": [
            [
                "e3f058a976b379b0",
                "bc39f9107adf88e3"
            ]
        ]
    },
    {
        "id": "3d4e6f37ea555516",
        "type": "inject",
        "z": "378dbc1dc89874c8",
        "d": true,
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "40 08 * * *",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "x": 130,
        "y": 240,
        "wires": [
            [
                "bfcd1d66173ae228"
            ]
        ]
    },
    {
        "id": "bfcd1d66173ae228",
        "type": "function",
        "z": "378dbc1dc89874c8",
        "name": "DELETE",
        "func": "//DELETE FROM table_name WHERE condition\n//var delt_item = global.get(\"erase_selected\");\n\nvar pld = \" DELETE FROM [node_red].[dbo].[GAS_PRODUCTION] \" \n    \n//pld = pld + \" WHERE TIME = '\" + delt_item + \"' \"\nmsg.payload = pld\nreturn msg;\n\n\n//[node_red].[dbo].\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 240,
        "wires": [
            [
                "d60c8358c14e72d8"
            ]
        ]
    },
    {
        "id": "d60c8358c14e72d8",
        "type": "MSSQL",
        "z": "378dbc1dc89874c8",
        "mssqlCN": "76839cf0e528d185",
        "name": "MSSQL",
        "query": "",
        "outField": "payload",
        "x": 440,
        "y": 240,
        "wires": [
            [
                "f2d82c24f95583f2"
            ]
        ]
    },
    {
        "id": "bc39f9107adf88e3",
        "type": "debug",
        "z": "378dbc1dc89874c8",
        "name": "debug 21",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1240,
        "y": 200,
        "wires": []
    },
    {
        "id": "2ddbfddde8333dc9",
        "type": "function",
        "z": "378dbc1dc89874c8",
        "name": "function 129",
        "func": "var g = require('csv')\nmsg.payload = g\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "c8f75a3e2f4df051",
        "type": "inject",
        "z": "378dbc1dc89874c8",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 570,
        "y": 480,
        "wires": [
            [
                "2ddbfddde8333dc9"
            ]
        ]
    },
    {
        "id": "554a4f1a09329ab4",
        "type": "inject",
        "z": "7fbd92b77e7e69c1",
        "name": "Every 5 sec",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "x": 450,
        "y": 340,
        "wires": [
            [
                "0ff7d70238fcf36e",
                "196c99adffd1c905"
            ]
        ]
    },
    {
        "id": "0ff7d70238fcf36e",
        "type": "function",
        "z": "7fbd92b77e7e69c1",
        "name": "Build SQL Query",
        "func": "//var pld = \"SELECT TOP 10 \" //NO_LOAD,TOTAL_DOWN_TIME \"\n\n\n//pld = pld + \"FROM [Furnace].[dbo].[QUENCHING] \"\n\n//pld = pld + \"WHERE TIME = '\" + ontime + \" ' \";\n//pld = pld + \"WHERE TIME BETWEEN '\" + ontime + \" ' AND ' \" + offtime + \"' ORDER BY TIME \";\n//pld = pld + \" ORDER BY Time_Stamp DESC \";\n\n//pld = pld + \"VALUES ('\" + gk + \"','\" + dformat + \"')\"\n//msg.payload = pld\n//return msg;\n\nmsg.payload = \"SELECT TOP 10 * FROM TEST ORDER BY ID DESC\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 340,
        "wires": [
            [
                "994688c80b62b2fa"
            ]
        ]
    },
    {
        "id": "994688c80b62b2fa",
        "type": "MSSQL",
        "z": "7fbd92b77e7e69c1",
        "mssqlCN": "489ecfa5c218484f",
        "name": "Query SQL Server",
        "query": "",
        "outField": "payload",
        "x": 830,
        "y": 340,
        "wires": [
            [
                "f38ed25caedf7dcb",
                "53cffb9cc594fafb"
            ]
        ]
    },
    {
        "id": "f38ed25caedf7dcb",
        "type": "function",
        "z": "7fbd92b77e7e69c1",
        "name": "Format Data",
        "func": "msg.payload = {\n  columns: Object.keys(msg.payload[0] || {}),\n  rows: msg.payload\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1030,
        "y": 340,
        "wires": [
            [
                "b362b817a48236c4"
            ]
        ]
    },
    {
        "id": "b362b817a48236c4",
        "type": "ui_template",
        "z": "7fbd92b77e7e69c1",
        "group": "",
        "name": "Live Table",
        "order": 1,
        "width": 12,
        "height": 8,
        "format": "<table border=\"1\" style=\"width:100%; text-align:center;\">\n  <tr>\n    <th ng-repeat=\"col in msg.payload.columns\">{{col}}</th>\n  </tr>\n  <tr ng-repeat=\"row in msg.payload.rows\">\n    <td ng-repeat=\"col in msg.payload.columns\">{{row[col]}}</td>\n  </tr>\n</table>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1240,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "53cffb9cc594fafb",
        "type": "debug",
        "z": "7fbd92b77e7e69c1",
        "name": "debug 30",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 440,
        "wires": []
    },
    {
        "id": "196c99adffd1c905",
        "type": "ui_template",
        "z": "7fbd92b77e7e69c1",
        "group": "",
        "name": "",
        "order": 5,
        "width": 0,
        "height": 0,
        "format": "<template>\n    <div id=\"card-container\" style=\"perspective: 1000px;\">\n        <div id=\"flip-card\" style=\"transition: transform 0.6s; transform-style: preserve-3d;\">\n            <canvas id=\"myChart\"></canvas>\n        </div>\n    </div>\n\n    <script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\n    <script>\n        let chart;\n    let flipping = false;\n\n    const createChart = (labels, data) => {\n      const ctx = document.getElementById('myChart').getContext('2d');\n      chart = new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels,\n          datasets: [{\n            label: 'Data',\n            data,\n            backgroundColor: '#3399ff'\n          }]\n        },\n        options: {\n          responsive: true,\n          animation: { duration: 0 },\n          scales: {\n            y: { beginAtZero: true }\n          }\n        }\n      });\n    };\n\n    const flipAndUpdate = (labels, data) => {\n      const card = document.getElementById('flip-card');\n      if (flipping) return;\n      flipping = true;\n\n      card.style.transform = 'rotateY(180deg)';\n      setTimeout(() => {\n        chart.destroy();\n        createChart(labels, data);\n        card.style.transform = 'rotateY(0deg)';\n        flipping = false;\n      }, 600); // Match transition time\n    };\n\n    // First chart\n    setTimeout(() => {\n      createChart(['A', 'B', 'C'], [5, 10, 3]);\n    }, 100);\n\n    // Listen to new data from Node-RED\n    (function(scope) {\n      scope.$watch('msg.payload', function(payload) {\n        if (payload && payload.labels && payload.data) {\n          flipAndUpdate(payload.labels, payload.data);\n        }\n      });\n    })(scope);\n    </script>\n</template>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1280,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "ccd454ddca76aa67",
        "type": "inject",
        "z": "990647560aae96b0",
        "name": "Rotate View",
        "props": [],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payloadType": "date",
        "x": 390,
        "y": 340,
        "wires": [
            [
                "8de588d3b9c849bc"
            ]
        ]
    },
    {
        "id": "8de588d3b9c849bc",
        "type": "function",
        "z": "990647560aae96b0",
        "name": "Cycle Station",
        "func": "const stations = ['A', 'B', 'C'];\nlet index = flow.get('stationIndex') || 0;\n\nlet station = stations[index];\nflow.set('stationIndex', (index + 1) % stations.length);\n\nlet qr = 'QR' + Math.floor(Math.random() * 1000000);\nlet status = Math.random() > 0.5 ? 'PASS' : 'FAIL';\nlet time = new Date().toLocaleString();\n\nmsg.payload = {\n    station: station,\n    qr: qr,\n    status: status,\n    time: time\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 590,
        "y": 340,
        "wires": [
            [
                "a6505d10974ad155"
            ]
        ]
    },
    {
        "id": "a6505d10974ad155",
        "type": "ui_template",
        "z": "990647560aae96b0",
        "group": "",
        "name": "Card View",
        "order": 1,
        "width": 12,
        "height": 8,
        "format": "<div style=\"text-align:center; transition: all 0.5s ease; border: 1px solid #ccc; border-radius: 12px; padding: 20px; background: #f5f5f5;\">\n  <h2 style=\"color:#333;\">Station {{msg.payload.station}}</h2>\n  <h3>QR Code: <span style=\"color: #0074D9;\">{{msg.payload.qr}}</span></h3>\n  <h3>Status: <span style=\"color: {{msg.payload.status === 'PASS' ? 'green' : 'red'}}\">{{msg.payload.status}}</span></h3>\n  <p><i>{{msg.payload.time}}</i></p>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 810,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "19d6a1df6a51c81d",
        "type": "inject",
        "z": "990647560aae96b0",
        "name": "Rotate View",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "5",
        "payload": "",
        "payloadType": "date",
        "x": 390,
        "y": 440,
        "wires": [
            [
                "2280bcdf7c60629a"
            ]
        ]
    },
    {
        "id": "2280bcdf7c60629a",
        "type": "function",
        "z": "990647560aae96b0",
        "name": "Cycle Station",
        "func": "let stations = ['A', 'B', 'C'];\nlet index = flow.get('stationIndex') || 0;\nlet nextStation = stations[index];\nflow.set('stationIndex', (index + 1) % stations.length);\n\nlet qr = 'QR' + Math.floor(Math.random()*1000000);\nlet status = Math.random() > 0.5 ? 'PASS' : 'FAIL';\nlet time = new Date().toLocaleString();\n\nmsg.payload = {\n    station: nextStation,\n    qr: qr,\n    status: status,\n    time: time\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 440,
        "wires": [
            [
                "5ade34da610390b7"
            ]
        ]
    },
    {
        "id": "5ade34da610390b7",
        "type": "ui_template",
        "z": "990647560aae96b0",
        "group": "",
        "name": "Card View",
        "order": 1,
        "width": 12,
        "height": 8,
        "format": "<div style=\"text-align:center; transition: all 0.5s ease; border: 1px solid #ccc; border-radius: 12px; padding: 20px; background: #f5f5f5;\">\n  <h2 style=\"color:#333;\">Station {{msg.payload.station}}</h2>\n  <h3>QR Code: <span style=\"color: #0074D9;\">{{msg.payload.qr}}</span></h3>\n  <h3>Status: <span ng-style=\"{'color': msg.payload.status === 'PASS' ? 'green' : 'red'}\">{{msg.payload.status}}</span></h3>\n  <p><i>{{msg.payload.time}}</i></p>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 810,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "3f78830e73171e0a",
        "type": "inject",
        "z": "990647560aae96b0",
        "name": "New value",
        "props": [
            {
                "p": "new_value"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Test-QR-Value",
        "payloadType": "str",
        "x": 300,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "5aa786b6f0b6f357",
        "type": "function",
        "z": "990647560aae96b0",
        "name": "Check count ≥ 8?",
        "func": "let count = msg.payload[0].rowcount;\nmsg.value = msg.new_value;\n\nif (count >= 8) {\n    msg.topic = \"DELETE TOP(1) FROM LineData ORDER BY created_at ASC\";\n    return [msg, null];\n} else {\n    return [null, msg];\n}",
        "outputs": 2,
        "x": 700,
        "y": 640,
        "wires": [
            [],
            [
                "b96ab91b523c9d7b"
            ]
        ]
    },
    {
        "id": "b96ab91b523c9d7b",
        "type": "function",
        "z": "990647560aae96b0",
        "name": "Insert New",
        "func": "msg.topic = \"INSERT INTO LineData (value) VALUES (@value)\";\nmsg.payload = { value: msg.value };\nreturn msg;",
        "outputs": 1,
        "x": 930,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "484c301e680fab74",
        "type": "inject",
        "z": "990647560aae96b0",
        "name": "Inject Data",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 450,
        "y": 180,
        "wires": [
            [
                "e9a0298a98e94da5"
            ]
        ]
    },
    {
        "id": "e9a0298a98e94da5",
        "type": "function",
        "z": "990647560aae96b0",
        "name": "Prepare Chart & Title",
        "func": "const labels = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\"];\nconst values = [120, 150, 180, 170, 200];\n\nlet chartMsgs = [];\n\nfor (let i = 0; i < labels.length; i++) {\n    chartMsgs.push({\n        topic: labels[i],\n        payload: values[i]\n    });\n}\n\nlet titleMsg = {\n    payload: \"📊 Production Chart (Mon–Fri)\"\n};\n\nreturn [chartMsgs, titleMsg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 180,
        "wires": [
            [
                "dc5a7d81a79d141c"
            ],
            [
                "6c9ed342f7f1d212"
            ]
        ]
    },
    {
        "id": "dc5a7d81a79d141c",
        "type": "ui_chart",
        "z": "990647560aae96b0",
        "name": "Production Chart",
        "group": "",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "bar",
        "legend": "false",
        "xformat": "auto",
        "interpolate": "linear",
        "nodata": "Waiting for data...",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#0088cc",
            "#e67e22",
            "#2ecc71"
        ],
        "outputs": 1,
        "x": 930,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "6c9ed342f7f1d212",
        "type": "ui_text",
        "z": "990647560aae96b0",
        "group": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Chart Title",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "x": 940,
        "y": 200,
        "wires": []
    },
    {
        "id": "826a4cd988d53954",
        "type": "mqtt out",
        "z": "990647560aae96b0",
        "name": "",
        "topic": "sensors/livingroom/temp",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "720a4d4e9e8a28d4",
        "x": 550,
        "y": 2180,
        "wires": []
    },
    {
        "id": "fcbd8ecad882d3a3",
        "type": "inject",
        "z": "990647560aae96b0",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "22",
        "payloadType": "num",
        "x": 370,
        "y": 2180,
        "wires": [
            [
                "826a4cd988d53954"
            ]
        ]
    },
    {
        "id": "684b8ad6fb11a0d1",
        "type": "mqtt in",
        "z": "990647560aae96b0",
        "name": "",
        "topic": "sensors/livingroom/temp",
        "qos": "2",
        "broker": "720a4d4e9e8a28d4",
        "inputs": 0,
        "x": 390,
        "y": 2260,
        "wires": [
            [
                "811634944f0c0c96"
            ]
        ]
    },
    {
        "id": "811634944f0c0c96",
        "type": "debug",
        "z": "990647560aae96b0",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 590,
        "y": 2260,
        "wires": []
    },
    {
        "id": "915192855ef328ef",
        "type": "mqtt out",
        "z": "990647560aae96b0",
        "name": "",
        "topic": "PLC/D10",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "982d18a4808358eb",
        "x": 860,
        "y": 1000,
        "wires": []
    },
    {
        "id": "6e15018892f88aef",
        "type": "inject",
        "z": "990647560aae96b0",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "10",
        "payloadType": "num",
        "x": 670,
        "y": 1000,
        "wires": [
            [
                "915192855ef328ef"
            ]
        ]
    },
    {
        "id": "76761e03d7efb1e0",
        "type": "debug",
        "z": "990647560aae96b0",
        "name": "debug 33",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 1080,
        "wires": []
    },
    {
        "id": "3b6d15e9f81bda5c",
        "type": "aedes broker",
        "z": "990647560aae96b0",
        "name": "",
        "mqtt_port": 1883,
        "mqtt_ws_bind": "port",
        "mqtt_ws_port": "",
        "mqtt_ws_path": "",
        "cert": "",
        "key": "",
        "certname": "",
        "keyname": "",
        "dburl": "",
        "usetls": false,
        "x": 470,
        "y": 860,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "286d8cc48834db60",
        "type": "inject",
        "z": "cf444a0c82b7cb13",
        "name": "Group 1 Data",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"title\":\"Group 1 Production\",\"labels\":[\"Line A\",\"Line B\"],\"values\":[100,150]}",
        "payloadType": "json",
        "x": 150,
        "y": 100,
        "wires": [
            [
                "e940704441e45b84"
            ]
        ]
    },
    {
        "id": "072902b7ca6f449f",
        "type": "inject",
        "z": "cf444a0c82b7cb13",
        "name": "Group 2 Data",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"title\":\"Group 2 Production\",\"labels\":[\"Line X\",\"Line Y\",\"Line Z\"],\"values\":[90,120,80]}",
        "payloadType": "json",
        "x": 150,
        "y": 180,
        "wires": [
            [
                "ea7274ed8c67bad0"
            ]
        ]
    },
    {
        "id": "e940704441e45b84",
        "type": "ui_template",
        "z": "cf444a0c82b7cb13",
        "group": "",
        "name": "Bar Chart - Group 1",
        "order": 1,
        "width": 12,
        "height": 7,
        "format": "<canvas id=\"chartGroup1\" width=\"930\" height=\"330\"></canvas>\n<script src=\"https://cdn.jsdelivr.net/npm/chart.js@2.9.4/dist/Chart.min.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@0.7.0\"></script>\n<script>\n(function(scope) {\n    scope.$watch('msg.payload', function(data) {\n        if (!data || !data.labels || !data.values) return;\n\n        const canvasId = 'chartGroup1';\n        const chartVar = 'myChartGroup1';\n\n        const ctx = document.getElementById(canvasId).getContext('2d');\n\n        if (window[chartVar]) {\n            window[chartVar].destroy();\n        }\n\n        window[chartVar] = new Chart(ctx, {\n            type: 'bar',\n            data: {\n                labels: data.labels,\n                datasets: [{\n                    label: data.label || 'Production',\n                    data: data.values,\n                    backgroundColor: data.colors || [\n                        '#4285F4', '#FB8C00', '#34A853'\n                    ]\n                }]\n            },\n            options: {\n                title: {\n                    display: !!data.title,\n                    text: data.title || '',\n                    fontColor: '#ffffff',\n                    fontSize: 18\n                },\n                plugins: {\n                    datalabels: {\n                        color: '#fff',\n                        anchor: 'end',\n                        align: 'start',\n                        font: {\n                            weight: 'bold',\n                            size: 14\n                        },\n                        formatter: function(value) {\n                            return value;\n                        }\n                    }\n                },\n                legend: {\n                    display: false\n                },\n                scales: {\n                    yAxes: [{\n                        ticks: {\n                            beginAtZero: true,\n                            fontColor: '#ffffff'\n                        }\n                    }],\n                    xAxes: [{\n                        ticks: {\n                            fontColor: '#ffffff'\n                        }\n                    }]\n                }\n            },\n            plugins: [ChartDataLabels]\n        });\n    });\n})(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 420,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "ea7274ed8c67bad0",
        "type": "ui_template",
        "z": "cf444a0c82b7cb13",
        "group": "",
        "name": "Bar Chart - Group 2",
        "order": 1,
        "width": 12,
        "height": 7,
        "format": "<canvas id=\"chartGroup2\" width=\"930\" height=\"330\"></canvas>\n<script src=\"https://cdn.jsdelivr.net/npm/chart.js@2.9.4/dist/Chart.min.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@0.7.0\"></script>\n<script>\n(function(scope) {\n    scope.$watch('msg.payload', function(data) {\n        if (!data || !data.labels || !data.values) return;\n\n        const canvasId = 'chartGroup2';\n        const chartVar = 'myChartGroup2';\n\n        const ctx = document.getElementById(canvasId).getContext('2d');\n\n        if (window[chartVar]) {\n            window[chartVar].destroy();\n        }\n\n        window[chartVar] = new Chart(ctx, {\n            type: 'bar',\n            data: {\n                labels: data.labels,\n                datasets: [{\n                    label: data.label || 'Production',\n                    data: data.values,\n                    backgroundColor: data.colors || [\n                        '#AECBFA', '#EA4335', '#34A853'\n                    ]\n                }]\n            },\n            options: {\n                title: {\n                    display: !!data.title,\n                    text: data.title || '',\n                    fontColor: '#ffffff',\n                    fontSize: 18\n                },\n                plugins: {\n                    datalabels: {\n                        color: '#fff',\n                        anchor: 'end',\n                        align: 'start',\n                        font: {\n                            weight: 'bold',\n                            size: 14\n                        },\n                        formatter: function(value) {\n                            return value;\n                        }\n                    }\n                },\n                legend: {\n                    display: false\n                },\n                scales: {\n                    yAxes: [{\n                        ticks: {\n                            beginAtZero: true,\n                            fontColor: '#ffffff'\n                        }\n                    }],\n                    xAxes: [{\n                        ticks: {\n                            fontColor: '#ffffff'\n                        }\n                    }]\n                }\n            },\n            plugins: [ChartDataLabels]\n        });\n    });\n})(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 430,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "fd49f547983714ee",
        "type": "MC Read",
        "z": "cf444a0c82b7cb13",
        "name": "Mitshubishi_read",
        "topic": "",
        "connection": "de8fd6fff3d9e828",
        "address": "DSTR5001,16",
        "addressType": "str",
        "outputFormat": "1",
        "errorHandling": "throw",
        "outputs": 1,
        "x": 810,
        "y": 440,
        "wires": [
            [
                "8408afb713ef83d8"
            ]
        ]
    },
    {
        "id": "089ad8b6011f7ef9",
        "type": "inject",
        "z": "cf444a0c82b7cb13",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "connect",
        "payloadType": "msg",
        "x": 610,
        "y": 380,
        "wires": [
            [
                "fd49f547983714ee",
                "b85528b7d97a71b0",
                "33e4ec6474a21b0c",
                "77581a029df4cdab",
                "b94005c9af98e631",
                "9ec7a2b485d0c1bf"
            ]
        ]
    },
    {
        "id": "b85528b7d97a71b0",
        "type": "MC Read",
        "z": "cf444a0c82b7cb13",
        "name": "Mitshubishi_read",
        "topic": "",
        "connection": "de8fd6fff3d9e828",
        "address": "DSTR5009,17",
        "addressType": "str",
        "outputFormat": "1",
        "errorHandling": "throw",
        "outputs": 1,
        "x": 810,
        "y": 500,
        "wires": [
            [
                "6295ac2c8d82e3af"
            ]
        ]
    },
    {
        "id": "33e4ec6474a21b0c",
        "type": "MC Read",
        "z": "cf444a0c82b7cb13",
        "name": "Mitshubishi_read",
        "topic": "",
        "connection": "de8fd6fff3d9e828",
        "address": "DSTR5018,17",
        "addressType": "str",
        "outputFormat": "1",
        "errorHandling": "throw",
        "outputs": 1,
        "x": 810,
        "y": 560,
        "wires": [
            [
                "e1a11fa2f224571a"
            ]
        ]
    },
    {
        "id": "8408afb713ef83d8",
        "type": "debug",
        "z": "cf444a0c82b7cb13",
        "name": "STRING_DATA0",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 440,
        "wires": []
    },
    {
        "id": "6295ac2c8d82e3af",
        "type": "debug",
        "z": "cf444a0c82b7cb13",
        "name": "STRING_DATA1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 500,
        "wires": []
    },
    {
        "id": "e1a11fa2f224571a",
        "type": "debug",
        "z": "cf444a0c82b7cb13",
        "name": "STRING_DATA2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 560,
        "wires": []
    },
    {
        "id": "77581a029df4cdab",
        "type": "MC Read",
        "z": "cf444a0c82b7cb13",
        "name": "Mitshubishi_read",
        "topic": "",
        "connection": "de8fd6fff3d9e828",
        "address": "DDINT4096,10",
        "addressType": "str",
        "outputFormat": "1",
        "errorHandling": "throw",
        "outputs": 1,
        "x": 810,
        "y": 620,
        "wires": [
            [
                "9931b0ade953775c"
            ]
        ]
    },
    {
        "id": "9931b0ade953775c",
        "type": "debug",
        "z": "cf444a0c82b7cb13",
        "name": "DOUBLE INTEGER DATA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 620,
        "wires": []
    },
    {
        "id": "b94005c9af98e631",
        "type": "MC Read",
        "z": "cf444a0c82b7cb13",
        "name": "Mitshubishi_read",
        "topic": "",
        "connection": "de8fd6fff3d9e828",
        "address": "D0",
        "addressType": "str",
        "outputFormat": "1",
        "errorHandling": "throw",
        "outputs": 1,
        "x": 810,
        "y": 680,
        "wires": [
            [
                "1957234210508b11"
            ]
        ]
    },
    {
        "id": "1957234210508b11",
        "type": "debug",
        "z": "cf444a0c82b7cb13",
        "name": "SINGLE DEVICE DATA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 680,
        "wires": []
    },
    {
        "id": "9ec7a2b485d0c1bf",
        "type": "MC Read",
        "z": "cf444a0c82b7cb13",
        "name": "Mitshubishi_read",
        "topic": "",
        "connection": "de8fd6fff3d9e828",
        "address": "M3600",
        "addressType": "str",
        "outputFormat": "1",
        "errorHandling": "throw",
        "outputs": 1,
        "x": 810,
        "y": 740,
        "wires": [
            [
                "87c299cbbb7ab748"
            ]
        ]
    },
    {
        "id": "87c299cbbb7ab748",
        "type": "debug",
        "z": "cf444a0c82b7cb13",
        "name": "BIT DATA",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 740,
        "wires": []
    },
    {
        "id": "2690d69ef59b4534",
        "type": "comment",
        "z": "cf444a0c82b7cb13",
        "name": "DATA FORMAT ",
        "info": "INT DATA DINT0,10 WHERE 0 IS STARTING POINT D0 AND 10 IS LENGTH.\nDINT DATA DDINT0,10.\nUINT DATA DUINT0,10.",
        "x": 1280,
        "y": 620,
        "wires": []
    }
]